
A4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f4  00800200  000020b8  0000214c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000019cb  008002f4  008002f4  00002240  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002240  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002270  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b8  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006732  00000000  00000000  00002668  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002224  00000000  00000000  00008d9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002ede  00000000  00000000  0000afbe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000010a8  00000000  00000000  0000de9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bf5  00000000  00000000  0000ef44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004b8a  00000000  00000000  00010b39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d0  00000000  00000000  000156c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	86 c0       	rjmp	.+268    	; 0x10e <_ZL7wdt_offv>
       2:	00 00       	nop
       4:	fc c0       	rjmp	.+504    	; 0x1fe <__bad_interrupt>
       6:	00 00       	nop
       8:	fa c0       	rjmp	.+500    	; 0x1fe <__bad_interrupt>
       a:	00 00       	nop
       c:	f8 c0       	rjmp	.+496    	; 0x1fe <__bad_interrupt>
       e:	00 00       	nop
      10:	f6 c0       	rjmp	.+492    	; 0x1fe <__bad_interrupt>
      12:	00 00       	nop
      14:	f4 c0       	rjmp	.+488    	; 0x1fe <__bad_interrupt>
      16:	00 00       	nop
      18:	f2 c0       	rjmp	.+484    	; 0x1fe <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f0 c0       	rjmp	.+480    	; 0x1fe <__bad_interrupt>
      1e:	00 00       	nop
      20:	ee c0       	rjmp	.+476    	; 0x1fe <__bad_interrupt>
      22:	00 00       	nop
      24:	c5 c3       	rjmp	.+1930   	; 0x7b0 <__vector_9>
      26:	00 00       	nop
      28:	f6 c3       	rjmp	.+2028   	; 0x816 <__vector_10>
      2a:	00 00       	nop
      2c:	27 c4       	rjmp	.+2126   	; 0x87c <__vector_11>
      2e:	00 00       	nop
      30:	e6 c0       	rjmp	.+460    	; 0x1fe <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 be 09 	jmp	0x137c	; 0x137c <__vector_13>
      38:	0c 94 f1 09 	jmp	0x13e2	; 0x13e2 <__vector_14>
      3c:	e0 c0       	rjmp	.+448    	; 0x1fe <__bad_interrupt>
      3e:	00 00       	nop
      40:	de c0       	rjmp	.+444    	; 0x1fe <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__vector_17>
      48:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__vector_18>
      4c:	0c 94 8a 0a 	jmp	0x1514	; 0x1514 <__vector_19>
      50:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__vector_20>
      54:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__vector_21>
      58:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__vector_22>
      5c:	69 c7       	rjmp	.+3794   	; 0xf30 <__vector_23>
      5e:	00 00       	nop
      60:	ce c0       	rjmp	.+412    	; 0x1fe <__bad_interrupt>
      62:	00 00       	nop
      64:	cc c0       	rjmp	.+408    	; 0x1fe <__bad_interrupt>
      66:	00 00       	nop
      68:	ca c0       	rjmp	.+404    	; 0x1fe <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c8 c0       	rjmp	.+400    	; 0x1fe <__bad_interrupt>
      6e:	00 00       	nop
      70:	c6 c0       	rjmp	.+396    	; 0x1fe <__bad_interrupt>
      72:	00 00       	nop
      74:	c4 c0       	rjmp	.+392    	; 0x1fe <__bad_interrupt>
      76:	00 00       	nop
      78:	c2 c0       	rjmp	.+388    	; 0x1fe <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c0 c0       	rjmp	.+384    	; 0x1fe <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__vector_32>
      84:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__vector_33>
      88:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__vector_34>
      8c:	0c 94 89 0b 	jmp	0x1712	; 0x1712 <__vector_35>
      90:	b6 c0       	rjmp	.+364    	; 0x1fe <__bad_interrupt>
      92:	00 00       	nop
      94:	b4 c0       	rjmp	.+360    	; 0x1fe <__bad_interrupt>
      96:	00 00       	nop
      98:	b2 c0       	rjmp	.+356    	; 0x1fe <__bad_interrupt>
      9a:	00 00       	nop
      9c:	b0 c0       	rjmp	.+352    	; 0x1fe <__bad_interrupt>
      9e:	00 00       	nop
      a0:	ae c0       	rjmp	.+348    	; 0x1fe <__bad_interrupt>
      a2:	00 00       	nop
      a4:	ac c0       	rjmp	.+344    	; 0x1fe <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__vector_42>
      ac:	0c 94 ef 0b 	jmp	0x17de	; 0x17de <__vector_43>
      b0:	0c 94 22 0c 	jmp	0x1844	; 0x1844 <__vector_44>
      b4:	0c 94 55 0c 	jmp	0x18aa	; 0x18aa <__vector_45>
      b8:	a2 c0       	rjmp	.+324    	; 0x1fe <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 88 0c 	jmp	0x1910	; 0x1910 <__vector_47>
      c0:	0c 94 bb 0c 	jmp	0x1976	; 0x1976 <__vector_48>
      c4:	0c 94 ee 0c 	jmp	0x19dc	; 0x19dc <__vector_49>
      c8:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <__vector_50>
      cc:	98 c0       	rjmp	.+304    	; 0x1fe <__bad_interrupt>
      ce:	00 00       	nop
      d0:	96 c0       	rjmp	.+300    	; 0x1fe <__bad_interrupt>
      d2:	00 00       	nop
      d4:	94 c0       	rjmp	.+296    	; 0x1fe <__bad_interrupt>
      d6:	00 00       	nop
      d8:	92 c0       	rjmp	.+292    	; 0x1fe <__bad_interrupt>
      da:	00 00       	nop
      dc:	90 c0       	rjmp	.+288    	; 0x1fe <__bad_interrupt>
      de:	00 00       	nop
      e0:	8e c0       	rjmp	.+284    	; 0x1fe <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	45 4e       	sbci	r20, 0xE5	; 229
      e6:	44 20       	and	r4, r4
      e8:	20 20       	and	r2, r0
	...

000000eb <_ZL10disp_start>:
      eb:	53 54 41 52 54 20 00                                START .

000000f2 <_ZL11disp_normal>:
      f2:	4e 4f 52 4d 41 4c 00                                NORMAL.

000000f9 <_ZL11init_bottom>:
      f9:	50 68 61 73 65 3a 20 00                             Phase: .

00000101 <_ZL8init_top>:
     101:	53 74 61 74 65 3a 20 00 00                          State: ..

0000010a <__ctors_start>:
     10a:	b0 03       	fmuls	r19, r16
     10c:	99 08       	sbc	r9, r9

0000010e <_ZL7wdt_offv>:
// ausgeschaltet werden, sonst ensteht eine endlose RESET-Schleife. 
// Zu diesem Zweck wird der Aufruf von wdt_off() in die frueheste init-Sektion
// eingebaut - dieser Code wird unmittelbar nach RESET ausgefuehrt.

static void wdt_off (void) __attribute__((section(".init0"),naked, used));
static void wdt_off (void) {MCUSR = 0; wdt_disable();}
     10e:	14 be       	out	0x34, r1	; 52
				"out __SREG__,__tmp_reg__"   "\n\t"
				: [TEMPREG] "=d" (temp_reg)
				: [WDTREG]  "n"  (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
				: "r0"
		);
     110:	0f b6       	in	r0, 0x3f	; 63
     112:	f8 94       	cli
     114:	a8 95       	wdr
     116:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     11a:	88 61       	ori	r24, 0x18	; 24
     11c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     120:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     124:	0f be       	out	0x3f, r0	; 63

00000126 <_ZL7wdt_offv>:
     126:	14 be       	out	0x34, r1	; 52
     128:	0f b6       	in	r0, 0x3f	; 63
     12a:	f8 94       	cli
     12c:	a8 95       	wdr
     12e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     132:	88 61       	ori	r24, 0x18	; 24
     134:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     138:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     13c:	0f be       	out	0x3f, r0	; 63

0000013e <_ZL7wdt_offv>:
     13e:	14 be       	out	0x34, r1	; 52
     140:	0f b6       	in	r0, 0x3f	; 63
     142:	f8 94       	cli
     144:	a8 95       	wdr
     146:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     14a:	88 61       	ori	r24, 0x18	; 24
     14c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     150:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     154:	0f be       	out	0x3f, r0	; 63

00000156 <_ZL7wdt_offv>:
     156:	14 be       	out	0x34, r1	; 52
     158:	0f b6       	in	r0, 0x3f	; 63
     15a:	f8 94       	cli
     15c:	a8 95       	wdr
     15e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     162:	88 61       	ori	r24, 0x18	; 24
     164:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     168:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     16c:	0f be       	out	0x3f, r0	; 63

0000016e <_ZL7wdt_offv>:
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    __asm__ volatile ("" ::: "memory");
     16e:	14 be       	out	0x34, r1	; 52
     170:	0f b6       	in	r0, 0x3f	; 63
     172:	f8 94       	cli
     174:	a8 95       	wdr
     176:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     17a:	88 61       	ori	r24, 0x18	; 24
     17c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     180:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     184:	0f be       	out	0x3f, r0	; 63

00000186 <_ZL7wdt_offv>:
     186:	14 be       	out	0x34, r1	; 52
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	f8 94       	cli
     18c:	a8 95       	wdr
     18e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     192:	88 61       	ori	r24, 0x18	; 24
     194:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     198:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     19c:	0f be       	out	0x3f, r0	; 63
     19e:	11 24       	eor	r1, r1
     1a0:	1f be       	out	0x3f, r1	; 63
     1a2:	cf ef       	ldi	r28, 0xFF	; 255
     1a4:	d1 e2       	ldi	r29, 0x21	; 33
     1a6:	de bf       	out	0x3e, r29	; 62
     1a8:	cd bf       	out	0x3d, r28	; 61
     1aa:	00 e0       	ldi	r16, 0x00	; 0
     1ac:	0c bf       	out	0x3c, r16	; 60

000001ae <__do_copy_data>:
     1ae:	12 e0       	ldi	r17, 0x02	; 2
     1b0:	a0 e0       	ldi	r26, 0x00	; 0
     1b2:	b2 e0       	ldi	r27, 0x02	; 2
     1b4:	e8 eb       	ldi	r30, 0xB8	; 184
     1b6:	f0 e2       	ldi	r31, 0x20	; 32
     1b8:	00 e0       	ldi	r16, 0x00	; 0
     1ba:	0b bf       	out	0x3b, r16	; 59
     1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <__do_copy_data+0x14>
     1be:	07 90       	elpm	r0, Z+
     1c0:	0d 92       	st	X+, r0
     1c2:	a4 3f       	cpi	r26, 0xF4	; 244
     1c4:	b1 07       	cpc	r27, r17
     1c6:	d9 f7       	brne	.-10     	; 0x1be <__do_copy_data+0x10>

000001c8 <__do_clear_bss>:
     1c8:	2c e1       	ldi	r18, 0x1C	; 28
     1ca:	a4 ef       	ldi	r26, 0xF4	; 244
     1cc:	b2 e0       	ldi	r27, 0x02	; 2
     1ce:	01 c0       	rjmp	.+2      	; 0x1d2 <.do_clear_bss_start>

000001d0 <.do_clear_bss_loop>:
     1d0:	1d 92       	st	X+, r1

000001d2 <.do_clear_bss_start>:
     1d2:	af 3b       	cpi	r26, 0xBF	; 191
     1d4:	b2 07       	cpc	r27, r18
     1d6:	e1 f7       	brne	.-8      	; 0x1d0 <.do_clear_bss_loop>

000001d8 <__do_global_ctors>:
     1d8:	10 e0       	ldi	r17, 0x00	; 0
     1da:	c7 e8       	ldi	r28, 0x87	; 135
     1dc:	d0 e0       	ldi	r29, 0x00	; 0
     1de:	00 e0       	ldi	r16, 0x00	; 0
     1e0:	06 c0       	rjmp	.+12     	; 0x1ee <__do_global_ctors+0x16>
     1e2:	21 97       	sbiw	r28, 0x01	; 1
     1e4:	01 09       	sbc	r16, r1
     1e6:	80 2f       	mov	r24, r16
     1e8:	fe 01       	movw	r30, r28
     1ea:	0e 94 52 10 	call	0x20a4	; 0x20a4 <__tablejump2__>
     1ee:	c5 38       	cpi	r28, 0x85	; 133
     1f0:	d1 07       	cpc	r29, r17
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	08 07       	cpc	r16, r24
     1f6:	a9 f7       	brne	.-22     	; 0x1e2 <__do_global_ctors+0xa>
     1f8:	b4 d1       	rcall	.+872    	; 0x562 <main>
     1fa:	0c 94 5a 10 	jmp	0x20b4	; 0x20b4 <_exit>

000001fe <__bad_interrupt>:
     1fe:	00 cf       	rjmp	.-512    	; 0x0 <__vectors>

00000200 <_Z41__static_initialization_and_destruction_0ii>:
		/*
		dieAmpel2.display_update();
		dieAmpel3.display_update();
		*/
	}		
}
     200:	ef 92       	push	r14
     202:	ff 92       	push	r15
     204:	0f 93       	push	r16
     206:	1f 93       	push	r17
     208:	01 97       	sbiw	r24, 0x01	; 1
     20a:	09 f0       	breq	.+2      	; 0x20e <_Z41__static_initialization_and_destruction_0ii+0xe>
     20c:	4e c0       	rjmp	.+156    	; 0x2aa <_Z41__static_initialization_and_destruction_0ii+0xaa>
     20e:	6f 3f       	cpi	r22, 0xFF	; 255
     210:	7f 4f       	sbci	r23, 0xFF	; 255
     212:	09 f0       	breq	.+2      	; 0x216 <_Z41__static_initialization_and_destruction_0ii+0x16>
     214:	4a c0       	rjmp	.+148    	; 0x2aa <_Z41__static_initialization_and_destruction_0ii+0xaa>
#include "Timer.h"

#define OFF (uint8_t)(0)
#define ON  (uint8_t)(1)

DigiPortRaw keys(PA, SET_IN_PORT);					
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	40 e0       	ldi	r20, 0x00	; 0
     21a:	60 e0       	ldi	r22, 0x00	; 0
     21c:	84 e3       	ldi	r24, 0x34	; 52
     21e:	93 e0       	ldi	r25, 0x03	; 3
     220:	a5 d2       	rcall	.+1354   	; 0x76c <_ZN11DigiPortRawC1Ehhh>
DigiPortRaw leds(PB, SET_OUT_PORT);
     222:	20 e0       	ldi	r18, 0x00	; 0
     224:	4f ef       	ldi	r20, 0xFF	; 255
     226:	61 e0       	ldi	r22, 0x01	; 1
     228:	80 e3       	ldi	r24, 0x30	; 48
     22a:	93 e0       	ldi	r25, 0x03	; 3
     22c:	9f d2       	rcall	.+1342   	; 0x76c <_ZN11DigiPortRawC1Ehhh>
DigiPortRaw leds2(PC, SET_OUT_PORT);
     22e:	20 e0       	ldi	r18, 0x00	; 0
     230:	4f ef       	ldi	r20, 0xFF	; 255
     232:	62 e0       	ldi	r22, 0x02	; 2
     234:	8c e2       	ldi	r24, 0x2C	; 44
     236:	93 e0       	ldi	r25, 0x03	; 3
     238:	99 d2       	rcall	.+1330   	; 0x76c <_ZN11DigiPortRawC1Ehhh>
DigiPortRaw leds3(PE, SET_OUT_PORT);
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	4f ef       	ldi	r20, 0xFF	; 255
     23e:	64 e0       	ldi	r22, 0x04	; 4
     240:	88 e2       	ldi	r24, 0x28	; 40
     242:	93 e0       	ldi	r25, 0x03	; 3
     244:	93 d2       	rcall	.+1318   	; 0x76c <_ZN11DigiPortRawC1Ehhh>
LCD display(PK, LCD_Type_24x2);
     246:	2f e8       	ldi	r18, 0x8F	; 143
     248:	45 e0       	ldi	r20, 0x05	; 5
     24a:	69 e0       	ldi	r22, 0x09	; 9
     24c:	8e e1       	ldi	r24, 0x1E	; 30
     24e:	93 e0       	ldi	r25, 0x03	; 3
     250:	13 d5       	rcall	.+2598   	; 0xc78 <_ZN3LCDC1Eh10LCD_Type_th>

void next_state();
//void next_state_two();
//void next_state_three();

Timer16 ticker(TC1, next_state);
     252:	e1 2c       	mov	r14, r1
     254:	f1 2c       	mov	r15, r1
     256:	00 e0       	ldi	r16, 0x00	; 0
     258:	10 e0       	ldi	r17, 0x00	; 0
     25a:	20 e0       	ldi	r18, 0x00	; 0
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	4a e5       	ldi	r20, 0x5A	; 90
     260:	51 e0       	ldi	r21, 0x01	; 1
     262:	61 e0       	ldi	r22, 0x01	; 1
     264:	8c e0       	ldi	r24, 0x0C	; 12
     266:	93 e0       	ldi	r25, 0x03	; 3
     268:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <_ZN7Timer16C1EhPFvvES1_S1_S1_>
		DigiPortRaw* led;
		
		enum state_enum{ustate, none};
		state_enum update =  none;
	public:
		Ampel(uint8_t stat, uint8_t disp_col, DigiPortRaw* portreg){
     26c:	e4 e0       	ldi	r30, 0x04	; 4
     26e:	f3 e0       	ldi	r31, 0x03	; 3
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	87 83       	std	Z+7, r24	; 0x07
			status = stat; 
     274:	13 82       	std	Z+3, r1	; 0x03
			display_column = disp_col;
     276:	96 e0       	ldi	r25, 0x06	; 6
     278:	94 83       	std	Z+4, r25	; 0x04
			led = portreg;
     27a:	20 e3       	ldi	r18, 0x30	; 48
     27c:	33 e0       	ldi	r19, 0x03	; 3
     27e:	36 83       	std	Z+6, r19	; 0x06
     280:	25 83       	std	Z+5, r18	; 0x05
		DigiPortRaw* led;
		
		enum state_enum{ustate, none};
		state_enum update =  none;
	public:
		Ampel(uint8_t stat, uint8_t disp_col, DigiPortRaw* portreg){
     282:	ec ef       	ldi	r30, 0xFC	; 252
     284:	f2 e0       	ldi	r31, 0x02	; 2
     286:	87 83       	std	Z+7, r24	; 0x07
			status = stat; 
     288:	13 82       	std	Z+3, r1	; 0x03
			display_column = disp_col;
     28a:	9f e0       	ldi	r25, 0x0F	; 15
     28c:	94 83       	std	Z+4, r25	; 0x04
			led = portreg;
     28e:	2c e2       	ldi	r18, 0x2C	; 44
     290:	33 e0       	ldi	r19, 0x03	; 3
     292:	36 83       	std	Z+6, r19	; 0x06
     294:	25 83       	std	Z+5, r18	; 0x05
		DigiPortRaw* led;
		
		enum state_enum{ustate, none};
		state_enum update =  none;
	public:
		Ampel(uint8_t stat, uint8_t disp_col, DigiPortRaw* portreg){
     296:	e4 ef       	ldi	r30, 0xF4	; 244
     298:	f2 e0       	ldi	r31, 0x02	; 2
     29a:	87 83       	std	Z+7, r24	; 0x07
			status = stat; 
     29c:	13 82       	std	Z+3, r1	; 0x03
			display_column = disp_col;
     29e:	83 e1       	ldi	r24, 0x13	; 19
     2a0:	84 83       	std	Z+4, r24	; 0x04
			led = portreg;
     2a2:	88 e2       	ldi	r24, 0x28	; 40
     2a4:	93 e0       	ldi	r25, 0x03	; 3
     2a6:	96 83       	std	Z+6, r25	; 0x06
     2a8:	85 83       	std	Z+5, r24	; 0x05
		/*
		dieAmpel2.display_update();
		dieAmpel3.display_update();
		*/
	}		
}
     2aa:	1f 91       	pop	r17
     2ac:	0f 91       	pop	r16
     2ae:	ff 90       	pop	r15
     2b0:	ef 90       	pop	r14
     2b2:	08 95       	ret

000002b4 <_Z10next_statev>:
	delay = state_table[current_op_number].duration;	
	update = ustate;
}

inline void Ampel::next_state(){
	if (status == ON){
     2b4:	80 91 07 03 	lds	r24, 0x0307	; 0x800307 <dieAmpel+0x3>
     2b8:	81 30       	cpi	r24, 0x01	; 1
     2ba:	09 f0       	breq	.+2      	; 0x2be <_Z10next_statev+0xa>
     2bc:	6d c0       	rjmp	.+218    	; 0x398 <_Z10next_statev+0xe4>
		delay--;
     2be:	e4 e0       	ldi	r30, 0x04	; 4
     2c0:	f3 e0       	ldi	r31, 0x03	; 3
     2c2:	80 81       	ld	r24, Z
     2c4:	81 50       	subi	r24, 0x01	; 1
     2c6:	80 83       	st	Z, r24
		if (shut_down_signal == 1){
     2c8:	82 81       	ldd	r24, Z+2	; 0x02
     2ca:	88 23       	and	r24, r24
     2cc:	b9 f0       	breq	.+46     	; 0x2fc <_Z10next_statev+0x48>
			if (current_op_number == 5){				// jump from loop to shutdown only at op 5
     2ce:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <dieAmpel+0x1>
     2d2:	85 30       	cpi	r24, 0x05	; 5
     2d4:	99 f4       	brne	.+38     	; 0x2fc <_Z10next_statev+0x48>
				current_op_number = 18;					// Shutdown OP
     2d6:	82 e1       	ldi	r24, 0x12	; 18
     2d8:	81 83       	std	Z+1, r24	; 0x01
				delay = state_table[current_op_number].duration;
     2da:	85 e0       	ldi	r24, 0x05	; 5
     2dc:	80 83       	st	Z, r24
				led->write(state_table[current_op_number].led_pattern);
     2de:	05 80       	ldd	r0, Z+5	; 0x05
     2e0:	f6 81       	ldd	r31, Z+6	; 0x06
     2e2:	e0 2d       	mov	r30, r0
    /*! \brief  Gib data auf den Ausgabepins des Ports aus.
		\param [in] data Auszugebenedes Bitmuster in active-high Logik. Bitpositionen, die
				    beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void write(uint8_t data) { 
		*(base + OUT_OFFSET) = (uint8_t)(OUT_MASK & ((mode==SET_ACTIVE_HIGH) ? data : (uint8_t)(~data)));
     2e4:	a0 81       	ld	r26, Z
     2e6:	b1 81       	ldd	r27, Z+1	; 0x01
     2e8:	92 81       	ldd	r25, Z+2	; 0x02
     2ea:	83 81       	ldd	r24, Z+3	; 0x03
     2ec:	8f 3f       	cpi	r24, 0xFF	; 255
     2ee:	11 f4       	brne	.+4      	; 0x2f4 <_Z10next_statev+0x40>
     2f0:	84 ea       	ldi	r24, 0xA4	; 164
     2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <_Z10next_statev+0x42>
     2f4:	8b e5       	ldi	r24, 0x5B	; 91
     2f6:	89 23       	and	r24, r25
     2f8:	12 96       	adiw	r26, 0x02	; 2
     2fa:	8c 93       	st	X, r24
			}
		}
		update = ustate;
     2fc:	e4 e0       	ldi	r30, 0x04	; 4
     2fe:	f3 e0       	ldi	r31, 0x03	; 3
     300:	17 82       	std	Z+7, r1	; 0x07
		if (delay == 0){
     302:	80 81       	ld	r24, Z
     304:	81 11       	cpse	r24, r1
     306:	48 c0       	rjmp	.+144    	; 0x398 <_Z10next_statev+0xe4>
			if(current_op_number == 27){
     308:	80 91 05 03 	lds	r24, 0x0305	; 0x800305 <dieAmpel+0x1>
     30c:	8b 31       	cpi	r24, 0x1B	; 27
     30e:	d1 f4       	brne	.+52     	; 0x344 <_Z10next_statev+0x90>
				status = OFF;
     310:	13 82       	std	Z+3, r1	; 0x03
				shut_down_signal = 0;
     312:	12 82       	std	Z+2, r1	; 0x02
				led->off();
     314:	05 80       	ldd	r0, Z+5	; 0x05
     316:	f6 81       	ldd	r31, Z+6	; 0x06
     318:	e0 2d       	mov	r30, r0
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     31a:	83 81       	ldd	r24, Z+3	; 0x03
     31c:	8f 3f       	cpi	r24, 0xFF	; 255
     31e:	31 f4       	brne	.+12     	; 0x32c <_Z10next_statev+0x78>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     320:	01 90       	ld	r0, Z+
     322:	f0 81       	ld	r31, Z
     324:	e0 2d       	mov	r30, r0
     326:	82 81       	ldd	r24, Z+2	; 0x02
     328:	12 82       	std	Z+2, r1	; 0x02
     32a:	09 c0       	rjmp	.+18     	; 0x33e <_Z10next_statev+0x8a>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     32c:	a0 81       	ld	r26, Z
     32e:	b1 81       	ldd	r27, Z+1	; 0x01
     330:	12 96       	adiw	r26, 0x02	; 2
     332:	9c 91       	ld	r25, X
     334:	12 97       	sbiw	r26, 0x02	; 2
     336:	82 81       	ldd	r24, Z+2	; 0x02
     338:	89 2b       	or	r24, r25
     33a:	12 96       	adiw	r26, 0x02	; 2
     33c:	8c 93       	st	X, r24
				update = ustate;
     33e:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <dieAmpel+0x7>
     342:	2a c0       	rjmp	.+84     	; 0x398 <_Z10next_statev+0xe4>
			}else{
				current_op_number = state_table[current_op_number].next;
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	fc 01       	movw	r30, r24
     348:	ee 0f       	add	r30, r30
     34a:	ff 1f       	adc	r31, r31
     34c:	8e 0f       	add	r24, r30
     34e:	9f 1f       	adc	r25, r31
     350:	fc 01       	movw	r30, r24
     352:	e7 5f       	subi	r30, 0xF7	; 247
     354:	fd 4f       	sbci	r31, 0xFD	; 253
     356:	e2 81       	ldd	r30, Z+2	; 0x02
     358:	a4 e0       	ldi	r26, 0x04	; 4
     35a:	b3 e0       	ldi	r27, 0x03	; 3
     35c:	11 96       	adiw	r26, 0x01	; 1
     35e:	ec 93       	st	X, r30
     360:	11 97       	sbiw	r26, 0x01	; 1
				delay = state_table[current_op_number].duration;
     362:	f0 e0       	ldi	r31, 0x00	; 0
     364:	cf 01       	movw	r24, r30
     366:	88 0f       	add	r24, r24
     368:	99 1f       	adc	r25, r25
     36a:	e8 0f       	add	r30, r24
     36c:	f9 1f       	adc	r31, r25
     36e:	e7 5f       	subi	r30, 0xF7	; 247
     370:	fd 4f       	sbci	r31, 0xFD	; 253
     372:	81 81       	ldd	r24, Z+1	; 0x01
     374:	8c 93       	st	X, r24
				led->write(state_table[current_op_number].led_pattern);
     376:	80 81       	ld	r24, Z
     378:	15 96       	adiw	r26, 0x05	; 5
     37a:	ed 91       	ld	r30, X+
     37c:	fc 91       	ld	r31, X
     37e:	16 97       	sbiw	r26, 0x06	; 6
    /*! \brief  Gib data auf den Ausgabepins des Ports aus.
		\param [in] data Auszugebenedes Bitmuster in active-high Logik. Bitpositionen, die
				    beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void write(uint8_t data) { 
		*(base + OUT_OFFSET) = (uint8_t)(OUT_MASK & ((mode==SET_ACTIVE_HIGH) ? data : (uint8_t)(~data)));
     380:	a0 81       	ld	r26, Z
     382:	b1 81       	ldd	r27, Z+1	; 0x01
     384:	92 81       	ldd	r25, Z+2	; 0x02
     386:	23 81       	ldd	r18, Z+3	; 0x03
     388:	2f 3f       	cpi	r18, 0xFF	; 255
     38a:	09 f0       	breq	.+2      	; 0x38e <_Z10next_statev+0xda>
     38c:	80 95       	com	r24
     38e:	89 23       	and	r24, r25
     390:	12 96       	adiw	r26, 0x02	; 2
     392:	8c 93       	st	X, r24
				update = ustate;
     394:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <dieAmpel+0x7>
	delay = state_table[current_op_number].duration;	
	update = ustate;
}

inline void Ampel::next_state(){
	if (status == ON){
     398:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <dieAmpel2+0x3>
     39c:	81 30       	cpi	r24, 0x01	; 1
     39e:	09 f0       	breq	.+2      	; 0x3a2 <_Z10next_statev+0xee>
     3a0:	6d c0       	rjmp	.+218    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
		delay--;
     3a2:	ec ef       	ldi	r30, 0xFC	; 252
     3a4:	f2 e0       	ldi	r31, 0x02	; 2
     3a6:	80 81       	ld	r24, Z
     3a8:	81 50       	subi	r24, 0x01	; 1
     3aa:	80 83       	st	Z, r24
		if (shut_down_signal == 1){
     3ac:	82 81       	ldd	r24, Z+2	; 0x02
     3ae:	88 23       	and	r24, r24
     3b0:	b9 f0       	breq	.+46     	; 0x3e0 <_Z10next_statev+0x12c>
			if (current_op_number == 5){				// jump from loop to shutdown only at op 5
     3b2:	80 91 fd 02 	lds	r24, 0x02FD	; 0x8002fd <dieAmpel2+0x1>
     3b6:	85 30       	cpi	r24, 0x05	; 5
     3b8:	99 f4       	brne	.+38     	; 0x3e0 <_Z10next_statev+0x12c>
				current_op_number = 18;					// Shutdown OP
     3ba:	82 e1       	ldi	r24, 0x12	; 18
     3bc:	81 83       	std	Z+1, r24	; 0x01
				delay = state_table[current_op_number].duration;
     3be:	85 e0       	ldi	r24, 0x05	; 5
     3c0:	80 83       	st	Z, r24
				led->write(state_table[current_op_number].led_pattern);
     3c2:	05 80       	ldd	r0, Z+5	; 0x05
     3c4:	f6 81       	ldd	r31, Z+6	; 0x06
     3c6:	e0 2d       	mov	r30, r0
     3c8:	a0 81       	ld	r26, Z
     3ca:	b1 81       	ldd	r27, Z+1	; 0x01
     3cc:	92 81       	ldd	r25, Z+2	; 0x02
     3ce:	83 81       	ldd	r24, Z+3	; 0x03
     3d0:	8f 3f       	cpi	r24, 0xFF	; 255
     3d2:	11 f4       	brne	.+4      	; 0x3d8 <_Z10next_statev+0x124>
     3d4:	84 ea       	ldi	r24, 0xA4	; 164
     3d6:	01 c0       	rjmp	.+2      	; 0x3da <_Z10next_statev+0x126>
     3d8:	8b e5       	ldi	r24, 0x5B	; 91
     3da:	89 23       	and	r24, r25
     3dc:	12 96       	adiw	r26, 0x02	; 2
     3de:	8c 93       	st	X, r24
			}
		}
		update = ustate;
     3e0:	ec ef       	ldi	r30, 0xFC	; 252
     3e2:	f2 e0       	ldi	r31, 0x02	; 2
     3e4:	17 82       	std	Z+7, r1	; 0x07
		if (delay == 0){
     3e6:	80 81       	ld	r24, Z
     3e8:	81 11       	cpse	r24, r1
     3ea:	48 c0       	rjmp	.+144    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
			if(current_op_number == 27){
     3ec:	80 91 fd 02 	lds	r24, 0x02FD	; 0x8002fd <dieAmpel2+0x1>
     3f0:	8b 31       	cpi	r24, 0x1B	; 27
     3f2:	d1 f4       	brne	.+52     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
				status = OFF;
     3f4:	13 82       	std	Z+3, r1	; 0x03
				shut_down_signal = 0;
     3f6:	12 82       	std	Z+2, r1	; 0x02
				led->off();
     3f8:	05 80       	ldd	r0, Z+5	; 0x05
     3fa:	f6 81       	ldd	r31, Z+6	; 0x06
     3fc:	e0 2d       	mov	r30, r0
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     3fe:	83 81       	ldd	r24, Z+3	; 0x03
     400:	8f 3f       	cpi	r24, 0xFF	; 255
     402:	31 f4       	brne	.+12     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     404:	01 90       	ld	r0, Z+
     406:	f0 81       	ld	r31, Z
     408:	e0 2d       	mov	r30, r0
     40a:	82 81       	ldd	r24, Z+2	; 0x02
     40c:	12 82       	std	Z+2, r1	; 0x02
     40e:	09 c0       	rjmp	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     410:	a0 81       	ld	r26, Z
     412:	b1 81       	ldd	r27, Z+1	; 0x01
     414:	12 96       	adiw	r26, 0x02	; 2
     416:	9c 91       	ld	r25, X
     418:	12 97       	sbiw	r26, 0x02	; 2
     41a:	82 81       	ldd	r24, Z+2	; 0x02
     41c:	89 2b       	or	r24, r25
     41e:	12 96       	adiw	r26, 0x02	; 2
     420:	8c 93       	st	X, r24
				update = ustate;
     422:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <dieAmpel2+0x7>
     426:	2a c0       	rjmp	.+84     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
			}else{
				current_op_number = state_table[current_op_number].next;
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	fc 01       	movw	r30, r24
     42c:	ee 0f       	add	r30, r30
     42e:	ff 1f       	adc	r31, r31
     430:	8e 0f       	add	r24, r30
     432:	9f 1f       	adc	r25, r31
     434:	fc 01       	movw	r30, r24
     436:	e7 5f       	subi	r30, 0xF7	; 247
     438:	fd 4f       	sbci	r31, 0xFD	; 253
     43a:	e2 81       	ldd	r30, Z+2	; 0x02
     43c:	ac ef       	ldi	r26, 0xFC	; 252
     43e:	b2 e0       	ldi	r27, 0x02	; 2
     440:	11 96       	adiw	r26, 0x01	; 1
     442:	ec 93       	st	X, r30
     444:	11 97       	sbiw	r26, 0x01	; 1
				delay = state_table[current_op_number].duration;
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	cf 01       	movw	r24, r30
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	e8 0f       	add	r30, r24
     450:	f9 1f       	adc	r31, r25
     452:	e7 5f       	subi	r30, 0xF7	; 247
     454:	fd 4f       	sbci	r31, 0xFD	; 253
     456:	81 81       	ldd	r24, Z+1	; 0x01
     458:	8c 93       	st	X, r24
				led->write(state_table[current_op_number].led_pattern);
     45a:	80 81       	ld	r24, Z
     45c:	15 96       	adiw	r26, 0x05	; 5
     45e:	ed 91       	ld	r30, X+
     460:	fc 91       	ld	r31, X
     462:	16 97       	sbiw	r26, 0x06	; 6
    /*! \brief  Gib data auf den Ausgabepins des Ports aus.
		\param [in] data Auszugebenedes Bitmuster in active-high Logik. Bitpositionen, die
				    beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void write(uint8_t data) { 
		*(base + OUT_OFFSET) = (uint8_t)(OUT_MASK & ((mode==SET_ACTIVE_HIGH) ? data : (uint8_t)(~data)));
     464:	a0 81       	ld	r26, Z
     466:	b1 81       	ldd	r27, Z+1	; 0x01
     468:	92 81       	ldd	r25, Z+2	; 0x02
     46a:	23 81       	ldd	r18, Z+3	; 0x03
     46c:	2f 3f       	cpi	r18, 0xFF	; 255
     46e:	09 f0       	breq	.+2      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     470:	80 95       	com	r24
     472:	89 23       	and	r24, r25
     474:	12 96       	adiw	r26, 0x02	; 2
     476:	8c 93       	st	X, r24
				update = ustate;
     478:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <dieAmpel2+0x7>
	delay = state_table[current_op_number].duration;	
	update = ustate;
}

inline void Ampel::next_state(){
	if (status == ON){
     47c:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <__data_end+0x3>
     480:	81 30       	cpi	r24, 0x01	; 1
     482:	09 f0       	breq	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     484:	6d c0       	rjmp	.+218    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
		delay--;
     486:	e4 ef       	ldi	r30, 0xF4	; 244
     488:	f2 e0       	ldi	r31, 0x02	; 2
     48a:	80 81       	ld	r24, Z
     48c:	81 50       	subi	r24, 0x01	; 1
     48e:	80 83       	st	Z, r24
		if (shut_down_signal == 1){
     490:	82 81       	ldd	r24, Z+2	; 0x02
     492:	88 23       	and	r24, r24
     494:	b9 f0       	breq	.+46     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
			if (current_op_number == 5){				// jump from loop to shutdown only at op 5
     496:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <__data_end+0x1>
     49a:	85 30       	cpi	r24, 0x05	; 5
     49c:	99 f4       	brne	.+38     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
				current_op_number = 18;					// Shutdown OP
     49e:	82 e1       	ldi	r24, 0x12	; 18
     4a0:	81 83       	std	Z+1, r24	; 0x01
				delay = state_table[current_op_number].duration;
     4a2:	85 e0       	ldi	r24, 0x05	; 5
     4a4:	80 83       	st	Z, r24
				led->write(state_table[current_op_number].led_pattern);
     4a6:	05 80       	ldd	r0, Z+5	; 0x05
     4a8:	f6 81       	ldd	r31, Z+6	; 0x06
     4aa:	e0 2d       	mov	r30, r0
     4ac:	a0 81       	ld	r26, Z
     4ae:	b1 81       	ldd	r27, Z+1	; 0x01
     4b0:	92 81       	ldd	r25, Z+2	; 0x02
     4b2:	83 81       	ldd	r24, Z+3	; 0x03
     4b4:	8f 3f       	cpi	r24, 0xFF	; 255
     4b6:	11 f4       	brne	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4b8:	84 ea       	ldi	r24, 0xA4	; 164
     4ba:	01 c0       	rjmp	.+2      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
     4bc:	8b e5       	ldi	r24, 0x5B	; 91
     4be:	89 23       	and	r24, r25
     4c0:	12 96       	adiw	r26, 0x02	; 2
     4c2:	8c 93       	st	X, r24
			}
		}
		update = ustate;
     4c4:	e4 ef       	ldi	r30, 0xF4	; 244
     4c6:	f2 e0       	ldi	r31, 0x02	; 2
     4c8:	17 82       	std	Z+7, r1	; 0x07
		if (delay == 0){
     4ca:	80 81       	ld	r24, Z
     4cc:	81 11       	cpse	r24, r1
     4ce:	48 c0       	rjmp	.+144    	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
			if(current_op_number == 27){
     4d0:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <__data_end+0x1>
     4d4:	8b 31       	cpi	r24, 0x1B	; 27
     4d6:	d1 f4       	brne	.+52     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
				status = OFF;
     4d8:	13 82       	std	Z+3, r1	; 0x03
				shut_down_signal = 0;
     4da:	12 82       	std	Z+2, r1	; 0x02
				led->off();
     4dc:	05 80       	ldd	r0, Z+5	; 0x05
     4de:	f6 81       	ldd	r31, Z+6	; 0x06
     4e0:	e0 2d       	mov	r30, r0
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     4e2:	83 81       	ldd	r24, Z+3	; 0x03
     4e4:	8f 3f       	cpi	r24, 0xFF	; 255
     4e6:	31 f4       	brne	.+12     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     4e8:	01 90       	ld	r0, Z+
     4ea:	f0 81       	ld	r31, Z
     4ec:	e0 2d       	mov	r30, r0
     4ee:	82 81       	ldd	r24, Z+2	; 0x02
     4f0:	12 82       	std	Z+2, r1	; 0x02
     4f2:	09 c0       	rjmp	.+18     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     4f4:	a0 81       	ld	r26, Z
     4f6:	b1 81       	ldd	r27, Z+1	; 0x01
     4f8:	12 96       	adiw	r26, 0x02	; 2
     4fa:	9c 91       	ld	r25, X
     4fc:	12 97       	sbiw	r26, 0x02	; 2
     4fe:	82 81       	ldd	r24, Z+2	; 0x02
     500:	89 2b       	or	r24, r25
     502:	12 96       	adiw	r26, 0x02	; 2
     504:	8c 93       	st	X, r24
				update = ustate;
     506:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <__data_end+0x7>
     50a:	08 95       	ret
			}else{
				current_op_number = state_table[current_op_number].next;
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	fc 01       	movw	r30, r24
     510:	ee 0f       	add	r30, r30
     512:	ff 1f       	adc	r31, r31
     514:	8e 0f       	add	r24, r30
     516:	9f 1f       	adc	r25, r31
     518:	fc 01       	movw	r30, r24
     51a:	e7 5f       	subi	r30, 0xF7	; 247
     51c:	fd 4f       	sbci	r31, 0xFD	; 253
     51e:	e2 81       	ldd	r30, Z+2	; 0x02
     520:	a4 ef       	ldi	r26, 0xF4	; 244
     522:	b2 e0       	ldi	r27, 0x02	; 2
     524:	11 96       	adiw	r26, 0x01	; 1
     526:	ec 93       	st	X, r30
     528:	11 97       	sbiw	r26, 0x01	; 1
				delay = state_table[current_op_number].duration;
     52a:	f0 e0       	ldi	r31, 0x00	; 0
     52c:	cf 01       	movw	r24, r30
     52e:	88 0f       	add	r24, r24
     530:	99 1f       	adc	r25, r25
     532:	e8 0f       	add	r30, r24
     534:	f9 1f       	adc	r31, r25
     536:	e7 5f       	subi	r30, 0xF7	; 247
     538:	fd 4f       	sbci	r31, 0xFD	; 253
     53a:	81 81       	ldd	r24, Z+1	; 0x01
     53c:	8c 93       	st	X, r24
				led->write(state_table[current_op_number].led_pattern);
     53e:	80 81       	ld	r24, Z
     540:	15 96       	adiw	r26, 0x05	; 5
     542:	ed 91       	ld	r30, X+
     544:	fc 91       	ld	r31, X
     546:	16 97       	sbiw	r26, 0x06	; 6
    /*! \brief  Gib data auf den Ausgabepins des Ports aus.
		\param [in] data Auszugebenedes Bitmuster in active-high Logik. Bitpositionen, die
				    beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void write(uint8_t data) { 
		*(base + OUT_OFFSET) = (uint8_t)(OUT_MASK & ((mode==SET_ACTIVE_HIGH) ? data : (uint8_t)(~data)));
     548:	a0 81       	ld	r26, Z
     54a:	b1 81       	ldd	r27, Z+1	; 0x01
     54c:	92 81       	ldd	r25, Z+2	; 0x02
     54e:	23 81       	ldd	r18, Z+3	; 0x03
     550:	2f 3f       	cpi	r18, 0xFF	; 255
     552:	09 f0       	breq	.+2      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
     554:	80 95       	com	r24
     556:	89 23       	and	r24, r25
     558:	12 96       	adiw	r26, 0x02	; 2
     55a:	8c 93       	st	X, r24
				update = ustate;
     55c:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <__data_end+0x7>
     560:	08 95       	ret

00000562 <main>:
}


int main(void)
{
	sei();
     562:	78 94       	sei
	     wenn bei der Instanziierung entsprechende CBFs registriert wurden.  Der Wert
         fuer millisecs_CNT dient zum Setzen eines Startwerts fuer den Counter.
		 */
	inline void start(unsigned int millisecs_A, unsigned int millisecs_B=0, unsigned int millisecs_C=0,
	                  unsigned int millisecs_CNT=0, uint8_t rpt=255) {
		start_ms(millisecs_A, millisecs_B, millisecs_C, millisecs_CNT, rpt);		   
     564:	ee 24       	eor	r14, r14
     566:	ea 94       	dec	r14
     568:	00 e0       	ldi	r16, 0x00	; 0
     56a:	10 e0       	ldi	r17, 0x00	; 0
     56c:	20 e0       	ldi	r18, 0x00	; 0
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	68 ee       	ldi	r22, 0xE8	; 232
     576:	73 e0       	ldi	r23, 0x03	; 3
     578:	8c e0       	ldi	r24, 0x0C	; 12
     57a:	93 e0       	ldi	r25, 0x03	; 3
     57c:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <_ZN7Timer168start_msEjjjjh>
	ticker.start(1000);
	//ticker2.start(1000);
	//ticker3.start(1000);

	display.clear();
     580:	8e e1       	ldi	r24, 0x1E	; 30
     582:	93 e0       	ldi	r25, 0x03	; 3
     584:	23 d4       	rcall	.+2118   	; 0xdcc <_ZN3LCD5clearEv>
	display.set_pos(0,0);
     586:	40 e0       	ldi	r20, 0x00	; 0
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	8e e1       	ldi	r24, 0x1E	; 30
     58c:	93 e0       	ldi	r25, 0x03	; 3
     58e:	90 d2       	rcall	.+1312   	; 0xab0 <_ZN3LCD7set_posEhh>
	display.write_FLASH_text(init_top, 7);
     590:	47 e0       	ldi	r20, 0x07	; 7
     592:	61 e0       	ldi	r22, 0x01	; 1
     594:	71 e0       	ldi	r23, 0x01	; 1
     596:	8e e1       	ldi	r24, 0x1E	; 30
     598:	93 e0       	ldi	r25, 0x03	; 3
     59a:	f4 d3       	rcall	.+2024   	; 0xd84 <_ZN3LCD16write_FLASH_textEPKch>
	display.set_pos(1, 0);
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	8e e1       	ldi	r24, 0x1E	; 30
     5a2:	93 e0       	ldi	r25, 0x03	; 3
     5a4:	85 d2       	rcall	.+1290   	; 0xab0 <_ZN3LCD7set_posEhh>
	display.write_FLASH_text(init_bottom, 7);
     5a6:	47 e0       	ldi	r20, 0x07	; 7
     5a8:	69 ef       	ldi	r22, 0xF9	; 249
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	8e e1       	ldi	r24, 0x1E	; 30
     5ae:	93 e0       	ldi	r25, 0x03	; 3
     5b0:	e9 d3       	rcall	.+2002   	; 0xd84 <_ZN3LCD16write_FLASH_textEPKch>
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     5b2:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <leds+0x3>
     5b6:	8f 3f       	cpi	r24, 0xFF	; 255
     5b8:	39 f4       	brne	.+14     	; 0x5c8 <main+0x66>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     5ba:	e0 91 30 03 	lds	r30, 0x0330	; 0x800330 <leds>
     5be:	f0 91 31 03 	lds	r31, 0x0331	; 0x800331 <leds+0x1>
     5c2:	82 81       	ldd	r24, Z+2	; 0x02
     5c4:	12 82       	std	Z+2, r1	; 0x02
     5c6:	0a c0       	rjmp	.+20     	; 0x5dc <main+0x7a>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     5c8:	a0 e3       	ldi	r26, 0x30	; 48
     5ca:	b3 e0       	ldi	r27, 0x03	; 3
     5cc:	ed 91       	ld	r30, X+
     5ce:	fc 91       	ld	r31, X
     5d0:	11 97       	sbiw	r26, 0x01	; 1
     5d2:	92 81       	ldd	r25, Z+2	; 0x02
     5d4:	12 96       	adiw	r26, 0x02	; 2
     5d6:	8c 91       	ld	r24, X
     5d8:	89 2b       	or	r24, r25
     5da:	82 83       	std	Z+2, r24	; 0x02
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     5dc:	80 91 2f 03 	lds	r24, 0x032F	; 0x80032f <leds2+0x3>
     5e0:	8f 3f       	cpi	r24, 0xFF	; 255
     5e2:	39 f4       	brne	.+14     	; 0x5f2 <main+0x90>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     5e4:	e0 91 2c 03 	lds	r30, 0x032C	; 0x80032c <leds2>
     5e8:	f0 91 2d 03 	lds	r31, 0x032D	; 0x80032d <leds2+0x1>
     5ec:	82 81       	ldd	r24, Z+2	; 0x02
     5ee:	12 82       	std	Z+2, r1	; 0x02
     5f0:	0a c0       	rjmp	.+20     	; 0x606 <main+0xa4>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     5f2:	ac e2       	ldi	r26, 0x2C	; 44
     5f4:	b3 e0       	ldi	r27, 0x03	; 3
     5f6:	ed 91       	ld	r30, X+
     5f8:	fc 91       	ld	r31, X
     5fa:	11 97       	sbiw	r26, 0x01	; 1
     5fc:	92 81       	ldd	r25, Z+2	; 0x02
     5fe:	12 96       	adiw	r26, 0x02	; 2
     600:	8c 91       	ld	r24, X
     602:	89 2b       	or	r24, r25
     604:	82 83       	std	Z+2, r24	; 0x02
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     606:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <leds3+0x3>
     60a:	8f 3f       	cpi	r24, 0xFF	; 255
     60c:	39 f4       	brne	.+14     	; 0x61c <main+0xba>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     60e:	e0 91 28 03 	lds	r30, 0x0328	; 0x800328 <leds3>
     612:	f0 91 29 03 	lds	r31, 0x0329	; 0x800329 <leds3+0x1>
     616:	82 81       	ldd	r24, Z+2	; 0x02
     618:	12 82       	std	Z+2, r1	; 0x02
     61a:	0a c0       	rjmp	.+20     	; 0x630 <main+0xce>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     61c:	a8 e2       	ldi	r26, 0x28	; 40
     61e:	b3 e0       	ldi	r27, 0x03	; 3
     620:	ed 91       	ld	r30, X+
     622:	fc 91       	ld	r31, X
     624:	11 97       	sbiw	r26, 0x01	; 1
     626:	92 81       	ldd	r25, Z+2	; 0x02
     628:	12 96       	adiw	r26, 0x02	; 2
     62a:	8c 91       	ld	r24, X
     62c:	89 2b       	or	r24, r25
     62e:	82 83       	std	Z+2, r24	; 0x02
		//return IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
	//};
	
	inline uint8_t read_raw(uint8_t mask=0xFF) {
		uint8_t ret_val;
		CRITICAL_SECTION {
     630:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     632:	f8 94       	cli
     634:	81 e0       	ldi	r24, 0x01	; 1
     636:	88 23       	and	r24, r24
     638:	b9 f0       	breq	.+46     	; 0x668 <main+0x106>
		 ret_val = IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
     63a:	e4 e3       	ldi	r30, 0x34	; 52
     63c:	f3 e0       	ldi	r31, 0x03	; 3
     63e:	82 81       	ldd	r24, Z+2	; 0x02
     640:	80 95       	com	r24
     642:	93 81       	ldd	r25, Z+3	; 0x03
     644:	9f 3f       	cpi	r25, 0xFF	; 255
     646:	31 f4       	brne	.+12     	; 0x654 <main+0xf2>
     648:	e0 91 34 03 	lds	r30, 0x0334	; 0x800334 <keys>
     64c:	f0 91 35 03 	lds	r31, 0x0335	; 0x800335 <keys+0x1>
     650:	90 81       	ld	r25, Z
     652:	06 c0       	rjmp	.+12     	; 0x660 <main+0xfe>
     654:	e0 91 34 03 	lds	r30, 0x0334	; 0x800334 <keys>
     658:	f0 91 35 03 	lds	r31, 0x0335	; 0x800335 <keys+0x1>
     65c:	90 81       	ld	r25, Z
     65e:	90 95       	com	r25
     660:	c8 2f       	mov	r28, r24
     662:	c9 23       	and	r28, r25
		//return IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
	//};
	
	inline uint8_t read_raw(uint8_t mask=0xFF) {
		uint8_t ret_val;
		CRITICAL_SECTION {
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	e7 cf       	rjmp	.-50     	; 0x636 <main+0xd4>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     668:	2f bf       	out	0x3f, r18	; 63
	leds.off();
	leds2.off();
	leds3.off();
	while(1){
		uint8_t key_val = keys.read_raw();
		switch ((uint8_t)~(key_val)){
     66a:	8c 2f       	mov	r24, r28
     66c:	80 95       	com	r24
     66e:	87 3f       	cpi	r24, 0xF7	; 247
     670:	41 f1       	breq	.+80     	; 0x6c2 <main+0x160>
     672:	28 f4       	brcc	.+10     	; 0x67e <main+0x11c>
     674:	8f 3d       	cpi	r24, 0xDF	; 223
     676:	69 f1       	breq	.+90     	; 0x6d2 <main+0x170>
     678:	8f 3e       	cpi	r24, 0xEF	; 239
     67a:	39 f1       	breq	.+78     	; 0x6ca <main+0x168>
     67c:	2d c0       	rjmp	.+90     	; 0x6d8 <main+0x176>
     67e:	8d 3f       	cpi	r24, 0xFD	; 253
     680:	71 f0       	breq	.+28     	; 0x69e <main+0x13c>
     682:	8e 3f       	cpi	r24, 0xFE	; 254
     684:	19 f0       	breq	.+6      	; 0x68c <main+0x12a>
     686:	8b 3f       	cpi	r24, 0xFB	; 251
     688:	39 f5       	brne	.+78     	; 0x6d8 <main+0x176>
     68a:	12 c0       	rjmp	.+36     	; 0x6b0 <main+0x14e>
Ampel dieAmpel2(OFF, 15, &leds2);
Ampel dieAmpel3(OFF, 19, &leds3);

inline void Ampel::start_up(){
	// Startup from op 8 until loop main
	status = ON;
     68c:	e4 e0       	ldi	r30, 0x04	; 4
     68e:	f3 e0       	ldi	r31, 0x03	; 3
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	83 83       	std	Z+3, r24	; 0x03
	current_op_number = 8;		
     694:	98 e0       	ldi	r25, 0x08	; 8
     696:	91 83       	std	Z+1, r25	; 0x01
	delay = state_table[current_op_number].duration;	
     698:	80 83       	st	Z, r24
	update = ustate;
     69a:	17 82       	std	Z+7, r1	; 0x07
     69c:	1d c0       	rjmp	.+58     	; 0x6d8 <main+0x176>
Ampel dieAmpel2(OFF, 15, &leds2);
Ampel dieAmpel3(OFF, 19, &leds3);

inline void Ampel::start_up(){
	// Startup from op 8 until loop main
	status = ON;
     69e:	ec ef       	ldi	r30, 0xFC	; 252
     6a0:	f2 e0       	ldi	r31, 0x02	; 2
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	83 83       	std	Z+3, r24	; 0x03
	current_op_number = 8;		
     6a6:	98 e0       	ldi	r25, 0x08	; 8
     6a8:	91 83       	std	Z+1, r25	; 0x01
	delay = state_table[current_op_number].duration;	
     6aa:	80 83       	st	Z, r24
	update = ustate;
     6ac:	17 82       	std	Z+7, r1	; 0x07
     6ae:	14 c0       	rjmp	.+40     	; 0x6d8 <main+0x176>
Ampel dieAmpel2(OFF, 15, &leds2);
Ampel dieAmpel3(OFF, 19, &leds3);

inline void Ampel::start_up(){
	// Startup from op 8 until loop main
	status = ON;
     6b0:	e4 ef       	ldi	r30, 0xF4	; 244
     6b2:	f2 e0       	ldi	r31, 0x02	; 2
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	83 83       	std	Z+3, r24	; 0x03
	current_op_number = 8;		
     6b8:	98 e0       	ldi	r25, 0x08	; 8
     6ba:	91 83       	std	Z+1, r25	; 0x01
	delay = state_table[current_op_number].duration;	
     6bc:	80 83       	st	Z, r24
	update = ustate;
     6be:	17 82       	std	Z+7, r1	; 0x07
     6c0:	0b c0       	rjmp	.+22     	; 0x6d8 <main+0x176>
		}
	}
}

inline void Ampel::shut_down_request(){
	shut_down_signal = 1;
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <dieAmpel+0x2>
     6c8:	07 c0       	rjmp	.+14     	; 0x6d8 <main+0x176>
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <dieAmpel2+0x2>
     6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <main+0x176>
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	80 93 f6 02 	sts	0x02F6, r24	; 0x8002f6 <__data_end+0x2>
*/


inline void Ampel::display_update(){

	switch(update){
     6d8:	80 91 0b 03 	lds	r24, 0x030B	; 0x80030b <dieAmpel+0x7>
     6dc:	81 11       	cpse	r24, r1
     6de:	3c c0       	rjmp	.+120    	; 0x758 <main+0x1f6>
		case none:
		break;
		
		case ustate:
		display.set_pos(0, display_column);
     6e0:	04 e0       	ldi	r16, 0x04	; 4
     6e2:	13 e0       	ldi	r17, 0x03	; 3
     6e4:	f8 01       	movw	r30, r16
     6e6:	44 81       	ldd	r20, Z+4	; 0x04
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	8e e1       	ldi	r24, 0x1E	; 30
     6ec:	93 e0       	ldi	r25, 0x03	; 3
     6ee:	e0 d1       	rcall	.+960    	; 0xab0 <_ZN3LCD7set_posEhh>
		display.write_number(current_op_number, 2);
     6f0:	f8 01       	movw	r30, r16
     6f2:	61 81       	ldd	r22, Z+1	; 0x01
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	20 e2       	ldi	r18, 0x20	; 32
     6f8:	42 e0       	ldi	r20, 0x02	; 2
     6fa:	8e e1       	ldi	r24, 0x1E	; 30
     6fc:	93 e0       	ldi	r25, 0x03	; 3
     6fe:	f0 d3       	rcall	.+2016   	; 0xee0 <_ZN3LCD12write_numberEihc>
		
		if(current_op_number <= 7){
     700:	f8 01       	movw	r30, r16
     702:	81 81       	ldd	r24, Z+1	; 0x01
     704:	88 30       	cpi	r24, 0x08	; 8
			display.set_pos(1, display_column);
     706:	68 f4       	brcc	.+26     	; 0x722 <main+0x1c0>
     708:	40 91 08 03 	lds	r20, 0x0308	; 0x800308 <dieAmpel+0x4>
     70c:	61 e0       	ldi	r22, 0x01	; 1
     70e:	8e e1       	ldi	r24, 0x1E	; 30
     710:	93 e0       	ldi	r25, 0x03	; 3
			display.write_FLASH_text(disp_normal, 7);
     712:	ce d1       	rcall	.+924    	; 0xab0 <_ZN3LCD7set_posEhh>
     714:	47 e0       	ldi	r20, 0x07	; 7
     716:	62 ef       	ldi	r22, 0xF2	; 242
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	8e e1       	ldi	r24, 0x1E	; 30
     71c:	93 e0       	ldi	r25, 0x03	; 3
     71e:	32 d3       	rcall	.+1636   	; 0xd84 <_ZN3LCD16write_FLASH_textEPKch>
		}else if(current_op_number >= 18){
     720:	1b c0       	rjmp	.+54     	; 0x758 <main+0x1f6>
     722:	82 31       	cpi	r24, 0x12	; 18
			display.set_pos(1, display_column);
     724:	68 f0       	brcs	.+26     	; 0x740 <main+0x1de>
     726:	40 91 08 03 	lds	r20, 0x0308	; 0x800308 <dieAmpel+0x4>
     72a:	61 e0       	ldi	r22, 0x01	; 1
     72c:	8e e1       	ldi	r24, 0x1E	; 30
     72e:	93 e0       	ldi	r25, 0x03	; 3
			display.write_FLASH_text(disp_end, 7);
     730:	bf d1       	rcall	.+894    	; 0xab0 <_ZN3LCD7set_posEhh>
     732:	47 e0       	ldi	r20, 0x07	; 7
     734:	64 ee       	ldi	r22, 0xE4	; 228
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	8e e1       	ldi	r24, 0x1E	; 30
     73a:	93 e0       	ldi	r25, 0x03	; 3
     73c:	23 d3       	rcall	.+1606   	; 0xd84 <_ZN3LCD16write_FLASH_textEPKch>
		}else{
			display.set_pos(1, display_column);
     73e:	0c c0       	rjmp	.+24     	; 0x758 <main+0x1f6>
     740:	40 91 08 03 	lds	r20, 0x0308	; 0x800308 <dieAmpel+0x4>
     744:	61 e0       	ldi	r22, 0x01	; 1
     746:	8e e1       	ldi	r24, 0x1E	; 30
     748:	93 e0       	ldi	r25, 0x03	; 3
			display.write_FLASH_text(disp_start, 6);
     74a:	b2 d1       	rcall	.+868    	; 0xab0 <_ZN3LCD7set_posEhh>
     74c:	46 e0       	ldi	r20, 0x06	; 6
     74e:	6b ee       	ldi	r22, 0xEB	; 235
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	8e e1       	ldi	r24, 0x1E	; 30
     754:	93 e0       	ldi	r25, 0x03	; 3
     756:	16 d3       	rcall	.+1580   	; 0xd84 <_ZN3LCD16write_FLASH_textEPKch>
		}
	}
	update = none;
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <dieAmpel+0x7>
     75e:	68 cf       	rjmp	.-304    	; 0x630 <main+0xce>

00000760 <_GLOBAL__sub_I_keys>:
		/*
		dieAmpel2.display_update();
		dieAmpel3.display_update();
		*/
	}		
}
     760:	6f ef       	ldi	r22, 0xFF	; 255
     762:	7f ef       	ldi	r23, 0xFF	; 255
     764:	81 e0       	ldi	r24, 0x01	; 1
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	4b cd       	rjmp	.-1386   	; 0x200 <_Z41__static_initialization_and_destruction_0ii>
     76a:	08 95       	ret

0000076c <_ZN11DigiPortRawC1Ehhh>:
     76c:	0f 93       	push	r16
     76e:	1f 93       	push	r17
     770:	cf 93       	push	r28
     772:	df 93       	push	r29
     774:	8c 01       	movw	r16, r24
     776:	86 2f       	mov	r24, r22
     778:	c4 2f       	mov	r28, r20
     77a:	d2 2f       	mov	r29, r18
     77c:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <_Z22port_handle_to_addressh>
     780:	d8 01       	movw	r26, r16
     782:	11 96       	adiw	r26, 0x01	; 1
     784:	9c 93       	st	X, r25
     786:	8e 93       	st	-X, r24
     788:	00 97       	sbiw	r24, 0x00	; 0
     78a:	69 f0       	breq	.+26     	; 0x7a6 <_ZN11DigiPortRawC1Ehhh+0x3a>
     78c:	13 96       	adiw	r26, 0x03	; 3
     78e:	dc 93       	st	X, r29
     790:	13 97       	sbiw	r26, 0x03	; 3
     792:	12 96       	adiw	r26, 0x02	; 2
     794:	cc 93       	st	X, r28
     796:	12 97       	sbiw	r26, 0x02	; 2
     798:	fc 01       	movw	r30, r24
     79a:	c1 83       	std	Z+1, r28	; 0x01
     79c:	ed 91       	ld	r30, X+
     79e:	fc 91       	ld	r31, X
     7a0:	cd 2b       	or	r28, r29
     7a2:	c0 95       	com	r28
     7a4:	c2 83       	std	Z+2, r28	; 0x02
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	1f 91       	pop	r17
     7ac:	0f 91       	pop	r16
     7ae:	08 95       	ret

000007b0 <__vector_9>:
     7b0:	1f 92       	push	r1
     7b2:	0f 92       	push	r0
     7b4:	0f b6       	in	r0, 0x3f	; 63
     7b6:	0f 92       	push	r0
     7b8:	11 24       	eor	r1, r1
     7ba:	0b b6       	in	r0, 0x3b	; 59
     7bc:	0f 92       	push	r0
     7be:	2f 93       	push	r18
     7c0:	3f 93       	push	r19
     7c2:	4f 93       	push	r20
     7c4:	5f 93       	push	r21
     7c6:	6f 93       	push	r22
     7c8:	7f 93       	push	r23
     7ca:	8f 93       	push	r24
     7cc:	9f 93       	push	r25
     7ce:	af 93       	push	r26
     7d0:	bf 93       	push	r27
     7d2:	ef 93       	push	r30
     7d4:	ff 93       	push	r31
     7d6:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <dp_obj>
     7da:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <dp_obj+0x1>
     7de:	00 97       	sbiw	r24, 0x00	; 0
     7e0:	39 f0       	breq	.+14     	; 0x7f0 <__vector_9+0x40>
     7e2:	dc 01       	movw	r26, r24
     7e4:	ed 91       	ld	r30, X+
     7e6:	fc 91       	ld	r31, X
     7e8:	01 90       	ld	r0, Z+
     7ea:	f0 81       	ld	r31, Z
     7ec:	e0 2d       	mov	r30, r0
     7ee:	19 95       	eicall
     7f0:	ff 91       	pop	r31
     7f2:	ef 91       	pop	r30
     7f4:	bf 91       	pop	r27
     7f6:	af 91       	pop	r26
     7f8:	9f 91       	pop	r25
     7fa:	8f 91       	pop	r24
     7fc:	7f 91       	pop	r23
     7fe:	6f 91       	pop	r22
     800:	5f 91       	pop	r21
     802:	4f 91       	pop	r20
     804:	3f 91       	pop	r19
     806:	2f 91       	pop	r18
     808:	0f 90       	pop	r0
     80a:	0b be       	out	0x3b, r0	; 59
     80c:	0f 90       	pop	r0
     80e:	0f be       	out	0x3f, r0	; 63
     810:	0f 90       	pop	r0
     812:	1f 90       	pop	r1
     814:	18 95       	reti

00000816 <__vector_10>:
     816:	1f 92       	push	r1
     818:	0f 92       	push	r0
     81a:	0f b6       	in	r0, 0x3f	; 63
     81c:	0f 92       	push	r0
     81e:	11 24       	eor	r1, r1
     820:	0b b6       	in	r0, 0x3b	; 59
     822:	0f 92       	push	r0
     824:	2f 93       	push	r18
     826:	3f 93       	push	r19
     828:	4f 93       	push	r20
     82a:	5f 93       	push	r21
     82c:	6f 93       	push	r22
     82e:	7f 93       	push	r23
     830:	8f 93       	push	r24
     832:	9f 93       	push	r25
     834:	af 93       	push	r26
     836:	bf 93       	push	r27
     838:	ef 93       	push	r30
     83a:	ff 93       	push	r31
     83c:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <dp_obj+0x4>
     840:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <dp_obj+0x5>
     844:	00 97       	sbiw	r24, 0x00	; 0
     846:	39 f0       	breq	.+14     	; 0x856 <__vector_10+0x40>
     848:	dc 01       	movw	r26, r24
     84a:	ed 91       	ld	r30, X+
     84c:	fc 91       	ld	r31, X
     84e:	01 90       	ld	r0, Z+
     850:	f0 81       	ld	r31, Z
     852:	e0 2d       	mov	r30, r0
     854:	19 95       	eicall
     856:	ff 91       	pop	r31
     858:	ef 91       	pop	r30
     85a:	bf 91       	pop	r27
     85c:	af 91       	pop	r26
     85e:	9f 91       	pop	r25
     860:	8f 91       	pop	r24
     862:	7f 91       	pop	r23
     864:	6f 91       	pop	r22
     866:	5f 91       	pop	r21
     868:	4f 91       	pop	r20
     86a:	3f 91       	pop	r19
     86c:	2f 91       	pop	r18
     86e:	0f 90       	pop	r0
     870:	0b be       	out	0x3b, r0	; 59
     872:	0f 90       	pop	r0
     874:	0f be       	out	0x3f, r0	; 63
     876:	0f 90       	pop	r0
     878:	1f 90       	pop	r1
     87a:	18 95       	reti

0000087c <__vector_11>:
     87c:	1f 92       	push	r1
     87e:	0f 92       	push	r0
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	0f 92       	push	r0
     884:	11 24       	eor	r1, r1
     886:	0b b6       	in	r0, 0x3b	; 59
     888:	0f 92       	push	r0
     88a:	2f 93       	push	r18
     88c:	3f 93       	push	r19
     88e:	4f 93       	push	r20
     890:	5f 93       	push	r21
     892:	6f 93       	push	r22
     894:	7f 93       	push	r23
     896:	8f 93       	push	r24
     898:	9f 93       	push	r25
     89a:	af 93       	push	r26
     89c:	bf 93       	push	r27
     89e:	ef 93       	push	r30
     8a0:	ff 93       	push	r31
     8a2:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <dp_obj+0x2>
     8a6:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <dp_obj+0x3>
     8aa:	00 97       	sbiw	r24, 0x00	; 0
     8ac:	39 f0       	breq	.+14     	; 0x8bc <__vector_11+0x40>
     8ae:	dc 01       	movw	r26, r24
     8b0:	ed 91       	ld	r30, X+
     8b2:	fc 91       	ld	r31, X
     8b4:	01 90       	ld	r0, Z+
     8b6:	f0 81       	ld	r31, Z
     8b8:	e0 2d       	mov	r30, r0
     8ba:	19 95       	eicall
     8bc:	ff 91       	pop	r31
     8be:	ef 91       	pop	r30
     8c0:	bf 91       	pop	r27
     8c2:	af 91       	pop	r26
     8c4:	9f 91       	pop	r25
     8c6:	8f 91       	pop	r24
     8c8:	7f 91       	pop	r23
     8ca:	6f 91       	pop	r22
     8cc:	5f 91       	pop	r21
     8ce:	4f 91       	pop	r20
     8d0:	3f 91       	pop	r19
     8d2:	2f 91       	pop	r18
     8d4:	0f 90       	pop	r0
     8d6:	0b be       	out	0x3b, r0	; 59
     8d8:	0f 90       	pop	r0
     8da:	0f be       	out	0x3f, r0	; 63
     8dc:	0f 90       	pop	r0
     8de:	1f 90       	pop	r1
     8e0:	18 95       	reti

000008e2 <_ZN3LCD10wait_readyEv>:
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	fc 01       	movw	r30, r24
     8e8:	6f b7       	in	r22, 0x3f	; 63
     8ea:	f8 94       	cli
     8ec:	a2 81       	ldd	r26, Z+2	; 0x02
     8ee:	b3 81       	ldd	r27, Z+3	; 0x03
     8f0:	1c 92       	st	X, r1
     8f2:	a2 81       	ldd	r26, Z+2	; 0x02
     8f4:	b3 81       	ldd	r27, Z+3	; 0x03
     8f6:	11 97       	sbiw	r26, 0x01	; 1
     8f8:	80 ef       	ldi	r24, 0xF0	; 240
     8fa:	8c 93       	st	X, r24
     8fc:	a2 81       	ldd	r26, Z+2	; 0x02
     8fe:	b3 81       	ldd	r27, Z+3	; 0x03
     900:	8c 91       	ld	r24, X
     902:	80 62       	ori	r24, 0x20	; 32
     904:	8c 93       	st	X, r24
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	a2 81       	ldd	r26, Z+2	; 0x02
     90c:	b3 81       	ldd	r27, Z+3	; 0x03
     90e:	4c 91       	ld	r20, X
     910:	9c 01       	movw	r18, r24
     912:	01 84       	ldd	r0, Z+9	; 0x09
     914:	02 c0       	rjmp	.+4      	; 0x91a <_ZN3LCD10wait_readyEv+0x38>
     916:	22 0f       	add	r18, r18
     918:	33 1f       	adc	r19, r19
     91a:	0a 94       	dec	r0
     91c:	e2 f7       	brpl	.-8      	; 0x916 <_ZN3LCD10wait_readyEv+0x34>
     91e:	24 27       	eor	r18, r20
     920:	2c 93       	st	X, r18
     922:	25 e0       	ldi	r18, 0x05	; 5
     924:	2a 95       	dec	r18
     926:	f1 f7       	brne	.-4      	; 0x924 <_ZN3LCD10wait_readyEv+0x42>
     928:	00 00       	nop
     92a:	a2 81       	ldd	r26, Z+2	; 0x02
     92c:	b3 81       	ldd	r27, Z+3	; 0x03
     92e:	ed 01       	movw	r28, r26
     930:	22 97       	sbiw	r28, 0x02	; 2
     932:	28 81       	ld	r18, Y
     934:	22 95       	swap	r18
     936:	20 7f       	andi	r18, 0xF0	; 240
     938:	3c 91       	ld	r19, X
     93a:	ac 01       	movw	r20, r24
     93c:	01 84       	ldd	r0, Z+9	; 0x09
     93e:	02 c0       	rjmp	.+4      	; 0x944 <_ZN3LCD10wait_readyEv+0x62>
     940:	44 0f       	add	r20, r20
     942:	55 1f       	adc	r21, r21
     944:	0a 94       	dec	r0
     946:	e2 f7       	brpl	.-8      	; 0x940 <_ZN3LCD10wait_readyEv+0x5e>
     948:	43 27       	eor	r20, r19
     94a:	4c 93       	st	X, r20
     94c:	3a e0       	ldi	r19, 0x0A	; 10
     94e:	3a 95       	dec	r19
     950:	f1 f7       	brne	.-4      	; 0x94e <_ZN3LCD10wait_readyEv+0x6c>
     952:	00 c0       	rjmp	.+0      	; 0x954 <_ZN3LCD10wait_readyEv+0x72>
     954:	a2 81       	ldd	r26, Z+2	; 0x02
     956:	b3 81       	ldd	r27, Z+3	; 0x03
     958:	3c 91       	ld	r19, X
     95a:	ac 01       	movw	r20, r24
     95c:	01 84       	ldd	r0, Z+9	; 0x09
     95e:	02 c0       	rjmp	.+4      	; 0x964 <_ZN3LCD10wait_readyEv+0x82>
     960:	44 0f       	add	r20, r20
     962:	55 1f       	adc	r21, r21
     964:	0a 94       	dec	r0
     966:	e2 f7       	brpl	.-8      	; 0x960 <_ZN3LCD10wait_readyEv+0x7e>
     968:	43 27       	eor	r20, r19
     96a:	4c 93       	st	X, r20
     96c:	35 e0       	ldi	r19, 0x05	; 5
     96e:	3a 95       	dec	r19
     970:	f1 f7       	brne	.-4      	; 0x96e <_ZN3LCD10wait_readyEv+0x8c>
     972:	00 00       	nop
     974:	a2 81       	ldd	r26, Z+2	; 0x02
     976:	b3 81       	ldd	r27, Z+3	; 0x03
     978:	ed 01       	movw	r28, r26
     97a:	22 97       	sbiw	r28, 0x02	; 2
     97c:	38 81       	ld	r19, Y
     97e:	3c 91       	ld	r19, X
     980:	ac 01       	movw	r20, r24
     982:	01 84       	ldd	r0, Z+9	; 0x09
     984:	02 c0       	rjmp	.+4      	; 0x98a <_ZN3LCD10wait_readyEv+0xa8>
     986:	44 0f       	add	r20, r20
     988:	55 1f       	adc	r21, r21
     98a:	0a 94       	dec	r0
     98c:	e2 f7       	brpl	.-8      	; 0x986 <_ZN3LCD10wait_readyEv+0xa4>
     98e:	43 27       	eor	r20, r19
     990:	4c 93       	st	X, r20
     992:	22 23       	and	r18, r18
     994:	0c f4       	brge	.+2      	; 0x998 <_ZN3LCD10wait_readyEv+0xb6>
     996:	b9 cf       	rjmp	.-142    	; 0x90a <_ZN3LCD10wait_readyEv+0x28>
     998:	a2 81       	ldd	r26, Z+2	; 0x02
     99a:	b3 81       	ldd	r27, Z+3	; 0x03
     99c:	8c 91       	ld	r24, X
     99e:	8f 7d       	andi	r24, 0xDF	; 223
     9a0:	8c 93       	st	X, r24
     9a2:	02 80       	ldd	r0, Z+2	; 0x02
     9a4:	f3 81       	ldd	r31, Z+3	; 0x03
     9a6:	e0 2d       	mov	r30, r0
     9a8:	31 97       	sbiw	r30, 0x01	; 1
     9aa:	8f ef       	ldi	r24, 0xFF	; 255
     9ac:	80 83       	st	Z, r24
     9ae:	6f bf       	out	0x3f, r22	; 63
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	08 95       	ret

000009b6 <_ZN3LCD6enableEv>:
     9b6:	fc 01       	movw	r30, r24
     9b8:	4f b7       	in	r20, 0x3f	; 63
     9ba:	f8 94       	cli
     9bc:	a2 81       	ldd	r26, Z+2	; 0x02
     9be:	b3 81       	ldd	r27, Z+3	; 0x03
     9c0:	5c 91       	ld	r21, X
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	c9 01       	movw	r24, r18
     9c8:	01 84       	ldd	r0, Z+9	; 0x09
     9ca:	02 c0       	rjmp	.+4      	; 0x9d0 <_ZN3LCD6enableEv+0x1a>
     9cc:	88 0f       	add	r24, r24
     9ce:	99 1f       	adc	r25, r25
     9d0:	0a 94       	dec	r0
     9d2:	e2 f7       	brpl	.-8      	; 0x9cc <_ZN3LCD6enableEv+0x16>
     9d4:	85 27       	eor	r24, r21
     9d6:	8c 93       	st	X, r24
     9d8:	85 e0       	ldi	r24, 0x05	; 5
     9da:	8a 95       	dec	r24
     9dc:	f1 f7       	brne	.-4      	; 0x9da <_ZN3LCD6enableEv+0x24>
     9de:	00 00       	nop
     9e0:	a2 81       	ldd	r26, Z+2	; 0x02
     9e2:	b3 81       	ldd	r27, Z+3	; 0x03
     9e4:	8c 91       	ld	r24, X
     9e6:	01 84       	ldd	r0, Z+9	; 0x09
     9e8:	02 c0       	rjmp	.+4      	; 0x9ee <_ZN3LCD6enableEv+0x38>
     9ea:	22 0f       	add	r18, r18
     9ec:	33 1f       	adc	r19, r19
     9ee:	0a 94       	dec	r0
     9f0:	e2 f7       	brpl	.-8      	; 0x9ea <_ZN3LCD6enableEv+0x34>
     9f2:	28 27       	eor	r18, r24
     9f4:	2c 93       	st	X, r18
     9f6:	4f bf       	out	0x3f, r20	; 63
     9f8:	08 95       	ret

000009fa <_ZN3LCD7commandEh>:
     9fa:	ef 92       	push	r14
     9fc:	ff 92       	push	r15
     9fe:	0f 93       	push	r16
     a00:	1f 93       	push	r17
     a02:	cf 93       	push	r28
     a04:	df 93       	push	r29
     a06:	ec 01       	movw	r28, r24
     a08:	06 2f       	mov	r16, r22
     a0a:	8c 81       	ldd	r24, Y+4	; 0x04
     a0c:	89 30       	cpi	r24, 0x09	; 9
     a0e:	11 f0       	breq	.+4      	; 0xa14 <_ZN3LCD7commandEh+0x1a>
     a10:	ce 01       	movw	r24, r28
     a12:	67 df       	rcall	.-306    	; 0x8e2 <_ZN3LCD10wait_readyEv>
     a14:	1f b7       	in	r17, 0x3f	; 63
     a16:	f8 94       	cli
     a18:	e0 2e       	mov	r14, r16
     a1a:	f1 2c       	mov	r15, r1
     a1c:	f5 94       	asr	r15
     a1e:	e7 94       	ror	r14
     a20:	f5 94       	asr	r15
     a22:	e7 94       	ror	r14
     a24:	f5 94       	asr	r15
     a26:	e7 94       	ror	r14
     a28:	f5 94       	asr	r15
     a2a:	e7 94       	ror	r14
     a2c:	ea 81       	ldd	r30, Y+2	; 0x02
     a2e:	fb 81       	ldd	r31, Y+3	; 0x03
     a30:	e0 82       	st	Z, r14
     a32:	ce 01       	movw	r24, r28
     a34:	c0 df       	rcall	.-128    	; 0x9b6 <_ZN3LCD6enableEv>
     a36:	0f 70       	andi	r16, 0x0F	; 15
     a38:	ea 81       	ldd	r30, Y+2	; 0x02
     a3a:	fb 81       	ldd	r31, Y+3	; 0x03
     a3c:	00 83       	st	Z, r16
     a3e:	ce 01       	movw	r24, r28
     a40:	ba df       	rcall	.-140    	; 0x9b6 <_ZN3LCD6enableEv>
     a42:	ea 81       	ldd	r30, Y+2	; 0x02
     a44:	fb 81       	ldd	r31, Y+3	; 0x03
     a46:	10 82       	st	Z, r1
     a48:	8c 81       	ldd	r24, Y+4	; 0x04
     a4a:	89 30       	cpi	r24, 0x09	; 9
     a4c:	31 f5       	brne	.+76     	; 0xa9a <_ZN3LCD7commandEh+0xa0>
     a4e:	87 ec       	ldi	r24, 0xC7	; 199
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	01 97       	sbiw	r24, 0x01	; 1
     a54:	f1 f7       	brne	.-4      	; 0xa52 <_ZN3LCD7commandEh+0x58>
     a56:	00 c0       	rjmp	.+0      	; 0xa58 <_ZN3LCD7commandEh+0x5e>
     a58:	00 00       	nop
     a5a:	1f c0       	rjmp	.+62     	; 0xa9a <_ZN3LCD7commandEh+0xa0>
     a5c:	19 85       	ldd	r17, Y+9	; 0x09
     a5e:	14 30       	cpi	r17, 0x04	; 4
     a60:	11 f0       	breq	.+4      	; 0xa66 <_ZN3LCD7commandEh+0x6c>
     a62:	84 e0       	ldi	r24, 0x04	; 4
     a64:	01 c0       	rjmp	.+2      	; 0xa68 <_ZN3LCD7commandEh+0x6e>
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	89 87       	std	Y+9, r24	; 0x09
     a6a:	ff b6       	in	r15, 0x3f	; 63
     a6c:	f8 94       	cli
     a6e:	ea 81       	ldd	r30, Y+2	; 0x02
     a70:	fb 81       	ldd	r31, Y+3	; 0x03
     a72:	e0 82       	st	Z, r14
     a74:	ce 01       	movw	r24, r28
     a76:	9f df       	rcall	.-194    	; 0x9b6 <_ZN3LCD6enableEv>
     a78:	ea 81       	ldd	r30, Y+2	; 0x02
     a7a:	fb 81       	ldd	r31, Y+3	; 0x03
     a7c:	00 83       	st	Z, r16
     a7e:	ce 01       	movw	r24, r28
     a80:	9a df       	rcall	.-204    	; 0x9b6 <_ZN3LCD6enableEv>
     a82:	ea 81       	ldd	r30, Y+2	; 0x02
     a84:	fb 81       	ldd	r31, Y+3	; 0x03
     a86:	10 82       	st	Z, r1
     a88:	19 87       	std	Y+9, r17	; 0x09
     a8a:	87 ec       	ldi	r24, 0xC7	; 199
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <_ZN3LCD7commandEh+0x94>
     a92:	00 c0       	rjmp	.+0      	; 0xa94 <_ZN3LCD7commandEh+0x9a>
     a94:	00 00       	nop
     a96:	ff be       	out	0x3f, r15	; 63
     a98:	04 c0       	rjmp	.+8      	; 0xaa2 <_ZN3LCD7commandEh+0xa8>
     a9a:	1f bf       	out	0x3f, r17	; 63
     a9c:	8c 81       	ldd	r24, Y+4	; 0x04
     a9e:	89 30       	cpi	r24, 0x09	; 9
     aa0:	e9 f2       	breq	.-70     	; 0xa5c <_ZN3LCD7commandEh+0x62>
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	1f 91       	pop	r17
     aa8:	0f 91       	pop	r16
     aaa:	ff 90       	pop	r15
     aac:	ef 90       	pop	r14
     aae:	08 95       	ret

00000ab0 <_ZN3LCD7set_posEhh>:
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
     ab4:	fc 01       	movw	r30, r24
     ab6:	a5 81       	ldd	r26, Z+5	; 0x05
     ab8:	b6 81       	ldd	r27, Z+6	; 0x06
     aba:	8c 91       	ld	r24, X
     abc:	68 17       	cp	r22, r24
     abe:	f0 f4       	brcc	.+60     	; 0xafc <_ZN3LCD7set_posEhh+0x4c>
     ac0:	11 96       	adiw	r26, 0x01	; 1
     ac2:	8c 91       	ld	r24, X
     ac4:	11 97       	sbiw	r26, 0x01	; 1
     ac6:	48 17       	cp	r20, r24
     ac8:	d8 f4       	brcc	.+54     	; 0xb00 <_ZN3LCD7set_posEhh+0x50>
     aca:	40 87       	std	Z+8, r20	; 0x08
     acc:	67 83       	std	Z+7, r22	; 0x07
     ace:	ed 01       	movw	r28, r26
     ad0:	c6 0f       	add	r28, r22
     ad2:	d1 1d       	adc	r29, r1
     ad4:	8a 81       	ldd	r24, Y+2	; 0x02
     ad6:	48 0f       	add	r20, r24
     ad8:	84 81       	ldd	r24, Z+4	; 0x04
     ada:	89 30       	cpi	r24, 0x09	; 9
     adc:	39 f4       	brne	.+14     	; 0xaec <_ZN3LCD7set_posEhh+0x3c>
     ade:	8c 91       	ld	r24, X
     ae0:	86 95       	lsr	r24
     ae2:	68 17       	cp	r22, r24
     ae4:	18 f0       	brcs	.+6      	; 0xaec <_ZN3LCD7set_posEhh+0x3c>
     ae6:	87 e0       	ldi	r24, 0x07	; 7
     ae8:	81 87       	std	Z+9, r24	; 0x09
     aea:	02 c0       	rjmp	.+4      	; 0xaf0 <_ZN3LCD7set_posEhh+0x40>
     aec:	84 e0       	ldi	r24, 0x04	; 4
     aee:	81 87       	std	Z+9, r24	; 0x09
     af0:	cf 01       	movw	r24, r30
     af2:	64 2f       	mov	r22, r20
     af4:	60 68       	ori	r22, 0x80	; 128
     af6:	81 df       	rcall	.-254    	; 0x9fa <_ZN3LCD7commandEh>
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	03 c0       	rjmp	.+6      	; 0xb02 <_ZN3LCD7set_posEhh+0x52>
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	01 c0       	rjmp	.+2      	; 0xb02 <_ZN3LCD7set_posEhh+0x52>
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	df 91       	pop	r29
     b04:	cf 91       	pop	r28
     b06:	08 95       	ret

00000b08 <_ZN3LCD14advance_cursorEv>:
     b08:	fc 01       	movw	r30, r24
     b0a:	90 85       	ldd	r25, Z+8	; 0x08
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	89 0f       	add	r24, r25
     b10:	80 87       	std	Z+8, r24	; 0x08
     b12:	a5 81       	ldd	r26, Z+5	; 0x05
     b14:	b6 81       	ldd	r27, Z+6	; 0x06
     b16:	11 96       	adiw	r26, 0x01	; 1
     b18:	2c 91       	ld	r18, X
     b1a:	11 97       	sbiw	r26, 0x01	; 1
     b1c:	82 17       	cp	r24, r18
     b1e:	88 f0       	brcs	.+34     	; 0xb42 <_ZN3LCD14advance_cursorEv+0x3a>
     b20:	81 81       	ldd	r24, Z+1	; 0x01
     b22:	88 23       	and	r24, r24
     b24:	49 f0       	breq	.+18     	; 0xb38 <_ZN3LCD14advance_cursorEv+0x30>
     b26:	10 86       	std	Z+8, r1	; 0x08
     b28:	87 81       	ldd	r24, Z+7	; 0x07
     b2a:	8f 5f       	subi	r24, 0xFF	; 255
     b2c:	87 83       	std	Z+7, r24	; 0x07
     b2e:	9c 91       	ld	r25, X
     b30:	89 17       	cp	r24, r25
     b32:	18 f0       	brcs	.+6      	; 0xb3a <_ZN3LCD14advance_cursorEv+0x32>
     b34:	17 82       	std	Z+7, r1	; 0x07
     b36:	01 c0       	rjmp	.+2      	; 0xb3a <_ZN3LCD14advance_cursorEv+0x32>
     b38:	90 87       	std	Z+8, r25	; 0x08
     b3a:	40 85       	ldd	r20, Z+8	; 0x08
     b3c:	67 81       	ldd	r22, Z+7	; 0x07
     b3e:	cf 01       	movw	r24, r30
     b40:	b7 cf       	rjmp	.-146    	; 0xab0 <_ZN3LCD7set_posEhh>
     b42:	08 95       	ret

00000b44 <_ZN3LCD4initEh>:
     b44:	1f 93       	push	r17
     b46:	cf 93       	push	r28
     b48:	df 93       	push	r29
     b4a:	ec 01       	movw	r28, r24
     b4c:	16 2f       	mov	r17, r22
     b4e:	2f ef       	ldi	r18, 0xFF	; 255
     b50:	81 ee       	ldi	r24, 0xE1	; 225
     b52:	94 e0       	ldi	r25, 0x04	; 4
     b54:	21 50       	subi	r18, 0x01	; 1
     b56:	80 40       	sbci	r24, 0x00	; 0
     b58:	90 40       	sbci	r25, 0x00	; 0
     b5a:	e1 f7       	brne	.-8      	; 0xb54 <_ZN3LCD4initEh+0x10>
     b5c:	00 c0       	rjmp	.+0      	; 0xb5e <_ZN3LCD4initEh+0x1a>
     b5e:	00 00       	nop
     b60:	ea 81       	ldd	r30, Y+2	; 0x02
     b62:	fb 81       	ldd	r31, Y+3	; 0x03
     b64:	83 e0       	ldi	r24, 0x03	; 3
     b66:	80 83       	st	Z, r24
     b68:	ce 01       	movw	r24, r28
     b6a:	25 df       	rcall	.-438    	; 0x9b6 <_ZN3LCD6enableEv>
     b6c:	8f e1       	ldi	r24, 0x1F	; 31
     b6e:	9e e4       	ldi	r25, 0x4E	; 78
     b70:	01 97       	sbiw	r24, 0x01	; 1
     b72:	f1 f7       	brne	.-4      	; 0xb70 <_ZN3LCD4initEh+0x2c>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <_ZN3LCD4initEh+0x32>
     b76:	00 00       	nop
     b78:	ce 01       	movw	r24, r28
     b7a:	1d df       	rcall	.-454    	; 0x9b6 <_ZN3LCD6enableEv>
     b7c:	8f e1       	ldi	r24, 0x1F	; 31
     b7e:	9e e4       	ldi	r25, 0x4E	; 78
     b80:	01 97       	sbiw	r24, 0x01	; 1
     b82:	f1 f7       	brne	.-4      	; 0xb80 <_ZN3LCD4initEh+0x3c>
     b84:	00 c0       	rjmp	.+0      	; 0xb86 <_ZN3LCD4initEh+0x42>
     b86:	00 00       	nop
     b88:	ce 01       	movw	r24, r28
     b8a:	15 df       	rcall	.-470    	; 0x9b6 <_ZN3LCD6enableEv>
     b8c:	8f e1       	ldi	r24, 0x1F	; 31
     b8e:	9e e4       	ldi	r25, 0x4E	; 78
     b90:	01 97       	sbiw	r24, 0x01	; 1
     b92:	f1 f7       	brne	.-4      	; 0xb90 <_ZN3LCD4initEh+0x4c>
     b94:	00 c0       	rjmp	.+0      	; 0xb96 <_ZN3LCD4initEh+0x52>
     b96:	00 00       	nop
     b98:	ea 81       	ldd	r30, Y+2	; 0x02
     b9a:	fb 81       	ldd	r31, Y+3	; 0x03
     b9c:	82 e0       	ldi	r24, 0x02	; 2
     b9e:	80 83       	st	Z, r24
     ba0:	ce 01       	movw	r24, r28
     ba2:	09 df       	rcall	.-494    	; 0x9b6 <_ZN3LCD6enableEv>
     ba4:	8f e1       	ldi	r24, 0x1F	; 31
     ba6:	9e e4       	ldi	r25, 0x4E	; 78
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	f1 f7       	brne	.-4      	; 0xba8 <_ZN3LCD4initEh+0x64>
     bac:	00 c0       	rjmp	.+0      	; 0xbae <_ZN3LCD4initEh+0x6a>
     bae:	00 00       	nop
     bb0:	61 2f       	mov	r22, r17
     bb2:	ce 01       	movw	r24, r28
     bb4:	22 df       	rcall	.-444    	; 0x9fa <_ZN3LCD7commandEh>
     bb6:	ed 81       	ldd	r30, Y+5	; 0x05
     bb8:	fe 81       	ldd	r31, Y+6	; 0x06
     bba:	80 81       	ld	r24, Z
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	21 f4       	brne	.+8      	; 0xbc8 <_ZN3LCD4initEh+0x84>
     bc0:	60 e2       	ldi	r22, 0x20	; 32
     bc2:	ce 01       	movw	r24, r28
     bc4:	1a df       	rcall	.-460    	; 0x9fa <_ZN3LCD7commandEh>
     bc6:	03 c0       	rjmp	.+6      	; 0xbce <_ZN3LCD4initEh+0x8a>
     bc8:	68 e2       	ldi	r22, 0x28	; 40
     bca:	ce 01       	movw	r24, r28
     bcc:	16 df       	rcall	.-468    	; 0x9fa <_ZN3LCD7commandEh>
     bce:	61 e0       	ldi	r22, 0x01	; 1
     bd0:	ce 01       	movw	r24, r28
     bd2:	13 df       	rcall	.-474    	; 0x9fa <_ZN3LCD7commandEh>
     bd4:	8c 81       	ldd	r24, Y+4	; 0x04
     bd6:	89 30       	cpi	r24, 0x09	; 9
     bd8:	31 f4       	brne	.+12     	; 0xbe6 <_ZN3LCD4initEh+0xa2>
     bda:	8f e1       	ldi	r24, 0x1F	; 31
     bdc:	9e e4       	ldi	r25, 0x4E	; 78
     bde:	01 97       	sbiw	r24, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <_ZN3LCD4initEh+0x9a>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <_ZN3LCD4initEh+0xa0>
     be4:	00 00       	nop
     be6:	66 e0       	ldi	r22, 0x06	; 6
     be8:	ce 01       	movw	r24, r28
     bea:	07 df       	rcall	.-498    	; 0x9fa <_ZN3LCD7commandEh>
     bec:	8c 81       	ldd	r24, Y+4	; 0x04
     bee:	89 30       	cpi	r24, 0x09	; 9
     bf0:	09 f0       	breq	.+2      	; 0xbf4 <_ZN3LCD4initEh+0xb0>
     bf2:	3e c0       	rjmp	.+124    	; 0xc70 <_ZN3LCD4initEh+0x12c>
     bf4:	87 e0       	ldi	r24, 0x07	; 7
     bf6:	89 87       	std	Y+9, r24	; 0x09
     bf8:	ea 81       	ldd	r30, Y+2	; 0x02
     bfa:	fb 81       	ldd	r31, Y+3	; 0x03
     bfc:	83 e0       	ldi	r24, 0x03	; 3
     bfe:	80 83       	st	Z, r24
     c00:	ce 01       	movw	r24, r28
     c02:	d9 de       	rcall	.-590    	; 0x9b6 <_ZN3LCD6enableEv>
     c04:	8f e1       	ldi	r24, 0x1F	; 31
     c06:	9e e4       	ldi	r25, 0x4E	; 78
     c08:	01 97       	sbiw	r24, 0x01	; 1
     c0a:	f1 f7       	brne	.-4      	; 0xc08 <_ZN3LCD4initEh+0xc4>
     c0c:	00 c0       	rjmp	.+0      	; 0xc0e <_ZN3LCD4initEh+0xca>
     c0e:	00 00       	nop
     c10:	ce 01       	movw	r24, r28
     c12:	d1 de       	rcall	.-606    	; 0x9b6 <_ZN3LCD6enableEv>
     c14:	8f e1       	ldi	r24, 0x1F	; 31
     c16:	9e e4       	ldi	r25, 0x4E	; 78
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	f1 f7       	brne	.-4      	; 0xc18 <_ZN3LCD4initEh+0xd4>
     c1c:	00 c0       	rjmp	.+0      	; 0xc1e <_ZN3LCD4initEh+0xda>
     c1e:	00 00       	nop
     c20:	ce 01       	movw	r24, r28
     c22:	c9 de       	rcall	.-622    	; 0x9b6 <_ZN3LCD6enableEv>
     c24:	8f e1       	ldi	r24, 0x1F	; 31
     c26:	9e e4       	ldi	r25, 0x4E	; 78
     c28:	01 97       	sbiw	r24, 0x01	; 1
     c2a:	f1 f7       	brne	.-4      	; 0xc28 <_ZN3LCD4initEh+0xe4>
     c2c:	00 c0       	rjmp	.+0      	; 0xc2e <_ZN3LCD4initEh+0xea>
     c2e:	00 00       	nop
     c30:	ea 81       	ldd	r30, Y+2	; 0x02
     c32:	fb 81       	ldd	r31, Y+3	; 0x03
     c34:	82 e0       	ldi	r24, 0x02	; 2
     c36:	80 83       	st	Z, r24
     c38:	ce 01       	movw	r24, r28
     c3a:	bd de       	rcall	.-646    	; 0x9b6 <_ZN3LCD6enableEv>
     c3c:	8f e1       	ldi	r24, 0x1F	; 31
     c3e:	9e e4       	ldi	r25, 0x4E	; 78
     c40:	01 97       	sbiw	r24, 0x01	; 1
     c42:	f1 f7       	brne	.-4      	; 0xc40 <_ZN3LCD4initEh+0xfc>
     c44:	00 c0       	rjmp	.+0      	; 0xc46 <_ZN3LCD4initEh+0x102>
     c46:	00 00       	nop
     c48:	61 2f       	mov	r22, r17
     c4a:	ce 01       	movw	r24, r28
     c4c:	d6 de       	rcall	.-596    	; 0x9fa <_ZN3LCD7commandEh>
     c4e:	68 e2       	ldi	r22, 0x28	; 40
     c50:	ce 01       	movw	r24, r28
     c52:	d3 de       	rcall	.-602    	; 0x9fa <_ZN3LCD7commandEh>
     c54:	61 e0       	ldi	r22, 0x01	; 1
     c56:	ce 01       	movw	r24, r28
     c58:	d0 de       	rcall	.-608    	; 0x9fa <_ZN3LCD7commandEh>
     c5a:	8f e1       	ldi	r24, 0x1F	; 31
     c5c:	9e e4       	ldi	r25, 0x4E	; 78
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	f1 f7       	brne	.-4      	; 0xc5e <_ZN3LCD4initEh+0x11a>
     c62:	00 c0       	rjmp	.+0      	; 0xc64 <_ZN3LCD4initEh+0x120>
     c64:	00 00       	nop
     c66:	66 e0       	ldi	r22, 0x06	; 6
     c68:	ce 01       	movw	r24, r28
     c6a:	c7 de       	rcall	.-626    	; 0x9fa <_ZN3LCD7commandEh>
     c6c:	84 e0       	ldi	r24, 0x04	; 4
     c6e:	89 87       	std	Y+9, r24	; 0x09
     c70:	df 91       	pop	r29
     c72:	cf 91       	pop	r28
     c74:	1f 91       	pop	r17
     c76:	08 95       	ret

00000c78 <_ZN3LCDC1Eh10LCD_Type_th>:
     c78:	0f 93       	push	r16
     c7a:	1f 93       	push	r17
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	ec 01       	movw	r28, r24
     c82:	86 2f       	mov	r24, r22
     c84:	04 2f       	mov	r16, r20
     c86:	12 2f       	mov	r17, r18
     c88:	0e 94 e2 0f 	call	0x1fc4	; 0x1fc4 <_Z22port_handle_to_addressh>
     c8c:	9c 01       	movw	r18, r24
     c8e:	2e 5f       	subi	r18, 0xFE	; 254
     c90:	3f 4f       	sbci	r19, 0xFF	; 255
     c92:	3b 83       	std	Y+3, r19	; 0x03
     c94:	2a 83       	std	Y+2, r18	; 0x02
     c96:	24 e0       	ldi	r18, 0x04	; 4
     c98:	29 87       	std	Y+9, r18	; 0x09
     c9a:	0c 83       	std	Y+4, r16	; 0x04
     c9c:	40 2f       	mov	r20, r16
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	9a 01       	movw	r18, r20
     ca2:	22 0f       	add	r18, r18
     ca4:	33 1f       	adc	r19, r19
     ca6:	42 0f       	add	r20, r18
     ca8:	53 1f       	adc	r21, r19
     caa:	44 0f       	add	r20, r20
     cac:	55 1f       	adc	r21, r21
     cae:	43 5a       	subi	r20, 0xA3	; 163
     cb0:	5d 4f       	sbci	r21, 0xFD	; 253
     cb2:	5e 83       	std	Y+6, r21	; 0x06
     cb4:	4d 83       	std	Y+5, r20	; 0x05
     cb6:	18 86       	std	Y+8, r1	; 0x08
     cb8:	1f 82       	std	Y+7, r1	; 0x07
     cba:	21 2f       	mov	r18, r17
     cbc:	22 1f       	adc	r18, r18
     cbe:	22 27       	eor	r18, r18
     cc0:	22 1f       	adc	r18, r18
     cc2:	29 83       	std	Y+1, r18	; 0x01
     cc4:	2f ef       	ldi	r18, 0xFF	; 255
     cc6:	fc 01       	movw	r30, r24
     cc8:	21 83       	std	Z+1, r18	; 0x01
     cca:	61 2f       	mov	r22, r17
     ccc:	6f 77       	andi	r22, 0x7F	; 127
     cce:	68 83       	st	Y, r22
     cd0:	ce 01       	movw	r24, r28
     cd2:	38 df       	rcall	.-400    	; 0xb44 <_ZN3LCD4initEh>
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	1f 91       	pop	r17
     cda:	0f 91       	pop	r16
     cdc:	08 95       	ret

00000cde <_ZN3LCD10write_charEc>:
     cde:	0f 93       	push	r16
     ce0:	1f 93       	push	r17
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	ec 01       	movw	r28, r24
     ce8:	16 2f       	mov	r17, r22
     cea:	8c 81       	ldd	r24, Y+4	; 0x04
     cec:	89 30       	cpi	r24, 0x09	; 9
     cee:	11 f0       	breq	.+4      	; 0xcf4 <_ZN3LCD10write_charEc+0x16>
     cf0:	ce 01       	movw	r24, r28
     cf2:	f7 dd       	rcall	.-1042   	; 0x8e2 <_ZN3LCD10wait_readyEv>
     cf4:	0f b7       	in	r16, 0x3f	; 63
     cf6:	f8 94       	cli
     cf8:	81 2f       	mov	r24, r17
     cfa:	82 95       	swap	r24
     cfc:	8f 70       	andi	r24, 0x0F	; 15
     cfe:	80 64       	ori	r24, 0x40	; 64
     d00:	ea 81       	ldd	r30, Y+2	; 0x02
     d02:	fb 81       	ldd	r31, Y+3	; 0x03
     d04:	80 83       	st	Z, r24
     d06:	ce 01       	movw	r24, r28
     d08:	56 de       	rcall	.-852    	; 0x9b6 <_ZN3LCD6enableEv>
     d0a:	1f 70       	andi	r17, 0x0F	; 15
     d0c:	10 64       	ori	r17, 0x40	; 64
     d0e:	ea 81       	ldd	r30, Y+2	; 0x02
     d10:	fb 81       	ldd	r31, Y+3	; 0x03
     d12:	10 83       	st	Z, r17
     d14:	ce 01       	movw	r24, r28
     d16:	4f de       	rcall	.-866    	; 0x9b6 <_ZN3LCD6enableEv>
     d18:	ea 81       	ldd	r30, Y+2	; 0x02
     d1a:	fb 81       	ldd	r31, Y+3	; 0x03
     d1c:	10 82       	st	Z, r1
     d1e:	8c 81       	ldd	r24, Y+4	; 0x04
     d20:	89 30       	cpi	r24, 0x09	; 9
     d22:	31 f4       	brne	.+12     	; 0xd30 <_ZN3LCD10write_charEc+0x52>
     d24:	87 ec       	ldi	r24, 0xC7	; 199
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	f1 f7       	brne	.-4      	; 0xd28 <_ZN3LCD10write_charEc+0x4a>
     d2c:	00 c0       	rjmp	.+0      	; 0xd2e <_ZN3LCD10write_charEc+0x50>
     d2e:	00 00       	nop
     d30:	0f bf       	out	0x3f, r16	; 63
     d32:	ce 01       	movw	r24, r28
     d34:	e9 de       	rcall	.-558    	; 0xb08 <_ZN3LCD14advance_cursorEv>
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	0f 91       	pop	r16
     d3e:	08 95       	ret

00000d40 <_ZN3LCD15write_SRAM_textEPKch>:
     d40:	ef 92       	push	r14
     d42:	ff 92       	push	r15
     d44:	0f 93       	push	r16
     d46:	1f 93       	push	r17
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
     d4c:	7c 01       	movw	r14, r24
     d4e:	44 23       	and	r20, r20
     d50:	11 f0       	breq	.+4      	; 0xd56 <_ZN3LCD15write_SRAM_textEPKch+0x16>
     d52:	50 e0       	ldi	r21, 0x00	; 0
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <_ZN3LCD15write_SRAM_textEPKch+0x1a>
     d56:	4f ef       	ldi	r20, 0xFF	; 255
     d58:	5f ef       	ldi	r21, 0xFF	; 255
     d5a:	eb 01       	movw	r28, r22
     d5c:	8b 01       	movw	r16, r22
     d5e:	04 0f       	add	r16, r20
     d60:	15 1f       	adc	r17, r21
     d62:	0c 17       	cp	r16, r28
     d64:	1d 07       	cpc	r17, r29
     d66:	39 f0       	breq	.+14     	; 0xd76 <_ZN3LCD15write_SRAM_textEPKch+0x36>
     d68:	68 81       	ld	r22, Y
     d6a:	66 23       	and	r22, r22
     d6c:	21 f0       	breq	.+8      	; 0xd76 <_ZN3LCD15write_SRAM_textEPKch+0x36>
     d6e:	21 96       	adiw	r28, 0x01	; 1
     d70:	c7 01       	movw	r24, r14
     d72:	b5 df       	rcall	.-150    	; 0xcde <_ZN3LCD10write_charEc>
     d74:	f6 cf       	rjmp	.-20     	; 0xd62 <_ZN3LCD15write_SRAM_textEPKch+0x22>
     d76:	df 91       	pop	r29
     d78:	cf 91       	pop	r28
     d7a:	1f 91       	pop	r17
     d7c:	0f 91       	pop	r16
     d7e:	ff 90       	pop	r15
     d80:	ef 90       	pop	r14
     d82:	08 95       	ret

00000d84 <_ZN3LCD16write_FLASH_textEPKch>:
     d84:	ef 92       	push	r14
     d86:	ff 92       	push	r15
     d88:	0f 93       	push	r16
     d8a:	1f 93       	push	r17
     d8c:	cf 93       	push	r28
     d8e:	df 93       	push	r29
     d90:	7c 01       	movw	r14, r24
     d92:	44 23       	and	r20, r20
     d94:	19 f0       	breq	.+6      	; 0xd9c <_ZN3LCD16write_FLASH_textEPKch+0x18>
     d96:	04 2f       	mov	r16, r20
     d98:	10 e0       	ldi	r17, 0x00	; 0
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <_ZN3LCD16write_FLASH_textEPKch+0x1c>
     d9c:	0f ef       	ldi	r16, 0xFF	; 255
     d9e:	1f ef       	ldi	r17, 0xFF	; 255
     da0:	06 0f       	add	r16, r22
     da2:	17 1f       	adc	r17, r23
     da4:	fb 01       	movw	r30, r22
     da6:	e0 17       	cp	r30, r16
     da8:	f1 07       	cpc	r31, r17
     daa:	49 f0       	breq	.+18     	; 0xdbe <_ZN3LCD16write_FLASH_textEPKch+0x3a>
     dac:	64 91       	lpm	r22, Z
     dae:	ef 01       	movw	r28, r30
     db0:	21 96       	adiw	r28, 0x01	; 1
     db2:	66 23       	and	r22, r22
     db4:	21 f0       	breq	.+8      	; 0xdbe <_ZN3LCD16write_FLASH_textEPKch+0x3a>
     db6:	c7 01       	movw	r24, r14
     db8:	92 df       	rcall	.-220    	; 0xcde <_ZN3LCD10write_charEc>
     dba:	fe 01       	movw	r30, r28
     dbc:	f4 cf       	rjmp	.-24     	; 0xda6 <_ZN3LCD16write_FLASH_textEPKch+0x22>
     dbe:	df 91       	pop	r29
     dc0:	cf 91       	pop	r28
     dc2:	1f 91       	pop	r17
     dc4:	0f 91       	pop	r16
     dc6:	ff 90       	pop	r15
     dc8:	ef 90       	pop	r14
     dca:	08 95       	ret

00000dcc <_ZN3LCD5clearEv>:
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	ec 01       	movw	r28, r24
     dd2:	61 e0       	ldi	r22, 0x01	; 1
     dd4:	12 de       	rcall	.-988    	; 0x9fa <_ZN3LCD7commandEh>
     dd6:	8c 81       	ldd	r24, Y+4	; 0x04
     dd8:	89 30       	cpi	r24, 0x09	; 9
     dda:	31 f4       	brne	.+12     	; 0xde8 <_ZN3LCD5clearEv+0x1c>
     ddc:	8f e1       	ldi	r24, 0x1F	; 31
     dde:	9e e4       	ldi	r25, 0x4E	; 78
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <_ZN3LCD5clearEv+0x14>
     de4:	00 c0       	rjmp	.+0      	; 0xde6 <_ZN3LCD5clearEv+0x1a>
     de6:	00 00       	nop
     de8:	18 86       	std	Y+8, r1	; 0x08
     dea:	1f 82       	std	Y+7, r1	; 0x07
     dec:	84 e0       	ldi	r24, 0x04	; 4
     dee:	89 87       	std	Y+9, r24	; 0x09
     df0:	df 91       	pop	r29
     df2:	cf 91       	pop	r28
     df4:	08 95       	ret

00000df6 <_ZN3LCD4itoaEPcihc>:
     df6:	8f 92       	push	r8
     df8:	9f 92       	push	r9
     dfa:	af 92       	push	r10
     dfc:	bf 92       	push	r11
     dfe:	cf 92       	push	r12
     e00:	df 92       	push	r13
     e02:	ef 92       	push	r14
     e04:	ff 92       	push	r15
     e06:	0f 93       	push	r16
     e08:	1f 93       	push	r17
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	6c 01       	movw	r12, r24
     e10:	fb 01       	movw	r30, r22
     e12:	89 2b       	or	r24, r25
     e14:	31 f4       	brne	.+12     	; 0xe22 <_ZN3LCD4itoaEPcihc+0x2c>
     e16:	0f 2e       	mov	r0, r31
     e18:	fe e3       	ldi	r31, 0x3E	; 62
     e1a:	cf 2e       	mov	r12, r31
     e1c:	f3 e0       	ldi	r31, 0x03	; 3
     e1e:	df 2e       	mov	r13, r31
     e20:	f0 2d       	mov	r31, r0
     e22:	ff 23       	and	r31, r31
     e24:	3c f4       	brge	.+14     	; 0xe34 <_ZN3LCD4itoaEPcihc+0x3e>
     e26:	8d e2       	ldi	r24, 0x2D	; 45
     e28:	d6 01       	movw	r26, r12
     e2a:	8c 93       	st	X, r24
     e2c:	f1 95       	neg	r31
     e2e:	e1 95       	neg	r30
     e30:	f1 09       	sbc	r31, r1
     e32:	37 c0       	rjmp	.+110    	; 0xea2 <_ZN3LCD4itoaEPcihc+0xac>
     e34:	d6 01       	movw	r26, r12
     e36:	2c 93       	st	X, r18
     e38:	34 c0       	rjmp	.+104    	; 0xea2 <_ZN3LCD4itoaEPcihc+0xac>
     e3a:	cf 01       	movw	r24, r30
     e3c:	b8 01       	movw	r22, r16
     e3e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__divmodhi4>
     e42:	7c 01       	movw	r14, r24
     e44:	8e 17       	cp	r24, r30
     e46:	9f 07       	cpc	r25, r31
     e48:	91 f4       	brne	.+36     	; 0xe6e <_ZN3LCD4itoaEPcihc+0x78>
     e4a:	35 30       	cpi	r19, 0x05	; 5
     e4c:	21 f4       	brne	.+8      	; 0xe56 <_ZN3LCD4itoaEPcihc+0x60>
     e4e:	80 e3       	ldi	r24, 0x30	; 48
     e50:	f6 01       	movw	r30, r12
     e52:	85 83       	std	Z+5, r24	; 0x05
     e54:	1c c0       	rjmp	.+56     	; 0xe8e <_ZN3LCD4itoaEPcihc+0x98>
     e56:	88 81       	ld	r24, Y
     e58:	28 13       	cpse	r18, r24
     e5a:	02 c0       	rjmp	.+4      	; 0xe60 <_ZN3LCD4itoaEPcihc+0x6a>
     e5c:	29 83       	std	Y+1, r18	; 0x01
     e5e:	0d c0       	rjmp	.+26     	; 0xe7a <_ZN3LCD4itoaEPcihc+0x84>
     e60:	8d 32       	cpi	r24, 0x2D	; 45
     e62:	19 f4       	brne	.+6      	; 0xe6a <_ZN3LCD4itoaEPcihc+0x74>
     e64:	28 83       	st	Y, r18
     e66:	89 82       	std	Y+1, r8	; 0x01
     e68:	08 c0       	rjmp	.+16     	; 0xe7a <_ZN3LCD4itoaEPcihc+0x84>
     e6a:	99 82       	std	Y+1, r9	; 0x01
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <_ZN3LCD4itoaEPcihc+0x84>
     e6e:	cf 01       	movw	r24, r30
     e70:	b8 01       	movw	r22, r16
     e72:	0e 94 2b 10 	call	0x2056	; 0x2056 <__divmodhi4>
     e76:	60 5d       	subi	r22, 0xD0	; 208
     e78:	69 83       	std	Y+1, r22	; 0x01
     e7a:	c8 01       	movw	r24, r16
     e7c:	b5 01       	movw	r22, r10
     e7e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__divmodhi4>
     e82:	8b 01       	movw	r16, r22
     e84:	3f 5f       	subi	r19, 0xFF	; 255
     e86:	21 96       	adiw	r28, 0x01	; 1
     e88:	f7 01       	movw	r30, r14
     e8a:	36 30       	cpi	r19, 0x06	; 6
     e8c:	b1 f6       	brne	.-84     	; 0xe3a <_ZN3LCD4itoaEPcihc+0x44>
     e8e:	d6 01       	movw	r26, r12
     e90:	16 96       	adiw	r26, 0x06	; 6
     e92:	1c 92       	st	X, r1
     e94:	86 e0       	ldi	r24, 0x06	; 6
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	84 1b       	sub	r24, r20
     e9a:	91 09       	sbc	r25, r1
     e9c:	8c 0d       	add	r24, r12
     e9e:	9d 1d       	adc	r25, r13
     ea0:	12 c0       	rjmp	.+36     	; 0xec6 <_ZN3LCD4itoaEPcihc+0xd0>
     ea2:	e6 01       	movw	r28, r12
     ea4:	31 e0       	ldi	r19, 0x01	; 1
     ea6:	00 e1       	ldi	r16, 0x10	; 16
     ea8:	17 e2       	ldi	r17, 0x27	; 39
     eaa:	0f 2e       	mov	r0, r31
     eac:	f0 e3       	ldi	r31, 0x30	; 48
     eae:	9f 2e       	mov	r9, r31
     eb0:	f0 2d       	mov	r31, r0
     eb2:	0f 2e       	mov	r0, r31
     eb4:	fd e2       	ldi	r31, 0x2D	; 45
     eb6:	8f 2e       	mov	r8, r31
     eb8:	f0 2d       	mov	r31, r0
     eba:	0f 2e       	mov	r0, r31
     ebc:	fa e0       	ldi	r31, 0x0A	; 10
     ebe:	af 2e       	mov	r10, r31
     ec0:	b1 2c       	mov	r11, r1
     ec2:	f0 2d       	mov	r31, r0
     ec4:	ba cf       	rjmp	.-140    	; 0xe3a <_ZN3LCD4itoaEPcihc+0x44>
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	ff 90       	pop	r15
     ed0:	ef 90       	pop	r14
     ed2:	df 90       	pop	r13
     ed4:	cf 90       	pop	r12
     ed6:	bf 90       	pop	r11
     ed8:	af 90       	pop	r10
     eda:	9f 90       	pop	r9
     edc:	8f 90       	pop	r8
     ede:	08 95       	ret

00000ee0 <_ZN3LCD12write_numberEihc>:
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	ec 01       	movw	r28, r24
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	85 df       	rcall	.-246    	; 0xdf6 <_ZN3LCD4itoaEPcihc>
     eec:	40 e0       	ldi	r20, 0x00	; 0
     eee:	bc 01       	movw	r22, r24
     ef0:	ce 01       	movw	r24, r28
     ef2:	26 df       	rcall	.-436    	; 0xd40 <_ZN3LCD15write_SRAM_textEPKch>
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	08 95       	ret

00000efa <_Z11sem_waitingv>:
     efa:	90 91 46 03 	lds	r25, 0x0346	; 0x800346 <_ZL17sem_waiting_count>
     efe:	99 23       	and	r25, r25
     f00:	a9 f0       	breq	.+42     	; 0xf2c <_Z11sem_waitingv+0x32>
     f02:	20 91 45 03 	lds	r18, 0x0345	; 0x800345 <_ZL18sem_waiting_oldest>
     f06:	e2 2f       	mov	r30, r18
     f08:	f0 e0       	ldi	r31, 0x00	; 0
     f0a:	e0 50       	subi	r30, 0x00	; 0
     f0c:	fe 4f       	sbci	r31, 0xFE	; 254
     f0e:	80 81       	ld	r24, Z
     f10:	3f ef       	ldi	r19, 0xFF	; 255
     f12:	30 83       	st	Z, r19
     f14:	91 50       	subi	r25, 0x01	; 1
     f16:	90 93 46 03 	sts	0x0346, r25	; 0x800346 <_ZL17sem_waiting_count>
     f1a:	2f 5f       	subi	r18, 0xFF	; 255
     f1c:	28 30       	cpi	r18, 0x08	; 8
     f1e:	18 f4       	brcc	.+6      	; 0xf26 <_Z11sem_waitingv+0x2c>
     f20:	20 93 45 03 	sts	0x0345, r18	; 0x800345 <_ZL18sem_waiting_oldest>
     f24:	08 95       	ret
     f26:	10 92 45 03 	sts	0x0345, r1	; 0x800345 <_ZL18sem_waiting_oldest>
     f2a:	08 95       	ret
     f2c:	8f ef       	ldi	r24, 0xFF	; 255
     f2e:	08 95       	ret

00000f30 <__vector_23>:
     f30:	ff 93       	push	r31
     f32:	ef 93       	push	r30
     f34:	df 93       	push	r29
     f36:	cf 93       	push	r28
     f38:	bf 93       	push	r27
     f3a:	af 93       	push	r26
     f3c:	9f 93       	push	r25
     f3e:	8f 93       	push	r24
     f40:	7f 93       	push	r23
     f42:	6f 93       	push	r22
     f44:	5f 93       	push	r21
     f46:	4f 93       	push	r20
     f48:	3f 93       	push	r19
     f4a:	2f 93       	push	r18
     f4c:	1f 93       	push	r17
     f4e:	0f 93       	push	r16
     f50:	ff 92       	push	r15
     f52:	ef 92       	push	r14
     f54:	df 92       	push	r13
     f56:	cf 92       	push	r12
     f58:	bf 92       	push	r11
     f5a:	af 92       	push	r10
     f5c:	9f 92       	push	r9
     f5e:	8f 92       	push	r8
     f60:	7f 92       	push	r7
     f62:	6f 92       	push	r6
     f64:	5f 92       	push	r5
     f66:	4f 92       	push	r4
     f68:	3f 92       	push	r3
     f6a:	2f 92       	push	r2
     f6c:	1f 92       	push	r1
     f6e:	0f 92       	push	r0
     f70:	c0 91 08 02 	lds	r28, 0x0208	; 0x800208 <_ZL14active_task_id>
     f74:	2c 2f       	mov	r18, r28
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	8f b7       	in	r24, 0x3f	; 63
     f7a:	4b e2       	ldi	r20, 0x2B	; 43
     f7c:	53 e0       	ldi	r21, 0x03	; 3
     f7e:	24 9f       	mul	r18, r20
     f80:	f0 01       	movw	r30, r0
     f82:	25 9f       	mul	r18, r21
     f84:	f0 0d       	add	r31, r0
     f86:	34 9f       	mul	r19, r20
     f88:	f0 0d       	add	r31, r0
     f8a:	11 24       	eor	r1, r1
     f8c:	e8 5a       	subi	r30, 0xA8	; 168
     f8e:	fc 4f       	sbci	r31, 0xFC	; 252
     f90:	80 87       	std	Z+8, r24	; 0x08
     f92:	8d b7       	in	r24, 0x3d	; 61
     f94:	9e b7       	in	r25, 0x3e	; 62
     f96:	92 87       	std	Z+10, r25	; 0x0a
     f98:	81 87       	std	Z+9, r24	; 0x09
     f9a:	84 81       	ldd	r24, Z+4	; 0x04
     f9c:	95 81       	ldd	r25, Z+5	; 0x05
     f9e:	a6 81       	ldd	r26, Z+6	; 0x06
     fa0:	b7 81       	ldd	r27, Z+7	; 0x07
     fa2:	8f 51       	subi	r24, 0x1F	; 31
     fa4:	9f 4f       	sbci	r25, 0xFF	; 255
     fa6:	af 4f       	sbci	r26, 0xFF	; 255
     fa8:	bf 4f       	sbci	r27, 0xFF	; 255
     faa:	84 83       	std	Z+4, r24	; 0x04
     fac:	95 83       	std	Z+5, r25	; 0x05
     fae:	a6 83       	std	Z+6, r26	; 0x06
     fb0:	b7 83       	std	Z+7, r27	; 0x07
     fb2:	81 81       	ldd	r24, Z+1	; 0x01
     fb4:	81 11       	cpse	r24, r1
     fb6:	0d c0       	rjmp	.+26     	; 0xfd2 <__vector_23+0xa2>
     fb8:	8b e2       	ldi	r24, 0x2B	; 43
     fba:	93 e0       	ldi	r25, 0x03	; 3
     fbc:	28 9f       	mul	r18, r24
     fbe:	f0 01       	movw	r30, r0
     fc0:	29 9f       	mul	r18, r25
     fc2:	f0 0d       	add	r31, r0
     fc4:	38 9f       	mul	r19, r24
     fc6:	f0 0d       	add	r31, r0
     fc8:	11 24       	eor	r1, r1
     fca:	e8 5a       	subi	r30, 0xA8	; 168
     fcc:	fc 4f       	sbci	r31, 0xFC	; 252
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	81 83       	std	Z+1, r24	; 0x01
     fd2:	93 df       	rcall	.-218    	; 0xefa <_Z11sem_waitingv>
     fd4:	8f 3f       	cpi	r24, 0xFF	; 255
     fd6:	19 f0       	breq	.+6      	; 0xfde <__vector_23+0xae>
     fd8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZL14active_task_id>
     fdc:	41 c0       	rjmp	.+130    	; 0x1060 <__EEPROM_REGION_LENGTH__+0x60>
     fde:	8c 2f       	mov	r24, r28
     fe0:	4b e2       	ldi	r20, 0x2B	; 43
     fe2:	53 e0       	ldi	r21, 0x03	; 3
     fe4:	8f 5f       	subi	r24, 0xFF	; 255
     fe6:	88 30       	cpi	r24, 0x08	; 8
     fe8:	08 f0       	brcs	.+2      	; 0xfec <__vector_23+0xbc>
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	28 2f       	mov	r18, r24
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	24 9f       	mul	r18, r20
     ff2:	f0 01       	movw	r30, r0
     ff4:	25 9f       	mul	r18, r21
     ff6:	f0 0d       	add	r31, r0
     ff8:	34 9f       	mul	r19, r20
     ffa:	f0 0d       	add	r31, r0
     ffc:	11 24       	eor	r1, r1
     ffe:	e8 5a       	subi	r30, 0xA8	; 168
    1000:	fc 4f       	sbci	r31, 0xFC	; 252
    1002:	91 81       	ldd	r25, Z+1	; 0x01
    1004:	91 30       	cpi	r25, 0x01	; 1
    1006:	41 f5       	brne	.+80     	; 0x1058 <__EEPROM_REGION_LENGTH__+0x58>
    1008:	24 9f       	mul	r18, r20
    100a:	f0 01       	movw	r30, r0
    100c:	25 9f       	mul	r18, r21
    100e:	f0 0d       	add	r31, r0
    1010:	34 9f       	mul	r19, r20
    1012:	f0 0d       	add	r31, r0
    1014:	11 24       	eor	r1, r1
    1016:	e8 5a       	subi	r30, 0xA8	; 168
    1018:	fc 4f       	sbci	r31, 0xFC	; 252
    101a:	93 81       	ldd	r25, Z+3	; 0x03
    101c:	99 23       	and	r25, r25
    101e:	61 f0       	breq	.+24     	; 0x1038 <__EEPROM_REGION_LENGTH__+0x38>
    1020:	24 9f       	mul	r18, r20
    1022:	f0 01       	movw	r30, r0
    1024:	25 9f       	mul	r18, r21
    1026:	f0 0d       	add	r31, r0
    1028:	34 9f       	mul	r19, r20
    102a:	f0 0d       	add	r31, r0
    102c:	11 24       	eor	r1, r1
    102e:	e8 5a       	subi	r30, 0xA8	; 168
    1030:	fc 4f       	sbci	r31, 0xFC	; 252
    1032:	91 50       	subi	r25, 0x01	; 1
    1034:	93 83       	std	Z+3, r25	; 0x03
    1036:	d6 cf       	rjmp	.-84     	; 0xfe4 <__vector_23+0xb4>
    1038:	4b e2       	ldi	r20, 0x2B	; 43
    103a:	53 e0       	ldi	r21, 0x03	; 3
    103c:	24 9f       	mul	r18, r20
    103e:	f0 01       	movw	r30, r0
    1040:	25 9f       	mul	r18, r21
    1042:	f0 0d       	add	r31, r0
    1044:	34 9f       	mul	r19, r20
    1046:	f0 0d       	add	r31, r0
    1048:	11 24       	eor	r1, r1
    104a:	e8 5a       	subi	r30, 0xA8	; 168
    104c:	fc 4f       	sbci	r31, 0xFC	; 252
    104e:	92 81       	ldd	r25, Z+2	; 0x02
    1050:	93 83       	std	Z+3, r25	; 0x03
    1052:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZL14active_task_id>
    1056:	04 c0       	rjmp	.+8      	; 0x1060 <__EEPROM_REGION_LENGTH__+0x60>
    1058:	8c 13       	cpse	r24, r28
    105a:	c4 cf       	rjmp	.-120    	; 0xfe4 <__vector_23+0xb4>
    105c:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <_ZL14active_task_id>
    1060:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
    1064:	8b e2       	ldi	r24, 0x2B	; 43
    1066:	93 e0       	ldi	r25, 0x03	; 3
    1068:	28 9f       	mul	r18, r24
    106a:	f0 01       	movw	r30, r0
    106c:	29 9f       	mul	r18, r25
    106e:	f0 0d       	add	r31, r0
    1070:	11 24       	eor	r1, r1
    1072:	e8 5a       	subi	r30, 0xA8	; 168
    1074:	fc 4f       	sbci	r31, 0xFC	; 252
    1076:	11 82       	std	Z+1, r1	; 0x01
    1078:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    107a:	f8 94       	cli
    107c:	40 91 49 03 	lds	r20, 0x0349	; 0x800349 <_ZL8OS_timer+0x2>
    1080:	50 91 4a 03 	lds	r21, 0x034A	; 0x80034a <_ZL8OS_timer+0x3>
    1084:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <tc_vect>
    1088:	30 91 d2 02 	lds	r19, 0x02D2	; 0x8002d2 <tc_vect+0x1>
    108c:	42 17       	cp	r20, r18
    108e:	53 07       	cpc	r21, r19
    1090:	51 f4       	brne	.+20     	; 0x10a6 <__EEPROM_REGION_LENGTH__+0xa6>
    1092:	e7 e4       	ldi	r30, 0x47	; 71
    1094:	f3 e0       	ldi	r31, 0x03	; 3
    1096:	a4 81       	ldd	r26, Z+4	; 0x04
    1098:	b5 81       	ldd	r27, Z+5	; 0x05
    109a:	8c 91       	ld	r24, X
    109c:	85 60       	ori	r24, 0x05	; 5
    109e:	8c 93       	st	X, r24
    10a0:	80 89       	ldd	r24, Z+16	; 0x10
    10a2:	86 bd       	out	0x26, r24	; 38
    10a4:	0a c0       	rjmp	.+20     	; 0x10ba <__EEPROM_REGION_LENGTH__+0xba>
    10a6:	e7 e4       	ldi	r30, 0x47	; 71
    10a8:	f3 e0       	ldi	r31, 0x03	; 3
    10aa:	a4 81       	ldd	r26, Z+4	; 0x04
    10ac:	b5 81       	ldd	r27, Z+5	; 0x05
    10ae:	8c 91       	ld	r24, X
    10b0:	87 60       	ori	r24, 0x07	; 7
    10b2:	8c 93       	st	X, r24
    10b4:	80 89       	ldd	r24, Z+16	; 0x10
    10b6:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    10ba:	9f bf       	out	0x3f, r25	; 63
    10bc:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
    10c0:	8b e2       	ldi	r24, 0x2B	; 43
    10c2:	93 e0       	ldi	r25, 0x03	; 3
    10c4:	28 9f       	mul	r18, r24
    10c6:	f0 01       	movw	r30, r0
    10c8:	29 9f       	mul	r18, r25
    10ca:	f0 0d       	add	r31, r0
    10cc:	11 24       	eor	r1, r1
    10ce:	e8 5a       	subi	r30, 0xA8	; 168
    10d0:	fc 4f       	sbci	r31, 0xFC	; 252
    10d2:	20 85       	ldd	r18, Z+8	; 0x08
    10d4:	2f bf       	out	0x3f, r18	; 63
    10d6:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
    10da:	28 9f       	mul	r18, r24
    10dc:	f0 01       	movw	r30, r0
    10de:	29 9f       	mul	r18, r25
    10e0:	f0 0d       	add	r31, r0
    10e2:	11 24       	eor	r1, r1
    10e4:	e8 5a       	subi	r30, 0xA8	; 168
    10e6:	fc 4f       	sbci	r31, 0xFC	; 252
    10e8:	81 85       	ldd	r24, Z+9	; 0x09
    10ea:	92 85       	ldd	r25, Z+10	; 0x0a
    10ec:	9e bf       	out	0x3e, r25	; 62
    10ee:	8d bf       	out	0x3d, r24	; 61
    10f0:	0f 90       	pop	r0
    10f2:	1f 90       	pop	r1
    10f4:	2f 90       	pop	r2
    10f6:	3f 90       	pop	r3
    10f8:	4f 90       	pop	r4
    10fa:	5f 90       	pop	r5
    10fc:	6f 90       	pop	r6
    10fe:	7f 90       	pop	r7
    1100:	8f 90       	pop	r8
    1102:	9f 90       	pop	r9
    1104:	af 90       	pop	r10
    1106:	bf 90       	pop	r11
    1108:	cf 90       	pop	r12
    110a:	df 90       	pop	r13
    110c:	ef 90       	pop	r14
    110e:	ff 90       	pop	r15
    1110:	0f 91       	pop	r16
    1112:	1f 91       	pop	r17
    1114:	2f 91       	pop	r18
    1116:	3f 91       	pop	r19
    1118:	4f 91       	pop	r20
    111a:	5f 91       	pop	r21
    111c:	6f 91       	pop	r22
    111e:	7f 91       	pop	r23
    1120:	8f 91       	pop	r24
    1122:	9f 91       	pop	r25
    1124:	af 91       	pop	r26
    1126:	bf 91       	pop	r27
    1128:	cf 91       	pop	r28
    112a:	df 91       	pop	r29
    112c:	ef 91       	pop	r30
    112e:	ff 91       	pop	r31
    1130:	18 95       	reti

00001132 <_GLOBAL__sub_I__Z11task_insertPFvvE8Priority>:
    1132:	60 e0       	ldi	r22, 0x00	; 0
    1134:	87 e4       	ldi	r24, 0x47	; 71
    1136:	93 e0       	ldi	r25, 0x03	; 3
    1138:	bc c6       	rjmp	.+3448   	; 0x1eb2 <_ZN7OSTimerC1Eh>
    113a:	08 95       	ret

0000113c <_ZN6Timer88notify_AEv>:
    __asm__ volatile ("" ::: "memory");
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	ec 01       	movw	r28, r24
    1142:	e8 85       	ldd	r30, Y+8	; 0x08
    1144:	f9 85       	ldd	r31, Y+9	; 0x09
    1146:	30 97       	sbiw	r30, 0x00	; 0
    1148:	09 f0       	breq	.+2      	; 0x114c <_ZN6Timer88notify_AEv+0x10>
    114a:	19 95       	eicall
    114c:	8a 85       	ldd	r24, Y+10	; 0x0a
    114e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1150:	89 2b       	or	r24, r25
    1152:	39 f4       	brne	.+14     	; 0x1162 <_ZN6Timer88notify_AEv+0x26>
    1154:	e8 81       	ld	r30, Y
    1156:	f9 81       	ldd	r31, Y+1	; 0x01
    1158:	01 90       	ld	r0, Z+
    115a:	f0 81       	ld	r31, Z
    115c:	e0 2d       	mov	r30, r0
    115e:	ce 01       	movw	r24, r28
    1160:	19 95       	eicall
    1162:	df 91       	pop	r29
    1164:	cf 91       	pop	r28
    1166:	08 95       	ret

00001168 <_ZN6Timer88notify_BEv>:
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	ec 01       	movw	r28, r24
    116e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1170:	fb 85       	ldd	r31, Y+11	; 0x0b
    1172:	30 97       	sbiw	r30, 0x00	; 0
    1174:	09 f0       	breq	.+2      	; 0x1178 <_ZN6Timer88notify_BEv+0x10>
    1176:	19 95       	eicall
    1178:	8e 85       	ldd	r24, Y+14	; 0x0e
    117a:	9f 85       	ldd	r25, Y+15	; 0x0f
    117c:	89 2b       	or	r24, r25
    117e:	39 f4       	brne	.+14     	; 0x118e <_ZN6Timer88notify_BEv+0x26>
    1180:	e8 81       	ld	r30, Y
    1182:	f9 81       	ldd	r31, Y+1	; 0x01
    1184:	01 90       	ld	r0, Z+
    1186:	f0 81       	ld	r31, Z
    1188:	e0 2d       	mov	r30, r0
    118a:	ce 01       	movw	r24, r28
    118c:	19 95       	eicall
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	08 95       	ret

00001194 <_ZN6Timer88notify_CEv>:
    1194:	08 95       	ret

00001196 <_ZN6Timer88notify_OEv>:
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	ec 01       	movw	r28, r24
    119c:	ee 85       	ldd	r30, Y+14	; 0x0e
    119e:	ff 85       	ldd	r31, Y+15	; 0x0f
    11a0:	30 97       	sbiw	r30, 0x00	; 0
    11a2:	09 f0       	breq	.+2      	; 0x11a6 <_ZN6Timer88notify_OEv+0x10>
    11a4:	19 95       	eicall
    11a6:	e8 81       	ld	r30, Y
    11a8:	f9 81       	ldd	r31, Y+1	; 0x01
    11aa:	01 90       	ld	r0, Z+
    11ac:	f0 81       	ld	r31, Z
    11ae:	e0 2d       	mov	r30, r0
    11b0:	ce 01       	movw	r24, r28
    11b2:	19 95       	eicall
    11b4:	df 91       	pop	r29
    11b6:	cf 91       	pop	r28
    11b8:	08 95       	ret

000011ba <_ZN7OSTimer5resetEv>:
    11ba:	dc 01       	movw	r26, r24
    11bc:	2f b7       	in	r18, 0x3f	; 63
    11be:	f8 94       	cli
    11c0:	12 96       	adiw	r26, 0x02	; 2
    11c2:	4d 91       	ld	r20, X+
    11c4:	5c 91       	ld	r21, X
    11c6:	13 97       	sbiw	r26, 0x03	; 3
    11c8:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <tc_vect>
    11cc:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <tc_vect+0x1>
    11d0:	48 17       	cp	r20, r24
    11d2:	59 07       	cpc	r21, r25
    11d4:	59 f4       	brne	.+22     	; 0x11ec <_ZN7OSTimer5resetEv+0x32>
    11d6:	14 96       	adiw	r26, 0x04	; 4
    11d8:	ed 91       	ld	r30, X+
    11da:	fc 91       	ld	r31, X
    11dc:	15 97       	sbiw	r26, 0x05	; 5
    11de:	80 81       	ld	r24, Z
    11e0:	85 60       	ori	r24, 0x05	; 5
    11e2:	80 83       	st	Z, r24
    11e4:	50 96       	adiw	r26, 0x10	; 16
    11e6:	8c 91       	ld	r24, X
    11e8:	86 bd       	out	0x26, r24	; 38
    11ea:	0b c0       	rjmp	.+22     	; 0x1202 <_ZN7OSTimer5resetEv+0x48>
    11ec:	14 96       	adiw	r26, 0x04	; 4
    11ee:	ed 91       	ld	r30, X+
    11f0:	fc 91       	ld	r31, X
    11f2:	15 97       	sbiw	r26, 0x05	; 5
    11f4:	90 81       	ld	r25, Z
    11f6:	97 60       	ori	r25, 0x07	; 7
    11f8:	90 83       	st	Z, r25
    11fa:	50 96       	adiw	r26, 0x10	; 16
    11fc:	8c 91       	ld	r24, X
    11fe:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    1202:	2f bf       	out	0x3f, r18	; 63
    1204:	08 95       	ret

00001206 <_ZN7Timer168notify_AEv>:
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	ec 01       	movw	r28, r24
    120c:	e8 85       	ldd	r30, Y+8	; 0x08
    120e:	f9 85       	ldd	r31, Y+9	; 0x09
    1210:	30 97       	sbiw	r30, 0x00	; 0
    1212:	09 f0       	breq	.+2      	; 0x1216 <_ZN7Timer168notify_AEv+0x10>
    1214:	19 95       	eicall
    1216:	8a 85       	ldd	r24, Y+10	; 0x0a
    1218:	9b 85       	ldd	r25, Y+11	; 0x0b
    121a:	89 2b       	or	r24, r25
    121c:	39 f4       	brne	.+14     	; 0x122c <_ZN7Timer168notify_AEv+0x26>
    121e:	e8 81       	ld	r30, Y
    1220:	f9 81       	ldd	r31, Y+1	; 0x01
    1222:	01 90       	ld	r0, Z+
    1224:	f0 81       	ld	r31, Z
    1226:	e0 2d       	mov	r30, r0
    1228:	ce 01       	movw	r24, r28
    122a:	19 95       	eicall
    122c:	df 91       	pop	r29
    122e:	cf 91       	pop	r28
    1230:	08 95       	ret

00001232 <_ZN7Timer168notify_BEv>:
    1232:	cf 93       	push	r28
    1234:	df 93       	push	r29
    1236:	ec 01       	movw	r28, r24
    1238:	ea 85       	ldd	r30, Y+10	; 0x0a
    123a:	fb 85       	ldd	r31, Y+11	; 0x0b
    123c:	30 97       	sbiw	r30, 0x00	; 0
    123e:	09 f0       	breq	.+2      	; 0x1242 <_ZN7Timer168notify_BEv+0x10>
    1240:	19 95       	eicall
    1242:	8c 85       	ldd	r24, Y+12	; 0x0c
    1244:	9d 85       	ldd	r25, Y+13	; 0x0d
    1246:	89 2b       	or	r24, r25
    1248:	39 f4       	brne	.+14     	; 0x1258 <_ZN7Timer168notify_BEv+0x26>
    124a:	e8 81       	ld	r30, Y
    124c:	f9 81       	ldd	r31, Y+1	; 0x01
    124e:	01 90       	ld	r0, Z+
    1250:	f0 81       	ld	r31, Z
    1252:	e0 2d       	mov	r30, r0
    1254:	ce 01       	movw	r24, r28
    1256:	19 95       	eicall
    1258:	df 91       	pop	r29
    125a:	cf 91       	pop	r28
    125c:	08 95       	ret

0000125e <_ZN7Timer168notify_CEv>:
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	ec 01       	movw	r28, r24
    1264:	ec 85       	ldd	r30, Y+12	; 0x0c
    1266:	fd 85       	ldd	r31, Y+13	; 0x0d
    1268:	30 97       	sbiw	r30, 0x00	; 0
    126a:	09 f0       	breq	.+2      	; 0x126e <_ZN7Timer168notify_CEv+0x10>
    126c:	19 95       	eicall
    126e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1270:	9f 85       	ldd	r25, Y+15	; 0x0f
    1272:	89 2b       	or	r24, r25
    1274:	39 f4       	brne	.+14     	; 0x1284 <_ZN7Timer168notify_CEv+0x26>
    1276:	e8 81       	ld	r30, Y
    1278:	f9 81       	ldd	r31, Y+1	; 0x01
    127a:	01 90       	ld	r0, Z+
    127c:	f0 81       	ld	r31, Z
    127e:	e0 2d       	mov	r30, r0
    1280:	ce 01       	movw	r24, r28
    1282:	19 95       	eicall
    1284:	df 91       	pop	r29
    1286:	cf 91       	pop	r28
    1288:	08 95       	ret

0000128a <_ZN7Timer168notify_OEv>:
    128a:	cf 93       	push	r28
    128c:	df 93       	push	r29
    128e:	ec 01       	movw	r28, r24
    1290:	ee 85       	ldd	r30, Y+14	; 0x0e
    1292:	ff 85       	ldd	r31, Y+15	; 0x0f
    1294:	30 97       	sbiw	r30, 0x00	; 0
    1296:	09 f0       	breq	.+2      	; 0x129a <_ZN7Timer168notify_OEv+0x10>
    1298:	19 95       	eicall
    129a:	e8 81       	ld	r30, Y
    129c:	f9 81       	ldd	r31, Y+1	; 0x01
    129e:	01 90       	ld	r0, Z+
    12a0:	f0 81       	ld	r31, Z
    12a2:	e0 2d       	mov	r30, r0
    12a4:	ce 01       	movw	r24, r28
    12a6:	19 95       	eicall
    12a8:	df 91       	pop	r29
    12aa:	cf 91       	pop	r28
    12ac:	08 95       	ret

000012ae <__cxa_pure_virtual>:
    12ae:	ff cf       	rjmp	.-2      	; 0x12ae <__cxa_pure_virtual>

000012b0 <__vector_21>:
    12b0:	1f 92       	push	r1
    12b2:	0f 92       	push	r0
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	0f 92       	push	r0
    12b8:	11 24       	eor	r1, r1
    12ba:	0b b6       	in	r0, 0x3b	; 59
    12bc:	0f 92       	push	r0
    12be:	2f 93       	push	r18
    12c0:	3f 93       	push	r19
    12c2:	4f 93       	push	r20
    12c4:	5f 93       	push	r21
    12c6:	6f 93       	push	r22
    12c8:	7f 93       	push	r23
    12ca:	8f 93       	push	r24
    12cc:	9f 93       	push	r25
    12ce:	af 93       	push	r26
    12d0:	bf 93       	push	r27
    12d2:	ef 93       	push	r30
    12d4:	ff 93       	push	r31
    12d6:	80 91 b0 1c 	lds	r24, 0x1CB0	; 0x801cb0 <timer_obj>
    12da:	90 91 b1 1c 	lds	r25, 0x1CB1	; 0x801cb1 <timer_obj+0x1>
    12de:	00 97       	sbiw	r24, 0x00	; 0
    12e0:	39 f0       	breq	.+14     	; 0x12f0 <__vector_21+0x40>
    12e2:	dc 01       	movw	r26, r24
    12e4:	ed 91       	ld	r30, X+
    12e6:	fc 91       	ld	r31, X
    12e8:	02 80       	ldd	r0, Z+2	; 0x02
    12ea:	f3 81       	ldd	r31, Z+3	; 0x03
    12ec:	e0 2d       	mov	r30, r0
    12ee:	19 95       	eicall
    12f0:	ff 91       	pop	r31
    12f2:	ef 91       	pop	r30
    12f4:	bf 91       	pop	r27
    12f6:	af 91       	pop	r26
    12f8:	9f 91       	pop	r25
    12fa:	8f 91       	pop	r24
    12fc:	7f 91       	pop	r23
    12fe:	6f 91       	pop	r22
    1300:	5f 91       	pop	r21
    1302:	4f 91       	pop	r20
    1304:	3f 91       	pop	r19
    1306:	2f 91       	pop	r18
    1308:	0f 90       	pop	r0
    130a:	0b be       	out	0x3b, r0	; 59
    130c:	0f 90       	pop	r0
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	0f 90       	pop	r0
    1312:	1f 90       	pop	r1
    1314:	18 95       	reti

00001316 <__vector_22>:
    1316:	1f 92       	push	r1
    1318:	0f 92       	push	r0
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	0f 92       	push	r0
    131e:	11 24       	eor	r1, r1
    1320:	0b b6       	in	r0, 0x3b	; 59
    1322:	0f 92       	push	r0
    1324:	2f 93       	push	r18
    1326:	3f 93       	push	r19
    1328:	4f 93       	push	r20
    132a:	5f 93       	push	r21
    132c:	6f 93       	push	r22
    132e:	7f 93       	push	r23
    1330:	8f 93       	push	r24
    1332:	9f 93       	push	r25
    1334:	af 93       	push	r26
    1336:	bf 93       	push	r27
    1338:	ef 93       	push	r30
    133a:	ff 93       	push	r31
    133c:	80 91 b0 1c 	lds	r24, 0x1CB0	; 0x801cb0 <timer_obj>
    1340:	90 91 b1 1c 	lds	r25, 0x1CB1	; 0x801cb1 <timer_obj+0x1>
    1344:	00 97       	sbiw	r24, 0x00	; 0
    1346:	39 f0       	breq	.+14     	; 0x1356 <__vector_22+0x40>
    1348:	dc 01       	movw	r26, r24
    134a:	ed 91       	ld	r30, X+
    134c:	fc 91       	ld	r31, X
    134e:	04 80       	ldd	r0, Z+4	; 0x04
    1350:	f5 81       	ldd	r31, Z+5	; 0x05
    1352:	e0 2d       	mov	r30, r0
    1354:	19 95       	eicall
    1356:	ff 91       	pop	r31
    1358:	ef 91       	pop	r30
    135a:	bf 91       	pop	r27
    135c:	af 91       	pop	r26
    135e:	9f 91       	pop	r25
    1360:	8f 91       	pop	r24
    1362:	7f 91       	pop	r23
    1364:	6f 91       	pop	r22
    1366:	5f 91       	pop	r21
    1368:	4f 91       	pop	r20
    136a:	3f 91       	pop	r19
    136c:	2f 91       	pop	r18
    136e:	0f 90       	pop	r0
    1370:	0b be       	out	0x3b, r0	; 59
    1372:	0f 90       	pop	r0
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	0f 90       	pop	r0
    1378:	1f 90       	pop	r1
    137a:	18 95       	reti

0000137c <__vector_13>:
    137c:	1f 92       	push	r1
    137e:	0f 92       	push	r0
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	0f 92       	push	r0
    1384:	11 24       	eor	r1, r1
    1386:	0b b6       	in	r0, 0x3b	; 59
    1388:	0f 92       	push	r0
    138a:	2f 93       	push	r18
    138c:	3f 93       	push	r19
    138e:	4f 93       	push	r20
    1390:	5f 93       	push	r21
    1392:	6f 93       	push	r22
    1394:	7f 93       	push	r23
    1396:	8f 93       	push	r24
    1398:	9f 93       	push	r25
    139a:	af 93       	push	r26
    139c:	bf 93       	push	r27
    139e:	ef 93       	push	r30
    13a0:	ff 93       	push	r31
    13a2:	80 91 b4 1c 	lds	r24, 0x1CB4	; 0x801cb4 <timer_obj+0x4>
    13a6:	90 91 b5 1c 	lds	r25, 0x1CB5	; 0x801cb5 <timer_obj+0x5>
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	39 f0       	breq	.+14     	; 0x13bc <__vector_13+0x40>
    13ae:	dc 01       	movw	r26, r24
    13b0:	ed 91       	ld	r30, X+
    13b2:	fc 91       	ld	r31, X
    13b4:	02 80       	ldd	r0, Z+2	; 0x02
    13b6:	f3 81       	ldd	r31, Z+3	; 0x03
    13b8:	e0 2d       	mov	r30, r0
    13ba:	19 95       	eicall
    13bc:	ff 91       	pop	r31
    13be:	ef 91       	pop	r30
    13c0:	bf 91       	pop	r27
    13c2:	af 91       	pop	r26
    13c4:	9f 91       	pop	r25
    13c6:	8f 91       	pop	r24
    13c8:	7f 91       	pop	r23
    13ca:	6f 91       	pop	r22
    13cc:	5f 91       	pop	r21
    13ce:	4f 91       	pop	r20
    13d0:	3f 91       	pop	r19
    13d2:	2f 91       	pop	r18
    13d4:	0f 90       	pop	r0
    13d6:	0b be       	out	0x3b, r0	; 59
    13d8:	0f 90       	pop	r0
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	0f 90       	pop	r0
    13de:	1f 90       	pop	r1
    13e0:	18 95       	reti

000013e2 <__vector_14>:
    13e2:	1f 92       	push	r1
    13e4:	0f 92       	push	r0
    13e6:	0f b6       	in	r0, 0x3f	; 63
    13e8:	0f 92       	push	r0
    13ea:	11 24       	eor	r1, r1
    13ec:	0b b6       	in	r0, 0x3b	; 59
    13ee:	0f 92       	push	r0
    13f0:	2f 93       	push	r18
    13f2:	3f 93       	push	r19
    13f4:	4f 93       	push	r20
    13f6:	5f 93       	push	r21
    13f8:	6f 93       	push	r22
    13fa:	7f 93       	push	r23
    13fc:	8f 93       	push	r24
    13fe:	9f 93       	push	r25
    1400:	af 93       	push	r26
    1402:	bf 93       	push	r27
    1404:	ef 93       	push	r30
    1406:	ff 93       	push	r31
    1408:	80 91 b4 1c 	lds	r24, 0x1CB4	; 0x801cb4 <timer_obj+0x4>
    140c:	90 91 b5 1c 	lds	r25, 0x1CB5	; 0x801cb5 <timer_obj+0x5>
    1410:	00 97       	sbiw	r24, 0x00	; 0
    1412:	39 f0       	breq	.+14     	; 0x1422 <__vector_14+0x40>
    1414:	dc 01       	movw	r26, r24
    1416:	ed 91       	ld	r30, X+
    1418:	fc 91       	ld	r31, X
    141a:	04 80       	ldd	r0, Z+4	; 0x04
    141c:	f5 81       	ldd	r31, Z+5	; 0x05
    141e:	e0 2d       	mov	r30, r0
    1420:	19 95       	eicall
    1422:	ff 91       	pop	r31
    1424:	ef 91       	pop	r30
    1426:	bf 91       	pop	r27
    1428:	af 91       	pop	r26
    142a:	9f 91       	pop	r25
    142c:	8f 91       	pop	r24
    142e:	7f 91       	pop	r23
    1430:	6f 91       	pop	r22
    1432:	5f 91       	pop	r21
    1434:	4f 91       	pop	r20
    1436:	3f 91       	pop	r19
    1438:	2f 91       	pop	r18
    143a:	0f 90       	pop	r0
    143c:	0b be       	out	0x3b, r0	; 59
    143e:	0f 90       	pop	r0
    1440:	0f be       	out	0x3f, r0	; 63
    1442:	0f 90       	pop	r0
    1444:	1f 90       	pop	r1
    1446:	18 95       	reti

00001448 <__vector_17>:
    1448:	1f 92       	push	r1
    144a:	0f 92       	push	r0
    144c:	0f b6       	in	r0, 0x3f	; 63
    144e:	0f 92       	push	r0
    1450:	11 24       	eor	r1, r1
    1452:	0b b6       	in	r0, 0x3b	; 59
    1454:	0f 92       	push	r0
    1456:	2f 93       	push	r18
    1458:	3f 93       	push	r19
    145a:	4f 93       	push	r20
    145c:	5f 93       	push	r21
    145e:	6f 93       	push	r22
    1460:	7f 93       	push	r23
    1462:	8f 93       	push	r24
    1464:	9f 93       	push	r25
    1466:	af 93       	push	r26
    1468:	bf 93       	push	r27
    146a:	ef 93       	push	r30
    146c:	ff 93       	push	r31
    146e:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    1472:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    1476:	00 97       	sbiw	r24, 0x00	; 0
    1478:	39 f0       	breq	.+14     	; 0x1488 <__vector_17+0x40>
    147a:	dc 01       	movw	r26, r24
    147c:	ed 91       	ld	r30, X+
    147e:	fc 91       	ld	r31, X
    1480:	02 80       	ldd	r0, Z+2	; 0x02
    1482:	f3 81       	ldd	r31, Z+3	; 0x03
    1484:	e0 2d       	mov	r30, r0
    1486:	19 95       	eicall
    1488:	ff 91       	pop	r31
    148a:	ef 91       	pop	r30
    148c:	bf 91       	pop	r27
    148e:	af 91       	pop	r26
    1490:	9f 91       	pop	r25
    1492:	8f 91       	pop	r24
    1494:	7f 91       	pop	r23
    1496:	6f 91       	pop	r22
    1498:	5f 91       	pop	r21
    149a:	4f 91       	pop	r20
    149c:	3f 91       	pop	r19
    149e:	2f 91       	pop	r18
    14a0:	0f 90       	pop	r0
    14a2:	0b be       	out	0x3b, r0	; 59
    14a4:	0f 90       	pop	r0
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	0f 90       	pop	r0
    14aa:	1f 90       	pop	r1
    14ac:	18 95       	reti

000014ae <__vector_18>:
    14ae:	1f 92       	push	r1
    14b0:	0f 92       	push	r0
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	0f 92       	push	r0
    14b6:	11 24       	eor	r1, r1
    14b8:	0b b6       	in	r0, 0x3b	; 59
    14ba:	0f 92       	push	r0
    14bc:	2f 93       	push	r18
    14be:	3f 93       	push	r19
    14c0:	4f 93       	push	r20
    14c2:	5f 93       	push	r21
    14c4:	6f 93       	push	r22
    14c6:	7f 93       	push	r23
    14c8:	8f 93       	push	r24
    14ca:	9f 93       	push	r25
    14cc:	af 93       	push	r26
    14ce:	bf 93       	push	r27
    14d0:	ef 93       	push	r30
    14d2:	ff 93       	push	r31
    14d4:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    14d8:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    14dc:	00 97       	sbiw	r24, 0x00	; 0
    14de:	39 f0       	breq	.+14     	; 0x14ee <__vector_18+0x40>
    14e0:	dc 01       	movw	r26, r24
    14e2:	ed 91       	ld	r30, X+
    14e4:	fc 91       	ld	r31, X
    14e6:	04 80       	ldd	r0, Z+4	; 0x04
    14e8:	f5 81       	ldd	r31, Z+5	; 0x05
    14ea:	e0 2d       	mov	r30, r0
    14ec:	19 95       	eicall
    14ee:	ff 91       	pop	r31
    14f0:	ef 91       	pop	r30
    14f2:	bf 91       	pop	r27
    14f4:	af 91       	pop	r26
    14f6:	9f 91       	pop	r25
    14f8:	8f 91       	pop	r24
    14fa:	7f 91       	pop	r23
    14fc:	6f 91       	pop	r22
    14fe:	5f 91       	pop	r21
    1500:	4f 91       	pop	r20
    1502:	3f 91       	pop	r19
    1504:	2f 91       	pop	r18
    1506:	0f 90       	pop	r0
    1508:	0b be       	out	0x3b, r0	; 59
    150a:	0f 90       	pop	r0
    150c:	0f be       	out	0x3f, r0	; 63
    150e:	0f 90       	pop	r0
    1510:	1f 90       	pop	r1
    1512:	18 95       	reti

00001514 <__vector_19>:
    1514:	1f 92       	push	r1
    1516:	0f 92       	push	r0
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	0f 92       	push	r0
    151c:	11 24       	eor	r1, r1
    151e:	0b b6       	in	r0, 0x3b	; 59
    1520:	0f 92       	push	r0
    1522:	2f 93       	push	r18
    1524:	3f 93       	push	r19
    1526:	4f 93       	push	r20
    1528:	5f 93       	push	r21
    152a:	6f 93       	push	r22
    152c:	7f 93       	push	r23
    152e:	8f 93       	push	r24
    1530:	9f 93       	push	r25
    1532:	af 93       	push	r26
    1534:	bf 93       	push	r27
    1536:	ef 93       	push	r30
    1538:	ff 93       	push	r31
    153a:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    153e:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    1542:	00 97       	sbiw	r24, 0x00	; 0
    1544:	39 f0       	breq	.+14     	; 0x1554 <__vector_19+0x40>
    1546:	dc 01       	movw	r26, r24
    1548:	ed 91       	ld	r30, X+
    154a:	fc 91       	ld	r31, X
    154c:	06 80       	ldd	r0, Z+6	; 0x06
    154e:	f7 81       	ldd	r31, Z+7	; 0x07
    1550:	e0 2d       	mov	r30, r0
    1552:	19 95       	eicall
    1554:	ff 91       	pop	r31
    1556:	ef 91       	pop	r30
    1558:	bf 91       	pop	r27
    155a:	af 91       	pop	r26
    155c:	9f 91       	pop	r25
    155e:	8f 91       	pop	r24
    1560:	7f 91       	pop	r23
    1562:	6f 91       	pop	r22
    1564:	5f 91       	pop	r21
    1566:	4f 91       	pop	r20
    1568:	3f 91       	pop	r19
    156a:	2f 91       	pop	r18
    156c:	0f 90       	pop	r0
    156e:	0b be       	out	0x3b, r0	; 59
    1570:	0f 90       	pop	r0
    1572:	0f be       	out	0x3f, r0	; 63
    1574:	0f 90       	pop	r0
    1576:	1f 90       	pop	r1
    1578:	18 95       	reti

0000157a <__vector_20>:
    157a:	1f 92       	push	r1
    157c:	0f 92       	push	r0
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	0f 92       	push	r0
    1582:	11 24       	eor	r1, r1
    1584:	0b b6       	in	r0, 0x3b	; 59
    1586:	0f 92       	push	r0
    1588:	2f 93       	push	r18
    158a:	3f 93       	push	r19
    158c:	4f 93       	push	r20
    158e:	5f 93       	push	r21
    1590:	6f 93       	push	r22
    1592:	7f 93       	push	r23
    1594:	8f 93       	push	r24
    1596:	9f 93       	push	r25
    1598:	af 93       	push	r26
    159a:	bf 93       	push	r27
    159c:	ef 93       	push	r30
    159e:	ff 93       	push	r31
    15a0:	80 91 b2 1c 	lds	r24, 0x1CB2	; 0x801cb2 <timer_obj+0x2>
    15a4:	90 91 b3 1c 	lds	r25, 0x1CB3	; 0x801cb3 <timer_obj+0x3>
    15a8:	00 97       	sbiw	r24, 0x00	; 0
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__vector_20+0x40>
    15ac:	dc 01       	movw	r26, r24
    15ae:	ed 91       	ld	r30, X+
    15b0:	fc 91       	ld	r31, X
    15b2:	00 84       	ldd	r0, Z+8	; 0x08
    15b4:	f1 85       	ldd	r31, Z+9	; 0x09
    15b6:	e0 2d       	mov	r30, r0
    15b8:	19 95       	eicall
    15ba:	ff 91       	pop	r31
    15bc:	ef 91       	pop	r30
    15be:	bf 91       	pop	r27
    15c0:	af 91       	pop	r26
    15c2:	9f 91       	pop	r25
    15c4:	8f 91       	pop	r24
    15c6:	7f 91       	pop	r23
    15c8:	6f 91       	pop	r22
    15ca:	5f 91       	pop	r21
    15cc:	4f 91       	pop	r20
    15ce:	3f 91       	pop	r19
    15d0:	2f 91       	pop	r18
    15d2:	0f 90       	pop	r0
    15d4:	0b be       	out	0x3b, r0	; 59
    15d6:	0f 90       	pop	r0
    15d8:	0f be       	out	0x3f, r0	; 63
    15da:	0f 90       	pop	r0
    15dc:	1f 90       	pop	r1
    15de:	18 95       	reti

000015e0 <__vector_32>:
    15e0:	1f 92       	push	r1
    15e2:	0f 92       	push	r0
    15e4:	0f b6       	in	r0, 0x3f	; 63
    15e6:	0f 92       	push	r0
    15e8:	11 24       	eor	r1, r1
    15ea:	0b b6       	in	r0, 0x3b	; 59
    15ec:	0f 92       	push	r0
    15ee:	2f 93       	push	r18
    15f0:	3f 93       	push	r19
    15f2:	4f 93       	push	r20
    15f4:	5f 93       	push	r21
    15f6:	6f 93       	push	r22
    15f8:	7f 93       	push	r23
    15fa:	8f 93       	push	r24
    15fc:	9f 93       	push	r25
    15fe:	af 93       	push	r26
    1600:	bf 93       	push	r27
    1602:	ef 93       	push	r30
    1604:	ff 93       	push	r31
    1606:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    160a:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	39 f0       	breq	.+14     	; 0x1620 <__vector_32+0x40>
    1612:	dc 01       	movw	r26, r24
    1614:	ed 91       	ld	r30, X+
    1616:	fc 91       	ld	r31, X
    1618:	02 80       	ldd	r0, Z+2	; 0x02
    161a:	f3 81       	ldd	r31, Z+3	; 0x03
    161c:	e0 2d       	mov	r30, r0
    161e:	19 95       	eicall
    1620:	ff 91       	pop	r31
    1622:	ef 91       	pop	r30
    1624:	bf 91       	pop	r27
    1626:	af 91       	pop	r26
    1628:	9f 91       	pop	r25
    162a:	8f 91       	pop	r24
    162c:	7f 91       	pop	r23
    162e:	6f 91       	pop	r22
    1630:	5f 91       	pop	r21
    1632:	4f 91       	pop	r20
    1634:	3f 91       	pop	r19
    1636:	2f 91       	pop	r18
    1638:	0f 90       	pop	r0
    163a:	0b be       	out	0x3b, r0	; 59
    163c:	0f 90       	pop	r0
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	0f 90       	pop	r0
    1642:	1f 90       	pop	r1
    1644:	18 95       	reti

00001646 <__vector_33>:
    1646:	1f 92       	push	r1
    1648:	0f 92       	push	r0
    164a:	0f b6       	in	r0, 0x3f	; 63
    164c:	0f 92       	push	r0
    164e:	11 24       	eor	r1, r1
    1650:	0b b6       	in	r0, 0x3b	; 59
    1652:	0f 92       	push	r0
    1654:	2f 93       	push	r18
    1656:	3f 93       	push	r19
    1658:	4f 93       	push	r20
    165a:	5f 93       	push	r21
    165c:	6f 93       	push	r22
    165e:	7f 93       	push	r23
    1660:	8f 93       	push	r24
    1662:	9f 93       	push	r25
    1664:	af 93       	push	r26
    1666:	bf 93       	push	r27
    1668:	ef 93       	push	r30
    166a:	ff 93       	push	r31
    166c:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    1670:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    1674:	00 97       	sbiw	r24, 0x00	; 0
    1676:	39 f0       	breq	.+14     	; 0x1686 <__vector_33+0x40>
    1678:	dc 01       	movw	r26, r24
    167a:	ed 91       	ld	r30, X+
    167c:	fc 91       	ld	r31, X
    167e:	04 80       	ldd	r0, Z+4	; 0x04
    1680:	f5 81       	ldd	r31, Z+5	; 0x05
    1682:	e0 2d       	mov	r30, r0
    1684:	19 95       	eicall
    1686:	ff 91       	pop	r31
    1688:	ef 91       	pop	r30
    168a:	bf 91       	pop	r27
    168c:	af 91       	pop	r26
    168e:	9f 91       	pop	r25
    1690:	8f 91       	pop	r24
    1692:	7f 91       	pop	r23
    1694:	6f 91       	pop	r22
    1696:	5f 91       	pop	r21
    1698:	4f 91       	pop	r20
    169a:	3f 91       	pop	r19
    169c:	2f 91       	pop	r18
    169e:	0f 90       	pop	r0
    16a0:	0b be       	out	0x3b, r0	; 59
    16a2:	0f 90       	pop	r0
    16a4:	0f be       	out	0x3f, r0	; 63
    16a6:	0f 90       	pop	r0
    16a8:	1f 90       	pop	r1
    16aa:	18 95       	reti

000016ac <__vector_34>:
    16ac:	1f 92       	push	r1
    16ae:	0f 92       	push	r0
    16b0:	0f b6       	in	r0, 0x3f	; 63
    16b2:	0f 92       	push	r0
    16b4:	11 24       	eor	r1, r1
    16b6:	0b b6       	in	r0, 0x3b	; 59
    16b8:	0f 92       	push	r0
    16ba:	2f 93       	push	r18
    16bc:	3f 93       	push	r19
    16be:	4f 93       	push	r20
    16c0:	5f 93       	push	r21
    16c2:	6f 93       	push	r22
    16c4:	7f 93       	push	r23
    16c6:	8f 93       	push	r24
    16c8:	9f 93       	push	r25
    16ca:	af 93       	push	r26
    16cc:	bf 93       	push	r27
    16ce:	ef 93       	push	r30
    16d0:	ff 93       	push	r31
    16d2:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    16d6:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	39 f0       	breq	.+14     	; 0x16ec <__vector_34+0x40>
    16de:	dc 01       	movw	r26, r24
    16e0:	ed 91       	ld	r30, X+
    16e2:	fc 91       	ld	r31, X
    16e4:	06 80       	ldd	r0, Z+6	; 0x06
    16e6:	f7 81       	ldd	r31, Z+7	; 0x07
    16e8:	e0 2d       	mov	r30, r0
    16ea:	19 95       	eicall
    16ec:	ff 91       	pop	r31
    16ee:	ef 91       	pop	r30
    16f0:	bf 91       	pop	r27
    16f2:	af 91       	pop	r26
    16f4:	9f 91       	pop	r25
    16f6:	8f 91       	pop	r24
    16f8:	7f 91       	pop	r23
    16fa:	6f 91       	pop	r22
    16fc:	5f 91       	pop	r21
    16fe:	4f 91       	pop	r20
    1700:	3f 91       	pop	r19
    1702:	2f 91       	pop	r18
    1704:	0f 90       	pop	r0
    1706:	0b be       	out	0x3b, r0	; 59
    1708:	0f 90       	pop	r0
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	0f 90       	pop	r0
    170e:	1f 90       	pop	r1
    1710:	18 95       	reti

00001712 <__vector_35>:
    1712:	1f 92       	push	r1
    1714:	0f 92       	push	r0
    1716:	0f b6       	in	r0, 0x3f	; 63
    1718:	0f 92       	push	r0
    171a:	11 24       	eor	r1, r1
    171c:	0b b6       	in	r0, 0x3b	; 59
    171e:	0f 92       	push	r0
    1720:	2f 93       	push	r18
    1722:	3f 93       	push	r19
    1724:	4f 93       	push	r20
    1726:	5f 93       	push	r21
    1728:	6f 93       	push	r22
    172a:	7f 93       	push	r23
    172c:	8f 93       	push	r24
    172e:	9f 93       	push	r25
    1730:	af 93       	push	r26
    1732:	bf 93       	push	r27
    1734:	ef 93       	push	r30
    1736:	ff 93       	push	r31
    1738:	80 91 b6 1c 	lds	r24, 0x1CB6	; 0x801cb6 <timer_obj+0x6>
    173c:	90 91 b7 1c 	lds	r25, 0x1CB7	; 0x801cb7 <timer_obj+0x7>
    1740:	00 97       	sbiw	r24, 0x00	; 0
    1742:	39 f0       	breq	.+14     	; 0x1752 <__vector_35+0x40>
    1744:	dc 01       	movw	r26, r24
    1746:	ed 91       	ld	r30, X+
    1748:	fc 91       	ld	r31, X
    174a:	00 84       	ldd	r0, Z+8	; 0x08
    174c:	f1 85       	ldd	r31, Z+9	; 0x09
    174e:	e0 2d       	mov	r30, r0
    1750:	19 95       	eicall
    1752:	ff 91       	pop	r31
    1754:	ef 91       	pop	r30
    1756:	bf 91       	pop	r27
    1758:	af 91       	pop	r26
    175a:	9f 91       	pop	r25
    175c:	8f 91       	pop	r24
    175e:	7f 91       	pop	r23
    1760:	6f 91       	pop	r22
    1762:	5f 91       	pop	r21
    1764:	4f 91       	pop	r20
    1766:	3f 91       	pop	r19
    1768:	2f 91       	pop	r18
    176a:	0f 90       	pop	r0
    176c:	0b be       	out	0x3b, r0	; 59
    176e:	0f 90       	pop	r0
    1770:	0f be       	out	0x3f, r0	; 63
    1772:	0f 90       	pop	r0
    1774:	1f 90       	pop	r1
    1776:	18 95       	reti

00001778 <__vector_42>:
    1778:	1f 92       	push	r1
    177a:	0f 92       	push	r0
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	0f 92       	push	r0
    1780:	11 24       	eor	r1, r1
    1782:	0b b6       	in	r0, 0x3b	; 59
    1784:	0f 92       	push	r0
    1786:	2f 93       	push	r18
    1788:	3f 93       	push	r19
    178a:	4f 93       	push	r20
    178c:	5f 93       	push	r21
    178e:	6f 93       	push	r22
    1790:	7f 93       	push	r23
    1792:	8f 93       	push	r24
    1794:	9f 93       	push	r25
    1796:	af 93       	push	r26
    1798:	bf 93       	push	r27
    179a:	ef 93       	push	r30
    179c:	ff 93       	push	r31
    179e:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    17a2:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    17a6:	00 97       	sbiw	r24, 0x00	; 0
    17a8:	39 f0       	breq	.+14     	; 0x17b8 <__vector_42+0x40>
    17aa:	dc 01       	movw	r26, r24
    17ac:	ed 91       	ld	r30, X+
    17ae:	fc 91       	ld	r31, X
    17b0:	02 80       	ldd	r0, Z+2	; 0x02
    17b2:	f3 81       	ldd	r31, Z+3	; 0x03
    17b4:	e0 2d       	mov	r30, r0
    17b6:	19 95       	eicall
    17b8:	ff 91       	pop	r31
    17ba:	ef 91       	pop	r30
    17bc:	bf 91       	pop	r27
    17be:	af 91       	pop	r26
    17c0:	9f 91       	pop	r25
    17c2:	8f 91       	pop	r24
    17c4:	7f 91       	pop	r23
    17c6:	6f 91       	pop	r22
    17c8:	5f 91       	pop	r21
    17ca:	4f 91       	pop	r20
    17cc:	3f 91       	pop	r19
    17ce:	2f 91       	pop	r18
    17d0:	0f 90       	pop	r0
    17d2:	0b be       	out	0x3b, r0	; 59
    17d4:	0f 90       	pop	r0
    17d6:	0f be       	out	0x3f, r0	; 63
    17d8:	0f 90       	pop	r0
    17da:	1f 90       	pop	r1
    17dc:	18 95       	reti

000017de <__vector_43>:
    17de:	1f 92       	push	r1
    17e0:	0f 92       	push	r0
    17e2:	0f b6       	in	r0, 0x3f	; 63
    17e4:	0f 92       	push	r0
    17e6:	11 24       	eor	r1, r1
    17e8:	0b b6       	in	r0, 0x3b	; 59
    17ea:	0f 92       	push	r0
    17ec:	2f 93       	push	r18
    17ee:	3f 93       	push	r19
    17f0:	4f 93       	push	r20
    17f2:	5f 93       	push	r21
    17f4:	6f 93       	push	r22
    17f6:	7f 93       	push	r23
    17f8:	8f 93       	push	r24
    17fa:	9f 93       	push	r25
    17fc:	af 93       	push	r26
    17fe:	bf 93       	push	r27
    1800:	ef 93       	push	r30
    1802:	ff 93       	push	r31
    1804:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    1808:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    180c:	00 97       	sbiw	r24, 0x00	; 0
    180e:	39 f0       	breq	.+14     	; 0x181e <__vector_43+0x40>
    1810:	dc 01       	movw	r26, r24
    1812:	ed 91       	ld	r30, X+
    1814:	fc 91       	ld	r31, X
    1816:	04 80       	ldd	r0, Z+4	; 0x04
    1818:	f5 81       	ldd	r31, Z+5	; 0x05
    181a:	e0 2d       	mov	r30, r0
    181c:	19 95       	eicall
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	bf 91       	pop	r27
    1824:	af 91       	pop	r26
    1826:	9f 91       	pop	r25
    1828:	8f 91       	pop	r24
    182a:	7f 91       	pop	r23
    182c:	6f 91       	pop	r22
    182e:	5f 91       	pop	r21
    1830:	4f 91       	pop	r20
    1832:	3f 91       	pop	r19
    1834:	2f 91       	pop	r18
    1836:	0f 90       	pop	r0
    1838:	0b be       	out	0x3b, r0	; 59
    183a:	0f 90       	pop	r0
    183c:	0f be       	out	0x3f, r0	; 63
    183e:	0f 90       	pop	r0
    1840:	1f 90       	pop	r1
    1842:	18 95       	reti

00001844 <__vector_44>:
    1844:	1f 92       	push	r1
    1846:	0f 92       	push	r0
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	0f 92       	push	r0
    184c:	11 24       	eor	r1, r1
    184e:	0b b6       	in	r0, 0x3b	; 59
    1850:	0f 92       	push	r0
    1852:	2f 93       	push	r18
    1854:	3f 93       	push	r19
    1856:	4f 93       	push	r20
    1858:	5f 93       	push	r21
    185a:	6f 93       	push	r22
    185c:	7f 93       	push	r23
    185e:	8f 93       	push	r24
    1860:	9f 93       	push	r25
    1862:	af 93       	push	r26
    1864:	bf 93       	push	r27
    1866:	ef 93       	push	r30
    1868:	ff 93       	push	r31
    186a:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    186e:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    1872:	00 97       	sbiw	r24, 0x00	; 0
    1874:	39 f0       	breq	.+14     	; 0x1884 <__vector_44+0x40>
    1876:	dc 01       	movw	r26, r24
    1878:	ed 91       	ld	r30, X+
    187a:	fc 91       	ld	r31, X
    187c:	06 80       	ldd	r0, Z+6	; 0x06
    187e:	f7 81       	ldd	r31, Z+7	; 0x07
    1880:	e0 2d       	mov	r30, r0
    1882:	19 95       	eicall
    1884:	ff 91       	pop	r31
    1886:	ef 91       	pop	r30
    1888:	bf 91       	pop	r27
    188a:	af 91       	pop	r26
    188c:	9f 91       	pop	r25
    188e:	8f 91       	pop	r24
    1890:	7f 91       	pop	r23
    1892:	6f 91       	pop	r22
    1894:	5f 91       	pop	r21
    1896:	4f 91       	pop	r20
    1898:	3f 91       	pop	r19
    189a:	2f 91       	pop	r18
    189c:	0f 90       	pop	r0
    189e:	0b be       	out	0x3b, r0	; 59
    18a0:	0f 90       	pop	r0
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	0f 90       	pop	r0
    18a6:	1f 90       	pop	r1
    18a8:	18 95       	reti

000018aa <__vector_45>:
    18aa:	1f 92       	push	r1
    18ac:	0f 92       	push	r0
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	0f 92       	push	r0
    18b2:	11 24       	eor	r1, r1
    18b4:	0b b6       	in	r0, 0x3b	; 59
    18b6:	0f 92       	push	r0
    18b8:	2f 93       	push	r18
    18ba:	3f 93       	push	r19
    18bc:	4f 93       	push	r20
    18be:	5f 93       	push	r21
    18c0:	6f 93       	push	r22
    18c2:	7f 93       	push	r23
    18c4:	8f 93       	push	r24
    18c6:	9f 93       	push	r25
    18c8:	af 93       	push	r26
    18ca:	bf 93       	push	r27
    18cc:	ef 93       	push	r30
    18ce:	ff 93       	push	r31
    18d0:	80 91 b8 1c 	lds	r24, 0x1CB8	; 0x801cb8 <timer_obj+0x8>
    18d4:	90 91 b9 1c 	lds	r25, 0x1CB9	; 0x801cb9 <timer_obj+0x9>
    18d8:	00 97       	sbiw	r24, 0x00	; 0
    18da:	39 f0       	breq	.+14     	; 0x18ea <__vector_45+0x40>
    18dc:	dc 01       	movw	r26, r24
    18de:	ed 91       	ld	r30, X+
    18e0:	fc 91       	ld	r31, X
    18e2:	00 84       	ldd	r0, Z+8	; 0x08
    18e4:	f1 85       	ldd	r31, Z+9	; 0x09
    18e6:	e0 2d       	mov	r30, r0
    18e8:	19 95       	eicall
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0b be       	out	0x3b, r0	; 59
    1906:	0f 90       	pop	r0
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	0f 90       	pop	r0
    190c:	1f 90       	pop	r1
    190e:	18 95       	reti

00001910 <__vector_47>:
    1910:	1f 92       	push	r1
    1912:	0f 92       	push	r0
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	0f 92       	push	r0
    1918:	11 24       	eor	r1, r1
    191a:	0b b6       	in	r0, 0x3b	; 59
    191c:	0f 92       	push	r0
    191e:	2f 93       	push	r18
    1920:	3f 93       	push	r19
    1922:	4f 93       	push	r20
    1924:	5f 93       	push	r21
    1926:	6f 93       	push	r22
    1928:	7f 93       	push	r23
    192a:	8f 93       	push	r24
    192c:	9f 93       	push	r25
    192e:	af 93       	push	r26
    1930:	bf 93       	push	r27
    1932:	ef 93       	push	r30
    1934:	ff 93       	push	r31
    1936:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    193a:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    193e:	00 97       	sbiw	r24, 0x00	; 0
    1940:	39 f0       	breq	.+14     	; 0x1950 <__vector_47+0x40>
    1942:	dc 01       	movw	r26, r24
    1944:	ed 91       	ld	r30, X+
    1946:	fc 91       	ld	r31, X
    1948:	02 80       	ldd	r0, Z+2	; 0x02
    194a:	f3 81       	ldd	r31, Z+3	; 0x03
    194c:	e0 2d       	mov	r30, r0
    194e:	19 95       	eicall
    1950:	ff 91       	pop	r31
    1952:	ef 91       	pop	r30
    1954:	bf 91       	pop	r27
    1956:	af 91       	pop	r26
    1958:	9f 91       	pop	r25
    195a:	8f 91       	pop	r24
    195c:	7f 91       	pop	r23
    195e:	6f 91       	pop	r22
    1960:	5f 91       	pop	r21
    1962:	4f 91       	pop	r20
    1964:	3f 91       	pop	r19
    1966:	2f 91       	pop	r18
    1968:	0f 90       	pop	r0
    196a:	0b be       	out	0x3b, r0	; 59
    196c:	0f 90       	pop	r0
    196e:	0f be       	out	0x3f, r0	; 63
    1970:	0f 90       	pop	r0
    1972:	1f 90       	pop	r1
    1974:	18 95       	reti

00001976 <__vector_48>:
    1976:	1f 92       	push	r1
    1978:	0f 92       	push	r0
    197a:	0f b6       	in	r0, 0x3f	; 63
    197c:	0f 92       	push	r0
    197e:	11 24       	eor	r1, r1
    1980:	0b b6       	in	r0, 0x3b	; 59
    1982:	0f 92       	push	r0
    1984:	2f 93       	push	r18
    1986:	3f 93       	push	r19
    1988:	4f 93       	push	r20
    198a:	5f 93       	push	r21
    198c:	6f 93       	push	r22
    198e:	7f 93       	push	r23
    1990:	8f 93       	push	r24
    1992:	9f 93       	push	r25
    1994:	af 93       	push	r26
    1996:	bf 93       	push	r27
    1998:	ef 93       	push	r30
    199a:	ff 93       	push	r31
    199c:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    19a0:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    19a4:	00 97       	sbiw	r24, 0x00	; 0
    19a6:	39 f0       	breq	.+14     	; 0x19b6 <__vector_48+0x40>
    19a8:	dc 01       	movw	r26, r24
    19aa:	ed 91       	ld	r30, X+
    19ac:	fc 91       	ld	r31, X
    19ae:	04 80       	ldd	r0, Z+4	; 0x04
    19b0:	f5 81       	ldd	r31, Z+5	; 0x05
    19b2:	e0 2d       	mov	r30, r0
    19b4:	19 95       	eicall
    19b6:	ff 91       	pop	r31
    19b8:	ef 91       	pop	r30
    19ba:	bf 91       	pop	r27
    19bc:	af 91       	pop	r26
    19be:	9f 91       	pop	r25
    19c0:	8f 91       	pop	r24
    19c2:	7f 91       	pop	r23
    19c4:	6f 91       	pop	r22
    19c6:	5f 91       	pop	r21
    19c8:	4f 91       	pop	r20
    19ca:	3f 91       	pop	r19
    19cc:	2f 91       	pop	r18
    19ce:	0f 90       	pop	r0
    19d0:	0b be       	out	0x3b, r0	; 59
    19d2:	0f 90       	pop	r0
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	0f 90       	pop	r0
    19d8:	1f 90       	pop	r1
    19da:	18 95       	reti

000019dc <__vector_49>:
    19dc:	1f 92       	push	r1
    19de:	0f 92       	push	r0
    19e0:	0f b6       	in	r0, 0x3f	; 63
    19e2:	0f 92       	push	r0
    19e4:	11 24       	eor	r1, r1
    19e6:	0b b6       	in	r0, 0x3b	; 59
    19e8:	0f 92       	push	r0
    19ea:	2f 93       	push	r18
    19ec:	3f 93       	push	r19
    19ee:	4f 93       	push	r20
    19f0:	5f 93       	push	r21
    19f2:	6f 93       	push	r22
    19f4:	7f 93       	push	r23
    19f6:	8f 93       	push	r24
    19f8:	9f 93       	push	r25
    19fa:	af 93       	push	r26
    19fc:	bf 93       	push	r27
    19fe:	ef 93       	push	r30
    1a00:	ff 93       	push	r31
    1a02:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1a06:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1a0a:	00 97       	sbiw	r24, 0x00	; 0
    1a0c:	39 f0       	breq	.+14     	; 0x1a1c <__vector_49+0x40>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	ed 91       	ld	r30, X+
    1a12:	fc 91       	ld	r31, X
    1a14:	06 80       	ldd	r0, Z+6	; 0x06
    1a16:	f7 81       	ldd	r31, Z+7	; 0x07
    1a18:	e0 2d       	mov	r30, r0
    1a1a:	19 95       	eicall
    1a1c:	ff 91       	pop	r31
    1a1e:	ef 91       	pop	r30
    1a20:	bf 91       	pop	r27
    1a22:	af 91       	pop	r26
    1a24:	9f 91       	pop	r25
    1a26:	8f 91       	pop	r24
    1a28:	7f 91       	pop	r23
    1a2a:	6f 91       	pop	r22
    1a2c:	5f 91       	pop	r21
    1a2e:	4f 91       	pop	r20
    1a30:	3f 91       	pop	r19
    1a32:	2f 91       	pop	r18
    1a34:	0f 90       	pop	r0
    1a36:	0b be       	out	0x3b, r0	; 59
    1a38:	0f 90       	pop	r0
    1a3a:	0f be       	out	0x3f, r0	; 63
    1a3c:	0f 90       	pop	r0
    1a3e:	1f 90       	pop	r1
    1a40:	18 95       	reti

00001a42 <__vector_50>:
    1a42:	1f 92       	push	r1
    1a44:	0f 92       	push	r0
    1a46:	0f b6       	in	r0, 0x3f	; 63
    1a48:	0f 92       	push	r0
    1a4a:	11 24       	eor	r1, r1
    1a4c:	0b b6       	in	r0, 0x3b	; 59
    1a4e:	0f 92       	push	r0
    1a50:	2f 93       	push	r18
    1a52:	3f 93       	push	r19
    1a54:	4f 93       	push	r20
    1a56:	5f 93       	push	r21
    1a58:	6f 93       	push	r22
    1a5a:	7f 93       	push	r23
    1a5c:	8f 93       	push	r24
    1a5e:	9f 93       	push	r25
    1a60:	af 93       	push	r26
    1a62:	bf 93       	push	r27
    1a64:	ef 93       	push	r30
    1a66:	ff 93       	push	r31
    1a68:	80 91 ba 1c 	lds	r24, 0x1CBA	; 0x801cba <timer_obj+0xa>
    1a6c:	90 91 bb 1c 	lds	r25, 0x1CBB	; 0x801cbb <timer_obj+0xb>
    1a70:	00 97       	sbiw	r24, 0x00	; 0
    1a72:	39 f0       	breq	.+14     	; 0x1a82 <__vector_50+0x40>
    1a74:	dc 01       	movw	r26, r24
    1a76:	ed 91       	ld	r30, X+
    1a78:	fc 91       	ld	r31, X
    1a7a:	00 84       	ldd	r0, Z+8	; 0x08
    1a7c:	f1 85       	ldd	r31, Z+9	; 0x09
    1a7e:	e0 2d       	mov	r30, r0
    1a80:	19 95       	eicall
    1a82:	ff 91       	pop	r31
    1a84:	ef 91       	pop	r30
    1a86:	bf 91       	pop	r27
    1a88:	af 91       	pop	r26
    1a8a:	9f 91       	pop	r25
    1a8c:	8f 91       	pop	r24
    1a8e:	7f 91       	pop	r23
    1a90:	6f 91       	pop	r22
    1a92:	5f 91       	pop	r21
    1a94:	4f 91       	pop	r20
    1a96:	3f 91       	pop	r19
    1a98:	2f 91       	pop	r18
    1a9a:	0f 90       	pop	r0
    1a9c:	0b be       	out	0x3b, r0	; 59
    1a9e:	0f 90       	pop	r0
    1aa0:	0f be       	out	0x3f, r0	; 63
    1aa2:	0f 90       	pop	r0
    1aa4:	1f 90       	pop	r1
    1aa6:	18 95       	reti

00001aa8 <_ZN7Timer16C1EhPFvvES1_S1_S1_>:
    1aa8:	9f 92       	push	r9
    1aaa:	af 92       	push	r10
    1aac:	bf 92       	push	r11
    1aae:	cf 92       	push	r12
    1ab0:	df 92       	push	r13
    1ab2:	ef 92       	push	r14
    1ab4:	ff 92       	push	r15
    1ab6:	0f 93       	push	r16
    1ab8:	1f 93       	push	r17
    1aba:	cf 93       	push	r28
    1abc:	df 93       	push	r29
    1abe:	ec 01       	movw	r28, r24
    1ac0:	96 2e       	mov	r9, r22
    1ac2:	5a 01       	movw	r10, r20
    1ac4:	69 01       	movw	r12, r18
    1ac6:	8d e9       	ldi	r24, 0x9D	; 157
    1ac8:	92 e0       	ldi	r25, 0x02	; 2
    1aca:	99 83       	std	Y+1, r25	; 0x01
    1acc:	88 83       	st	Y, r24
    1ace:	86 2f       	mov	r24, r22
    1ad0:	9d d2       	rcall	.+1338   	; 0x200c <_Z20tc_handle_to_addressh>
    1ad2:	9b 83       	std	Y+3, r25	; 0x03
    1ad4:	8a 83       	std	Y+2, r24	; 0x02
    1ad6:	e9 2d       	mov	r30, r9
    1ad8:	f0 e0       	ldi	r31, 0x00	; 0
    1ada:	ee 0f       	add	r30, r30
    1adc:	ff 1f       	adc	r31, r31
    1ade:	ef 52       	subi	r30, 0x2F	; 47
    1ae0:	fd 4f       	sbci	r31, 0xFD	; 253
    1ae2:	80 81       	ld	r24, Z
    1ae4:	91 81       	ldd	r25, Z+1	; 0x01
    1ae6:	01 96       	adiw	r24, 0x01	; 1
    1ae8:	9d 83       	std	Y+5, r25	; 0x05
    1aea:	8c 83       	std	Y+4, r24	; 0x04
    1aec:	87 ec       	ldi	r24, 0xC7	; 199
    1aee:	92 e0       	ldi	r25, 0x02	; 2
    1af0:	99 83       	std	Y+1, r25	; 0x01
    1af2:	88 83       	st	Y, r24
    1af4:	81 e0       	ldi	r24, 0x01	; 1
    1af6:	98 12       	cpse	r9, r24
    1af8:	26 c0       	rjmp	.+76     	; 0x1b46 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x9e>
    1afa:	d0 93 b3 1c 	sts	0x1CB3, r29	; 0x801cb3 <timer_obj+0x3>
    1afe:	c0 93 b2 1c 	sts	0x1CB2, r28	; 0x801cb2 <timer_obj+0x2>
    1b02:	a1 14       	cp	r10, r1
    1b04:	b1 04       	cpc	r11, r1
    1b06:	29 f0       	breq	.+10     	; 0x1b12 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x6a>
    1b08:	ef e6       	ldi	r30, 0x6F	; 111
    1b0a:	f0 e0       	ldi	r31, 0x00	; 0
    1b0c:	80 81       	ld	r24, Z
    1b0e:	82 60       	ori	r24, 0x02	; 2
    1b10:	80 83       	st	Z, r24
    1b12:	c1 14       	cp	r12, r1
    1b14:	d1 04       	cpc	r13, r1
    1b16:	29 f0       	breq	.+10     	; 0x1b22 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x7a>
    1b18:	ef e6       	ldi	r30, 0x6F	; 111
    1b1a:	f0 e0       	ldi	r31, 0x00	; 0
    1b1c:	80 81       	ld	r24, Z
    1b1e:	84 60       	ori	r24, 0x04	; 4
    1b20:	80 83       	st	Z, r24
    1b22:	01 15       	cp	r16, r1
    1b24:	11 05       	cpc	r17, r1
    1b26:	29 f0       	breq	.+10     	; 0x1b32 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x8a>
    1b28:	ef e6       	ldi	r30, 0x6F	; 111
    1b2a:	f0 e0       	ldi	r31, 0x00	; 0
    1b2c:	80 81       	ld	r24, Z
    1b2e:	88 60       	ori	r24, 0x08	; 8
    1b30:	80 83       	st	Z, r24
    1b32:	e1 14       	cp	r14, r1
    1b34:	f1 04       	cpc	r15, r1
    1b36:	09 f4       	brne	.+2      	; 0x1b3a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x92>
    1b38:	7e c0       	rjmp	.+252    	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b3a:	ef e6       	ldi	r30, 0x6F	; 111
    1b3c:	f0 e0       	ldi	r31, 0x00	; 0
    1b3e:	80 81       	ld	r24, Z
    1b40:	81 60       	ori	r24, 0x01	; 1
    1b42:	80 83       	st	Z, r24
    1b44:	78 c0       	rjmp	.+240    	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b46:	83 e0       	ldi	r24, 0x03	; 3
    1b48:	98 12       	cpse	r9, r24
    1b4a:	26 c0       	rjmp	.+76     	; 0x1b98 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xf0>
    1b4c:	d0 93 b7 1c 	sts	0x1CB7, r29	; 0x801cb7 <timer_obj+0x7>
    1b50:	c0 93 b6 1c 	sts	0x1CB6, r28	; 0x801cb6 <timer_obj+0x6>
    1b54:	a1 14       	cp	r10, r1
    1b56:	b1 04       	cpc	r11, r1
    1b58:	29 f0       	breq	.+10     	; 0x1b64 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xbc>
    1b5a:	e1 e7       	ldi	r30, 0x71	; 113
    1b5c:	f0 e0       	ldi	r31, 0x00	; 0
    1b5e:	80 81       	ld	r24, Z
    1b60:	82 60       	ori	r24, 0x02	; 2
    1b62:	80 83       	st	Z, r24
    1b64:	c1 14       	cp	r12, r1
    1b66:	d1 04       	cpc	r13, r1
    1b68:	29 f0       	breq	.+10     	; 0x1b74 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xcc>
    1b6a:	e1 e7       	ldi	r30, 0x71	; 113
    1b6c:	f0 e0       	ldi	r31, 0x00	; 0
    1b6e:	80 81       	ld	r24, Z
    1b70:	84 60       	ori	r24, 0x04	; 4
    1b72:	80 83       	st	Z, r24
    1b74:	01 15       	cp	r16, r1
    1b76:	11 05       	cpc	r17, r1
    1b78:	29 f0       	breq	.+10     	; 0x1b84 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xdc>
    1b7a:	e1 e7       	ldi	r30, 0x71	; 113
    1b7c:	f0 e0       	ldi	r31, 0x00	; 0
    1b7e:	80 81       	ld	r24, Z
    1b80:	88 60       	ori	r24, 0x08	; 8
    1b82:	80 83       	st	Z, r24
    1b84:	e1 14       	cp	r14, r1
    1b86:	f1 04       	cpc	r15, r1
    1b88:	09 f4       	brne	.+2      	; 0x1b8c <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xe4>
    1b8a:	55 c0       	rjmp	.+170    	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b8c:	e1 e7       	ldi	r30, 0x71	; 113
    1b8e:	f0 e0       	ldi	r31, 0x00	; 0
    1b90:	80 81       	ld	r24, Z
    1b92:	81 60       	ori	r24, 0x01	; 1
    1b94:	80 83       	st	Z, r24
    1b96:	4f c0       	rjmp	.+158    	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b98:	84 e0       	ldi	r24, 0x04	; 4
    1b9a:	98 12       	cpse	r9, r24
    1b9c:	25 c0       	rjmp	.+74     	; 0x1be8 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x140>
    1b9e:	d0 93 b9 1c 	sts	0x1CB9, r29	; 0x801cb9 <timer_obj+0x9>
    1ba2:	c0 93 b8 1c 	sts	0x1CB8, r28	; 0x801cb8 <timer_obj+0x8>
    1ba6:	a1 14       	cp	r10, r1
    1ba8:	b1 04       	cpc	r11, r1
    1baa:	29 f0       	breq	.+10     	; 0x1bb6 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x10e>
    1bac:	e2 e7       	ldi	r30, 0x72	; 114
    1bae:	f0 e0       	ldi	r31, 0x00	; 0
    1bb0:	80 81       	ld	r24, Z
    1bb2:	82 60       	ori	r24, 0x02	; 2
    1bb4:	80 83       	st	Z, r24
    1bb6:	c1 14       	cp	r12, r1
    1bb8:	d1 04       	cpc	r13, r1
    1bba:	29 f0       	breq	.+10     	; 0x1bc6 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x11e>
    1bbc:	e2 e7       	ldi	r30, 0x72	; 114
    1bbe:	f0 e0       	ldi	r31, 0x00	; 0
    1bc0:	80 81       	ld	r24, Z
    1bc2:	84 60       	ori	r24, 0x04	; 4
    1bc4:	80 83       	st	Z, r24
    1bc6:	01 15       	cp	r16, r1
    1bc8:	11 05       	cpc	r17, r1
    1bca:	29 f0       	breq	.+10     	; 0x1bd6 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x12e>
    1bcc:	e2 e7       	ldi	r30, 0x72	; 114
    1bce:	f0 e0       	ldi	r31, 0x00	; 0
    1bd0:	80 81       	ld	r24, Z
    1bd2:	88 60       	ori	r24, 0x08	; 8
    1bd4:	80 83       	st	Z, r24
    1bd6:	e1 14       	cp	r14, r1
    1bd8:	f1 04       	cpc	r15, r1
    1bda:	69 f1       	breq	.+90     	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1bdc:	e2 e7       	ldi	r30, 0x72	; 114
    1bde:	f0 e0       	ldi	r31, 0x00	; 0
    1be0:	80 81       	ld	r24, Z
    1be2:	81 60       	ori	r24, 0x01	; 1
    1be4:	80 83       	st	Z, r24
    1be6:	27 c0       	rjmp	.+78     	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1be8:	85 e0       	ldi	r24, 0x05	; 5
    1bea:	98 12       	cpse	r9, r24
    1bec:	2e c0       	rjmp	.+92     	; 0x1c4a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x1a2>
    1bee:	d0 93 bb 1c 	sts	0x1CBB, r29	; 0x801cbb <timer_obj+0xb>
    1bf2:	c0 93 ba 1c 	sts	0x1CBA, r28	; 0x801cba <timer_obj+0xa>
    1bf6:	a1 14       	cp	r10, r1
    1bf8:	b1 04       	cpc	r11, r1
    1bfa:	29 f0       	breq	.+10     	; 0x1c06 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x15e>
    1bfc:	e3 e7       	ldi	r30, 0x73	; 115
    1bfe:	f0 e0       	ldi	r31, 0x00	; 0
    1c00:	80 81       	ld	r24, Z
    1c02:	82 60       	ori	r24, 0x02	; 2
    1c04:	80 83       	st	Z, r24
    1c06:	c1 14       	cp	r12, r1
    1c08:	d1 04       	cpc	r13, r1
    1c0a:	29 f0       	breq	.+10     	; 0x1c16 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x16e>
    1c0c:	e3 e7       	ldi	r30, 0x73	; 115
    1c0e:	f0 e0       	ldi	r31, 0x00	; 0
    1c10:	80 81       	ld	r24, Z
    1c12:	84 60       	ori	r24, 0x04	; 4
    1c14:	80 83       	st	Z, r24
    1c16:	01 15       	cp	r16, r1
    1c18:	11 05       	cpc	r17, r1
    1c1a:	29 f0       	breq	.+10     	; 0x1c26 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x17e>
    1c1c:	e3 e7       	ldi	r30, 0x73	; 115
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	80 81       	ld	r24, Z
    1c22:	88 60       	ori	r24, 0x08	; 8
    1c24:	80 83       	st	Z, r24
    1c26:	e1 14       	cp	r14, r1
    1c28:	f1 04       	cpc	r15, r1
    1c2a:	29 f0       	breq	.+10     	; 0x1c36 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1c2c:	e3 e7       	ldi	r30, 0x73	; 115
    1c2e:	f0 e0       	ldi	r31, 0x00	; 0
    1c30:	80 81       	ld	r24, Z
    1c32:	81 60       	ori	r24, 0x01	; 1
    1c34:	80 83       	st	Z, r24
    1c36:	b9 86       	std	Y+9, r11	; 0x09
    1c38:	a8 86       	std	Y+8, r10	; 0x08
    1c3a:	db 86       	std	Y+11, r13	; 0x0b
    1c3c:	ca 86       	std	Y+10, r12	; 0x0a
    1c3e:	1d 87       	std	Y+13, r17	; 0x0d
    1c40:	0c 87       	std	Y+12, r16	; 0x0c
    1c42:	ff 86       	std	Y+15, r15	; 0x0f
    1c44:	ee 86       	std	Y+14, r14	; 0x0e
    1c46:	1e 82       	std	Y+6, r1	; 0x06
    1c48:	1f 82       	std	Y+7, r1	; 0x07
    1c4a:	df 91       	pop	r29
    1c4c:	cf 91       	pop	r28
    1c4e:	1f 91       	pop	r17
    1c50:	0f 91       	pop	r16
    1c52:	ff 90       	pop	r15
    1c54:	ef 90       	pop	r14
    1c56:	df 90       	pop	r13
    1c58:	cf 90       	pop	r12
    1c5a:	bf 90       	pop	r11
    1c5c:	af 90       	pop	r10
    1c5e:	9f 90       	pop	r9
    1c60:	08 95       	ret

00001c62 <_ZN7Timer168start_msEjjjjh>:
    1c62:	ef 92       	push	r14
    1c64:	ff 92       	push	r15
    1c66:	0f 93       	push	r16
    1c68:	1f 93       	push	r17
    1c6a:	cf 93       	push	r28
    1c6c:	df 93       	push	r29
    1c6e:	fc 01       	movw	r30, r24
    1c70:	ff b6       	in	r15, 0x3f	; 63
    1c72:	f8 94       	cli
    1c74:	a4 81       	ldd	r26, Z+4	; 0x04
    1c76:	b5 81       	ldd	r27, Z+5	; 0x05
    1c78:	8c 91       	ld	r24, X
    1c7a:	88 7f       	andi	r24, 0xF8	; 248
    1c7c:	8c 93       	st	X, r24
    1c7e:	a4 81       	ldd	r26, Z+4	; 0x04
    1c80:	b5 81       	ldd	r27, Z+5	; 0x05
    1c82:	8c 91       	ld	r24, X
    1c84:	85 60       	ori	r24, 0x05	; 5
    1c86:	8c 93       	st	X, r24
    1c88:	a6 2f       	mov	r26, r22
    1c8a:	b7 2f       	mov	r27, r23
    1c8c:	a2 31       	cpi	r26, 0x12	; 18
    1c8e:	81 e1       	ldi	r24, 0x11	; 17
    1c90:	b8 07       	cpc	r27, r24
    1c92:	10 f0       	brcs	.+4      	; 0x1c98 <_ZN7Timer168start_msEjjjjh+0x36>
    1c94:	a1 e1       	ldi	r26, 0x11	; 17
    1c96:	b1 e1       	ldi	r27, 0x11	; 17
    1c98:	8f e0       	ldi	r24, 0x0F	; 15
    1c9a:	8a 9f       	mul	r24, r26
    1c9c:	e0 01       	movw	r28, r0
    1c9e:	8b 9f       	mul	r24, r27
    1ca0:	d0 0d       	add	r29, r0
    1ca2:	11 24       	eor	r1, r1
    1ca4:	64 2f       	mov	r22, r20
    1ca6:	75 2f       	mov	r23, r21
    1ca8:	62 31       	cpi	r22, 0x12	; 18
    1caa:	81 e1       	ldi	r24, 0x11	; 17
    1cac:	78 07       	cpc	r23, r24
    1cae:	10 f0       	brcs	.+4      	; 0x1cb4 <_ZN7Timer168start_msEjjjjh+0x52>
    1cb0:	61 e1       	ldi	r22, 0x11	; 17
    1cb2:	71 e1       	ldi	r23, 0x11	; 17
    1cb4:	8f e0       	ldi	r24, 0x0F	; 15
    1cb6:	86 9f       	mul	r24, r22
    1cb8:	d0 01       	movw	r26, r0
    1cba:	87 9f       	mul	r24, r23
    1cbc:	b0 0d       	add	r27, r0
    1cbe:	11 24       	eor	r1, r1
    1cc0:	42 2f       	mov	r20, r18
    1cc2:	53 2f       	mov	r21, r19
    1cc4:	42 31       	cpi	r20, 0x12	; 18
    1cc6:	81 e1       	ldi	r24, 0x11	; 17
    1cc8:	58 07       	cpc	r21, r24
    1cca:	10 f0       	brcs	.+4      	; 0x1cd0 <_ZN7Timer168start_msEjjjjh+0x6e>
    1ccc:	41 e1       	ldi	r20, 0x11	; 17
    1cce:	51 e1       	ldi	r21, 0x11	; 17
    1cd0:	8f e0       	ldi	r24, 0x0F	; 15
    1cd2:	84 9f       	mul	r24, r20
    1cd4:	b0 01       	movw	r22, r0
    1cd6:	85 9f       	mul	r24, r21
    1cd8:	70 0d       	add	r23, r0
    1cda:	11 24       	eor	r1, r1
    1cdc:	20 2f       	mov	r18, r16
    1cde:	31 2f       	mov	r19, r17
    1ce0:	22 31       	cpi	r18, 0x12	; 18
    1ce2:	81 e1       	ldi	r24, 0x11	; 17
    1ce4:	38 07       	cpc	r19, r24
    1ce6:	10 f0       	brcs	.+4      	; 0x1cec <_ZN7Timer168start_msEjjjjh+0x8a>
    1ce8:	21 e1       	ldi	r18, 0x11	; 17
    1cea:	31 e1       	ldi	r19, 0x11	; 17
    1cec:	8f e0       	ldi	r24, 0x0F	; 15
    1cee:	82 9f       	mul	r24, r18
    1cf0:	a0 01       	movw	r20, r0
    1cf2:	83 9f       	mul	r24, r19
    1cf4:	50 0d       	add	r21, r0
    1cf6:	11 24       	eor	r1, r1
    1cf8:	51 8b       	std	Z+17, r21	; 0x11
    1cfa:	40 8b       	std	Z+16, r20	; 0x10
    1cfc:	82 81       	ldd	r24, Z+2	; 0x02
    1cfe:	93 81       	ldd	r25, Z+3	; 0x03
    1d00:	20 91 d3 02 	lds	r18, 0x02D3	; 0x8002d3 <tc_vect+0x2>
    1d04:	30 91 d4 02 	lds	r19, 0x02D4	; 0x8002d4 <tc_vect+0x3>
    1d08:	82 17       	cp	r24, r18
    1d0a:	93 07       	cpc	r25, r19
    1d0c:	89 f4       	brne	.+34     	; 0x1d30 <_ZN7Timer168start_msEjjjjh+0xce>
    1d0e:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    1d12:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    1d16:	b0 93 8b 00 	sts	0x008B, r27	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
    1d1a:	a0 93 8a 00 	sts	0x008A, r26	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
    1d1e:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
    1d22:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
    1d26:	50 93 85 00 	sts	0x0085, r21	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    1d2a:	40 93 84 00 	sts	0x0084, r20	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    1d2e:	40 c0       	rjmp	.+128    	; 0x1db0 <_ZN7Timer168start_msEjjjjh+0x14e>
    1d30:	20 91 d7 02 	lds	r18, 0x02D7	; 0x8002d7 <tc_vect+0x6>
    1d34:	30 91 d8 02 	lds	r19, 0x02D8	; 0x8002d8 <tc_vect+0x7>
    1d38:	82 17       	cp	r24, r18
    1d3a:	93 07       	cpc	r25, r19
    1d3c:	89 f4       	brne	.+34     	; 0x1d60 <_ZN7Timer168start_msEjjjjh+0xfe>
    1d3e:	d0 93 99 00 	sts	0x0099, r29	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
    1d42:	c0 93 98 00 	sts	0x0098, r28	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
    1d46:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <__TEXT_REGION_LENGTH__+0x7c009b>
    1d4a:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <__TEXT_REGION_LENGTH__+0x7c009a>
    1d4e:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x7c009d>
    1d52:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x7c009c>
    1d56:	50 93 95 00 	sts	0x0095, r21	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    1d5a:	40 93 94 00 	sts	0x0094, r20	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    1d5e:	28 c0       	rjmp	.+80     	; 0x1db0 <_ZN7Timer168start_msEjjjjh+0x14e>
    1d60:	20 91 d9 02 	lds	r18, 0x02D9	; 0x8002d9 <tc_vect+0x8>
    1d64:	30 91 da 02 	lds	r19, 0x02DA	; 0x8002da <tc_vect+0x9>
    1d68:	82 17       	cp	r24, r18
    1d6a:	93 07       	cpc	r25, r19
    1d6c:	89 f4       	brne	.+34     	; 0x1d90 <_ZN7Timer168start_msEjjjjh+0x12e>
    1d6e:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    1d72:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
    1d76:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
    1d7a:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
    1d7e:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
    1d82:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
    1d86:	50 93 a5 00 	sts	0x00A5, r21	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    1d8a:	40 93 a4 00 	sts	0x00A4, r20	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1d8e:	10 c0       	rjmp	.+32     	; 0x1db0 <_ZN7Timer168start_msEjjjjh+0x14e>
    1d90:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
    1d94:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
    1d98:	b0 93 2b 01 	sts	0x012B, r27	; 0x80012b <__TEXT_REGION_LENGTH__+0x7c012b>
    1d9c:	a0 93 2a 01 	sts	0x012A, r26	; 0x80012a <__TEXT_REGION_LENGTH__+0x7c012a>
    1da0:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <__TEXT_REGION_LENGTH__+0x7c012d>
    1da4:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <__TEXT_REGION_LENGTH__+0x7c012c>
    1da8:	50 93 25 01 	sts	0x0125, r21	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    1dac:	40 93 24 01 	sts	0x0124, r20	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    1db0:	e6 82       	std	Z+6, r14	; 0x06
    1db2:	81 e0       	ldi	r24, 0x01	; 1
    1db4:	87 83       	std	Z+7, r24	; 0x07
    1db6:	ff be       	out	0x3f, r15	; 63
    1db8:	df 91       	pop	r29
    1dba:	cf 91       	pop	r28
    1dbc:	1f 91       	pop	r17
    1dbe:	0f 91       	pop	r16
    1dc0:	ff 90       	pop	r15
    1dc2:	ef 90       	pop	r14
    1dc4:	08 95       	ret

00001dc6 <_ZN6Timer8C1EhPFvvES1_S1_>:
    1dc6:	bf 92       	push	r11
    1dc8:	cf 92       	push	r12
    1dca:	df 92       	push	r13
    1dcc:	ef 92       	push	r14
    1dce:	ff 92       	push	r15
    1dd0:	0f 93       	push	r16
    1dd2:	1f 93       	push	r17
    1dd4:	cf 93       	push	r28
    1dd6:	df 93       	push	r29
    1dd8:	ec 01       	movw	r28, r24
    1dda:	b6 2e       	mov	r11, r22
    1ddc:	6a 01       	movw	r12, r20
    1dde:	79 01       	movw	r14, r18
    1de0:	8d e9       	ldi	r24, 0x9D	; 157
    1de2:	92 e0       	ldi	r25, 0x02	; 2
    1de4:	99 83       	std	Y+1, r25	; 0x01
    1de6:	88 83       	st	Y, r24
    1de8:	86 2f       	mov	r24, r22
    1dea:	10 d1       	rcall	.+544    	; 0x200c <_Z20tc_handle_to_addressh>
    1dec:	9b 83       	std	Y+3, r25	; 0x03
    1dee:	8a 83       	std	Y+2, r24	; 0x02
    1df0:	eb 2d       	mov	r30, r11
    1df2:	f0 e0       	ldi	r31, 0x00	; 0
    1df4:	ee 0f       	add	r30, r30
    1df6:	ff 1f       	adc	r31, r31
    1df8:	ef 52       	subi	r30, 0x2F	; 47
    1dfa:	fd 4f       	sbci	r31, 0xFD	; 253
    1dfc:	80 81       	ld	r24, Z
    1dfe:	91 81       	ldd	r25, Z+1	; 0x01
    1e00:	01 96       	adiw	r24, 0x01	; 1
    1e02:	9d 83       	std	Y+5, r25	; 0x05
    1e04:	8c 83       	std	Y+4, r24	; 0x04
    1e06:	8b ea       	ldi	r24, 0xAB	; 171
    1e08:	92 e0       	ldi	r25, 0x02	; 2
    1e0a:	99 83       	std	Y+1, r25	; 0x01
    1e0c:	88 83       	st	Y, r24
    1e0e:	b1 10       	cpse	r11, r1
    1e10:	1d c0       	rjmp	.+58     	; 0x1e4c <_ZN6Timer8C1EhPFvvES1_S1_+0x86>
    1e12:	d0 93 b1 1c 	sts	0x1CB1, r29	; 0x801cb1 <timer_obj+0x1>
    1e16:	c0 93 b0 1c 	sts	0x1CB0, r28	; 0x801cb0 <timer_obj>
    1e1a:	c1 14       	cp	r12, r1
    1e1c:	d1 04       	cpc	r13, r1
    1e1e:	29 f0       	breq	.+10     	; 0x1e2a <_ZN6Timer8C1EhPFvvES1_S1_+0x64>
    1e20:	ee e6       	ldi	r30, 0x6E	; 110
    1e22:	f0 e0       	ldi	r31, 0x00	; 0
    1e24:	80 81       	ld	r24, Z
    1e26:	82 60       	ori	r24, 0x02	; 2
    1e28:	80 83       	st	Z, r24
    1e2a:	e1 14       	cp	r14, r1
    1e2c:	f1 04       	cpc	r15, r1
    1e2e:	29 f0       	breq	.+10     	; 0x1e3a <_ZN6Timer8C1EhPFvvES1_S1_+0x74>
    1e30:	ee e6       	ldi	r30, 0x6E	; 110
    1e32:	f0 e0       	ldi	r31, 0x00	; 0
    1e34:	80 81       	ld	r24, Z
    1e36:	84 60       	ori	r24, 0x04	; 4
    1e38:	80 83       	st	Z, r24
    1e3a:	01 15       	cp	r16, r1
    1e3c:	11 05       	cpc	r17, r1
    1e3e:	29 f1       	breq	.+74     	; 0x1e8a <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1e40:	ee e6       	ldi	r30, 0x6E	; 110
    1e42:	f0 e0       	ldi	r31, 0x00	; 0
    1e44:	80 81       	ld	r24, Z
    1e46:	81 60       	ori	r24, 0x01	; 1
    1e48:	80 83       	st	Z, r24
    1e4a:	1f c0       	rjmp	.+62     	; 0x1e8a <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1e4c:	82 e0       	ldi	r24, 0x02	; 2
    1e4e:	b8 12       	cpse	r11, r24
    1e50:	26 c0       	rjmp	.+76     	; 0x1e9e <_ZN6Timer8C1EhPFvvES1_S1_+0xd8>
    1e52:	d0 93 b5 1c 	sts	0x1CB5, r29	; 0x801cb5 <timer_obj+0x5>
    1e56:	c0 93 b4 1c 	sts	0x1CB4, r28	; 0x801cb4 <timer_obj+0x4>
    1e5a:	c1 14       	cp	r12, r1
    1e5c:	d1 04       	cpc	r13, r1
    1e5e:	29 f0       	breq	.+10     	; 0x1e6a <_ZN6Timer8C1EhPFvvES1_S1_+0xa4>
    1e60:	e0 e7       	ldi	r30, 0x70	; 112
    1e62:	f0 e0       	ldi	r31, 0x00	; 0
    1e64:	80 81       	ld	r24, Z
    1e66:	82 60       	ori	r24, 0x02	; 2
    1e68:	80 83       	st	Z, r24
    1e6a:	e1 14       	cp	r14, r1
    1e6c:	f1 04       	cpc	r15, r1
    1e6e:	29 f0       	breq	.+10     	; 0x1e7a <_ZN6Timer8C1EhPFvvES1_S1_+0xb4>
    1e70:	e0 e7       	ldi	r30, 0x70	; 112
    1e72:	f0 e0       	ldi	r31, 0x00	; 0
    1e74:	80 81       	ld	r24, Z
    1e76:	84 60       	ori	r24, 0x04	; 4
    1e78:	80 83       	st	Z, r24
    1e7a:	01 15       	cp	r16, r1
    1e7c:	11 05       	cpc	r17, r1
    1e7e:	29 f0       	breq	.+10     	; 0x1e8a <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1e80:	e0 e7       	ldi	r30, 0x70	; 112
    1e82:	f0 e0       	ldi	r31, 0x00	; 0
    1e84:	80 81       	ld	r24, Z
    1e86:	81 60       	ori	r24, 0x01	; 1
    1e88:	80 83       	st	Z, r24
    1e8a:	d9 86       	std	Y+9, r13	; 0x09
    1e8c:	c8 86       	std	Y+8, r12	; 0x08
    1e8e:	fb 86       	std	Y+11, r15	; 0x0b
    1e90:	ea 86       	std	Y+10, r14	; 0x0a
    1e92:	1d 86       	std	Y+13, r1	; 0x0d
    1e94:	1c 86       	std	Y+12, r1	; 0x0c
    1e96:	1f 87       	std	Y+15, r17	; 0x0f
    1e98:	0e 87       	std	Y+14, r16	; 0x0e
    1e9a:	1e 82       	std	Y+6, r1	; 0x06
    1e9c:	1f 82       	std	Y+7, r1	; 0x07
    1e9e:	df 91       	pop	r29
    1ea0:	cf 91       	pop	r28
    1ea2:	1f 91       	pop	r17
    1ea4:	0f 91       	pop	r16
    1ea6:	ff 90       	pop	r15
    1ea8:	ef 90       	pop	r14
    1eaa:	df 90       	pop	r13
    1eac:	cf 90       	pop	r12
    1eae:	bf 90       	pop	r11
    1eb0:	08 95       	ret

00001eb2 <_ZN7OSTimerC1Eh>:
    1eb2:	ef 92       	push	r14
    1eb4:	ff 92       	push	r15
    1eb6:	0f 93       	push	r16
    1eb8:	1f 93       	push	r17
    1eba:	cf 93       	push	r28
    1ebc:	7c 01       	movw	r14, r24
    1ebe:	c6 2f       	mov	r28, r22
    1ec0:	00 e0       	ldi	r16, 0x00	; 0
    1ec2:	10 e0       	ldi	r17, 0x00	; 0
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	30 e0       	ldi	r19, 0x00	; 0
    1ec8:	40 e0       	ldi	r20, 0x00	; 0
    1eca:	50 e0       	ldi	r21, 0x00	; 0
    1ecc:	7c df       	rcall	.-264    	; 0x1dc6 <_ZN6Timer8C1EhPFvvES1_S1_>
    1ece:	89 eb       	ldi	r24, 0xB9	; 185
    1ed0:	92 e0       	ldi	r25, 0x02	; 2
    1ed2:	f7 01       	movw	r30, r14
    1ed4:	91 83       	std	Z+1, r25	; 0x01
    1ed6:	80 83       	st	Z, r24
    1ed8:	c1 11       	cpse	r28, r1
    1eda:	04 c0       	rjmp	.+8      	; 0x1ee4 <_ZN7OSTimerC1Eh+0x32>
    1edc:	81 e0       	ldi	r24, 0x01	; 1
    1ede:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
    1ee2:	05 c0       	rjmp	.+10     	; 0x1eee <_ZN7OSTimerC1Eh+0x3c>
    1ee4:	c2 30       	cpi	r28, 0x02	; 2
    1ee6:	19 f4       	brne	.+6      	; 0x1eee <_ZN7OSTimerC1Eh+0x3c>
    1ee8:	81 e0       	ldi	r24, 0x01	; 1
    1eea:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7c0070>
    1eee:	cf 91       	pop	r28
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	ff 90       	pop	r15
    1ef6:	ef 90       	pop	r14
    1ef8:	08 95       	ret

00001efa <_ZN5Timer4stopEv>:
    1efa:	fc 01       	movw	r30, r24
    1efc:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1efe:	f8 94       	cli
    1f00:	a4 81       	ldd	r26, Z+4	; 0x04
    1f02:	b5 81       	ldd	r27, Z+5	; 0x05
    1f04:	8c 91       	ld	r24, X
    1f06:	88 7f       	andi	r24, 0xF8	; 248
    1f08:	8c 93       	st	X, r24
    1f0a:	16 82       	std	Z+6, r1	; 0x06
    1f0c:	17 82       	std	Z+7, r1	; 0x07
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1f0e:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    1f10:	08 95       	ret

00001f12 <_ZN7Timer165resetEv>:
    1f12:	fc 01       	movw	r30, r24
    1f14:	86 81       	ldd	r24, Z+6	; 0x06
    1f16:	82 30       	cpi	r24, 0x02	; 2
    1f18:	b8 f1       	brcs	.+110    	; 0x1f88 <_ZN7Timer165resetEv+0x76>
    1f1a:	8f 3f       	cpi	r24, 0xFF	; 255
    1f1c:	11 f0       	breq	.+4      	; 0x1f22 <_ZN7Timer165resetEv+0x10>
    1f1e:	81 50       	subi	r24, 0x01	; 1
    1f20:	86 83       	std	Z+6, r24	; 0x06
    1f22:	82 81       	ldd	r24, Z+2	; 0x02
    1f24:	93 81       	ldd	r25, Z+3	; 0x03
    1f26:	20 91 d3 02 	lds	r18, 0x02D3	; 0x8002d3 <tc_vect+0x2>
    1f2a:	30 91 d4 02 	lds	r19, 0x02D4	; 0x8002d4 <tc_vect+0x3>
    1f2e:	82 17       	cp	r24, r18
    1f30:	93 07       	cpc	r25, r19
    1f32:	39 f4       	brne	.+14     	; 0x1f42 <_ZN7Timer165resetEv+0x30>
    1f34:	80 89       	ldd	r24, Z+16	; 0x10
    1f36:	91 89       	ldd	r25, Z+17	; 0x11
    1f38:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    1f3c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    1f40:	08 95       	ret
    1f42:	20 91 d7 02 	lds	r18, 0x02D7	; 0x8002d7 <tc_vect+0x6>
    1f46:	30 91 d8 02 	lds	r19, 0x02D8	; 0x8002d8 <tc_vect+0x7>
    1f4a:	82 17       	cp	r24, r18
    1f4c:	93 07       	cpc	r25, r19
    1f4e:	39 f4       	brne	.+14     	; 0x1f5e <_ZN7Timer165resetEv+0x4c>
    1f50:	80 89       	ldd	r24, Z+16	; 0x10
    1f52:	91 89       	ldd	r25, Z+17	; 0x11
    1f54:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    1f58:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    1f5c:	08 95       	ret
    1f5e:	20 91 d9 02 	lds	r18, 0x02D9	; 0x8002d9 <tc_vect+0x8>
    1f62:	30 91 da 02 	lds	r19, 0x02DA	; 0x8002da <tc_vect+0x9>
    1f66:	82 17       	cp	r24, r18
    1f68:	93 07       	cpc	r25, r19
    1f6a:	39 f4       	brne	.+14     	; 0x1f7a <_ZN7Timer165resetEv+0x68>
    1f6c:	80 89       	ldd	r24, Z+16	; 0x10
    1f6e:	91 89       	ldd	r25, Z+17	; 0x11
    1f70:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    1f74:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1f78:	08 95       	ret
    1f7a:	80 89       	ldd	r24, Z+16	; 0x10
    1f7c:	91 89       	ldd	r25, Z+17	; 0x11
    1f7e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    1f82:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    1f86:	08 95       	ret
    1f88:	cf 01       	movw	r24, r30
    1f8a:	b7 cf       	rjmp	.-146    	; 0x1efa <_ZN5Timer4stopEv>
    1f8c:	08 95       	ret

00001f8e <_ZN6Timer85resetEv>:
    1f8e:	fc 01       	movw	r30, r24
    1f90:	86 81       	ldd	r24, Z+6	; 0x06
    1f92:	82 30       	cpi	r24, 0x02	; 2
    1f94:	a0 f0       	brcs	.+40     	; 0x1fbe <_ZN6Timer85resetEv+0x30>
    1f96:	8f 3f       	cpi	r24, 0xFF	; 255
    1f98:	11 f0       	breq	.+4      	; 0x1f9e <_ZN6Timer85resetEv+0x10>
    1f9a:	81 50       	subi	r24, 0x01	; 1
    1f9c:	86 83       	std	Z+6, r24	; 0x06
    1f9e:	22 81       	ldd	r18, Z+2	; 0x02
    1fa0:	33 81       	ldd	r19, Z+3	; 0x03
    1fa2:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <tc_vect>
    1fa6:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <tc_vect+0x1>
    1faa:	28 17       	cp	r18, r24
    1fac:	39 07       	cpc	r19, r25
    1fae:	19 f4       	brne	.+6      	; 0x1fb6 <_ZN6Timer85resetEv+0x28>
    1fb0:	80 89       	ldd	r24, Z+16	; 0x10
    1fb2:	86 bd       	out	0x26, r24	; 38
    1fb4:	08 95       	ret
    1fb6:	80 89       	ldd	r24, Z+16	; 0x10
    1fb8:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    1fbc:	08 95       	ret
    1fbe:	cf 01       	movw	r24, r30
    1fc0:	9c cf       	rjmp	.-200    	; 0x1efa <_ZN5Timer4stopEv>
    1fc2:	08 95       	ret

00001fc4 <_Z22port_handle_to_addressh>:
    1fc4:	28 2f       	mov	r18, r24
    1fc6:	30 e0       	ldi	r19, 0x00	; 0
    1fc8:	41 e0       	ldi	r20, 0x01	; 1
    1fca:	50 e0       	ldi	r21, 0x00	; 0
    1fcc:	ba 01       	movw	r22, r20
    1fce:	02 c0       	rjmp	.+4      	; 0x1fd4 <_Z22port_handle_to_addressh+0x10>
    1fd0:	66 0f       	add	r22, r22
    1fd2:	77 1f       	adc	r23, r23
    1fd4:	8a 95       	dec	r24
    1fd6:	e2 f7       	brpl	.-8      	; 0x1fd0 <_Z22port_handle_to_addressh+0xc>
    1fd8:	cb 01       	movw	r24, r22
    1fda:	40 91 bd 1c 	lds	r20, 0x1CBD	; 0x801cbd <_ZL10port_usage>
    1fde:	50 91 be 1c 	lds	r21, 0x1CBE	; 0x801cbe <_ZL10port_usage+0x1>
    1fe2:	64 23       	and	r22, r20
    1fe4:	75 23       	and	r23, r21
    1fe6:	67 2b       	or	r22, r23
    1fe8:	71 f4       	brne	.+28     	; 0x2006 <__DATA_REGION_LENGTH__+0x6>
    1fea:	84 2b       	or	r24, r20
    1fec:	95 2b       	or	r25, r21
    1fee:	90 93 be 1c 	sts	0x1CBE, r25	; 0x801cbe <_ZL10port_usage+0x1>
    1ff2:	80 93 bd 1c 	sts	0x1CBD, r24	; 0x801cbd <_ZL10port_usage>
    1ff6:	22 0f       	add	r18, r18
    1ff8:	33 1f       	adc	r19, r19
    1ffa:	f9 01       	movw	r30, r18
    1ffc:	e3 52       	subi	r30, 0x23	; 35
    1ffe:	fd 4f       	sbci	r31, 0xFD	; 253
    2000:	80 81       	ld	r24, Z
    2002:	91 81       	ldd	r25, Z+1	; 0x01
    2004:	08 95       	ret
    2006:	80 e0       	ldi	r24, 0x00	; 0
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	08 95       	ret

0000200c <_Z20tc_handle_to_addressh>:
    200c:	60 91 bc 1c 	lds	r22, 0x1CBC	; 0x801cbc <_ZL8tc_usage>
    2010:	28 2f       	mov	r18, r24
    2012:	30 e0       	ldi	r19, 0x00	; 0
    2014:	46 2f       	mov	r20, r22
    2016:	50 e0       	ldi	r21, 0x00	; 0
    2018:	08 2e       	mov	r0, r24
    201a:	02 c0       	rjmp	.+4      	; 0x2020 <_Z20tc_handle_to_addressh+0x14>
    201c:	55 95       	asr	r21
    201e:	47 95       	ror	r20
    2020:	0a 94       	dec	r0
    2022:	e2 f7       	brpl	.-8      	; 0x201c <_Z20tc_handle_to_addressh+0x10>
    2024:	40 fd       	sbrc	r20, 0
    2026:	14 c0       	rjmp	.+40     	; 0x2050 <_Z20tc_handle_to_addressh+0x44>
    2028:	41 e0       	ldi	r20, 0x01	; 1
    202a:	50 e0       	ldi	r21, 0x00	; 0
    202c:	fa 01       	movw	r30, r20
    202e:	02 c0       	rjmp	.+4      	; 0x2034 <_Z20tc_handle_to_addressh+0x28>
    2030:	ee 0f       	add	r30, r30
    2032:	ff 1f       	adc	r31, r31
    2034:	8a 95       	dec	r24
    2036:	e2 f7       	brpl	.-8      	; 0x2030 <_Z20tc_handle_to_addressh+0x24>
    2038:	cf 01       	movw	r24, r30
    203a:	86 2b       	or	r24, r22
    203c:	80 93 bc 1c 	sts	0x1CBC, r24	; 0x801cbc <_ZL8tc_usage>
    2040:	22 0f       	add	r18, r18
    2042:	33 1f       	adc	r19, r19
    2044:	f9 01       	movw	r30, r18
    2046:	ef 52       	subi	r30, 0x2F	; 47
    2048:	fd 4f       	sbci	r31, 0xFD	; 253
    204a:	80 81       	ld	r24, Z
    204c:	91 81       	ldd	r25, Z+1	; 0x01
    204e:	08 95       	ret
    2050:	80 e0       	ldi	r24, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	08 95       	ret

00002056 <__divmodhi4>:
    2056:	97 fb       	bst	r25, 7
    2058:	07 2e       	mov	r0, r23
    205a:	16 f4       	brtc	.+4      	; 0x2060 <__divmodhi4+0xa>
    205c:	00 94       	com	r0
    205e:	06 d0       	rcall	.+12     	; 0x206c <__divmodhi4_neg1>
    2060:	77 fd       	sbrc	r23, 7
    2062:	08 d0       	rcall	.+16     	; 0x2074 <__divmodhi4_neg2>
    2064:	0b d0       	rcall	.+22     	; 0x207c <__udivmodhi4>
    2066:	07 fc       	sbrc	r0, 7
    2068:	05 d0       	rcall	.+10     	; 0x2074 <__divmodhi4_neg2>
    206a:	3e f4       	brtc	.+14     	; 0x207a <__divmodhi4_exit>

0000206c <__divmodhi4_neg1>:
    206c:	90 95       	com	r25
    206e:	81 95       	neg	r24
    2070:	9f 4f       	sbci	r25, 0xFF	; 255
    2072:	08 95       	ret

00002074 <__divmodhi4_neg2>:
    2074:	70 95       	com	r23
    2076:	61 95       	neg	r22
    2078:	7f 4f       	sbci	r23, 0xFF	; 255

0000207a <__divmodhi4_exit>:
    207a:	08 95       	ret

0000207c <__udivmodhi4>:
    207c:	aa 1b       	sub	r26, r26
    207e:	bb 1b       	sub	r27, r27
    2080:	51 e1       	ldi	r21, 0x11	; 17
    2082:	07 c0       	rjmp	.+14     	; 0x2092 <__udivmodhi4_ep>

00002084 <__udivmodhi4_loop>:
    2084:	aa 1f       	adc	r26, r26
    2086:	bb 1f       	adc	r27, r27
    2088:	a6 17       	cp	r26, r22
    208a:	b7 07       	cpc	r27, r23
    208c:	10 f0       	brcs	.+4      	; 0x2092 <__udivmodhi4_ep>
    208e:	a6 1b       	sub	r26, r22
    2090:	b7 0b       	sbc	r27, r23

00002092 <__udivmodhi4_ep>:
    2092:	88 1f       	adc	r24, r24
    2094:	99 1f       	adc	r25, r25
    2096:	5a 95       	dec	r21
    2098:	a9 f7       	brne	.-22     	; 0x2084 <__udivmodhi4_loop>
    209a:	80 95       	com	r24
    209c:	90 95       	com	r25
    209e:	bc 01       	movw	r22, r24
    20a0:	cd 01       	movw	r24, r26
    20a2:	08 95       	ret

000020a4 <__tablejump2__>:
    20a4:	ee 0f       	add	r30, r30
    20a6:	ff 1f       	adc	r31, r31
    20a8:	88 1f       	adc	r24, r24
    20aa:	8b bf       	out	0x3b, r24	; 59
    20ac:	07 90       	elpm	r0, Z+
    20ae:	f6 91       	elpm	r31, Z
    20b0:	e0 2d       	mov	r30, r0
    20b2:	19 94       	eijmp

000020b4 <_exit>:
    20b4:	f8 94       	cli

000020b6 <__stop_program>:
    20b6:	ff cf       	rjmp	.-2      	; 0x20b6 <__stop_program>
