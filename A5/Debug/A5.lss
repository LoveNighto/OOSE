
A5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800200  00002064  000020f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002064  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000019d5  008002a0  008002a0  00002198  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002198  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000468  00000000  00000000  00002208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000070f3  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002677  00000000  00000000  00009763  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000034d1  00000000  00000000  0000bdda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001234  00000000  00000000  0000f2ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001d9b  00000000  00000000  000104e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000050df  00000000  00000000  0001227b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004c8  00000000  00000000  0001735a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	79 c0       	rjmp	.+242    	; 0xf4 <_ZL7wdt_offv>
       2:	00 00       	nop
       4:	07 c1       	rjmp	.+526    	; 0x214 <__bad_interrupt>
       6:	00 00       	nop
       8:	05 c1       	rjmp	.+522    	; 0x214 <__bad_interrupt>
       a:	00 00       	nop
       c:	03 c1       	rjmp	.+518    	; 0x214 <__bad_interrupt>
       e:	00 00       	nop
      10:	01 c1       	rjmp	.+514    	; 0x214 <__bad_interrupt>
      12:	00 00       	nop
      14:	ff c0       	rjmp	.+510    	; 0x214 <__bad_interrupt>
      16:	00 00       	nop
      18:	fd c0       	rjmp	.+506    	; 0x214 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	fb c0       	rjmp	.+502    	; 0x214 <__bad_interrupt>
      1e:	00 00       	nop
      20:	f9 c0       	rjmp	.+498    	; 0x214 <__bad_interrupt>
      22:	00 00       	nop
      24:	e7 c2       	rjmp	.+1486   	; 0x5f4 <__vector_9>
      26:	00 00       	nop
      28:	18 c3       	rjmp	.+1584   	; 0x65a <__vector_10>
      2a:	00 00       	nop
      2c:	49 c3       	rjmp	.+1682   	; 0x6c0 <__vector_11>
      2e:	00 00       	nop
      30:	f1 c0       	rjmp	.+482    	; 0x214 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__vector_13>
      38:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__vector_14>
      3c:	eb c0       	rjmp	.+470    	; 0x214 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e9 c0       	rjmp	.+466    	; 0x214 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 be 09 	jmp	0x137c	; 0x137c <__vector_17>
      48:	0c 94 f1 09 	jmp	0x13e2	; 0x13e2 <__vector_18>
      4c:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__vector_19>
      50:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__vector_20>
      54:	0c 94 f2 08 	jmp	0x11e4	; 0x11e4 <__vector_21>
      58:	0c 94 25 09 	jmp	0x124a	; 0x124a <__vector_22>
      5c:	03 c7       	rjmp	.+3590   	; 0xe64 <__vector_23>
      5e:	00 00       	nop
      60:	d9 c0       	rjmp	.+434    	; 0x214 <__bad_interrupt>
      62:	00 00       	nop
      64:	d7 c0       	rjmp	.+430    	; 0x214 <__bad_interrupt>
      66:	00 00       	nop
      68:	d5 c0       	rjmp	.+426    	; 0x214 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d3 c0       	rjmp	.+422    	; 0x214 <__bad_interrupt>
      6e:	00 00       	nop
      70:	d1 c0       	rjmp	.+418    	; 0x214 <__bad_interrupt>
      72:	00 00       	nop
      74:	cf c0       	rjmp	.+414    	; 0x214 <__bad_interrupt>
      76:	00 00       	nop
      78:	cd c0       	rjmp	.+410    	; 0x214 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	cb c0       	rjmp	.+406    	; 0x214 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 8a 0a 	jmp	0x1514	; 0x1514 <__vector_32>
      84:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__vector_33>
      88:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__vector_34>
      8c:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__vector_35>
      90:	c1 c0       	rjmp	.+386    	; 0x214 <__bad_interrupt>
      92:	00 00       	nop
      94:	bf c0       	rjmp	.+382    	; 0x214 <__bad_interrupt>
      96:	00 00       	nop
      98:	bd c0       	rjmp	.+378    	; 0x214 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	bb c0       	rjmp	.+374    	; 0x214 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	b9 c0       	rjmp	.+370    	; 0x214 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b7 c0       	rjmp	.+366    	; 0x214 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__vector_42>
      ac:	0c 94 89 0b 	jmp	0x1712	; 0x1712 <__vector_43>
      b0:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__vector_44>
      b4:	0c 94 ef 0b 	jmp	0x17de	; 0x17de <__vector_45>
      b8:	ad c0       	rjmp	.+346    	; 0x214 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 22 0c 	jmp	0x1844	; 0x1844 <__vector_47>
      c0:	0c 94 55 0c 	jmp	0x18aa	; 0x18aa <__vector_48>
      c4:	0c 94 88 0c 	jmp	0x1910	; 0x1910 <__vector_49>
      c8:	0c 94 bb 0c 	jmp	0x1976	; 0x1976 <__vector_50>
      cc:	a3 c0       	rjmp	.+326    	; 0x214 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a1 c0       	rjmp	.+322    	; 0x214 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	9f c0       	rjmp	.+318    	; 0x214 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	9d c0       	rjmp	.+314    	; 0x214 <__bad_interrupt>
      da:	00 00       	nop
      dc:	9b c0       	rjmp	.+310    	; 0x214 <__bad_interrupt>
      de:	00 00       	nop
      e0:	99 c0       	rjmp	.+306    	; 0x214 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	48 65       	ori	r20, 0x58	; 88
      e6:	6c 6c       	ori	r22, 0xCC	; 204
      e8:	6f 57       	subi	r22, 0x7F	; 127
      ea:	6f 72       	andi	r22, 0x2F	; 47
      ec:	6c 64       	ori	r22, 0x4C	; 76
	...

000000f0 <__ctors_start>:
      f0:	55 02       	muls	r21, r21
      f2:	33 08       	sbc	r3, r3

000000f4 <_ZL7wdt_offv>:
// ausgeschaltet werden, sonst ensteht eine endlose RESET-Schleife. 
// Zu diesem Zweck wird der Aufruf von wdt_off() in die frueheste init-Sektion
// eingebaut - dieser Code wird unmittelbar nach RESET ausgefuehrt.

static void wdt_off (void) __attribute__((section(".init0"),naked, used));
static void wdt_off (void) {MCUSR = 0; wdt_disable();}
      f4:	14 be       	out	0x34, r1	; 52
				"out __SREG__,__tmp_reg__"   "\n\t"
				: [TEMPREG] "=d" (temp_reg)
				: [WDTREG]  "n"  (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
				: "r0"
		);
      f6:	0f b6       	in	r0, 0x3f	; 63
      f8:	f8 94       	cli
      fa:	a8 95       	wdr
      fc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     100:	88 61       	ori	r24, 0x18	; 24
     102:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     106:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     10a:	0f be       	out	0x3f, r0	; 63

0000010c <_ZL7wdt_offv>:
     10c:	14 be       	out	0x34, r1	; 52
     10e:	0f b6       	in	r0, 0x3f	; 63
     110:	f8 94       	cli
     112:	a8 95       	wdr
     114:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     118:	88 61       	ori	r24, 0x18	; 24
     11a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     11e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     122:	0f be       	out	0x3f, r0	; 63

00000124 <_ZL7wdt_offv>:
     124:	14 be       	out	0x34, r1	; 52
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	f8 94       	cli
     12a:	a8 95       	wdr
     12c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     130:	88 61       	ori	r24, 0x18	; 24
     132:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     136:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     13a:	0f be       	out	0x3f, r0	; 63

0000013c <_ZL7wdt_offv>:
     13c:	14 be       	out	0x34, r1	; 52
     13e:	0f b6       	in	r0, 0x3f	; 63
     140:	f8 94       	cli
     142:	a8 95       	wdr
     144:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     148:	88 61       	ori	r24, 0x18	; 24
     14a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     14e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     152:	0f be       	out	0x3f, r0	; 63

00000154 <_ZL7wdt_offv>:
     154:	14 be       	out	0x34, r1	; 52
     156:	0f b6       	in	r0, 0x3f	; 63
     158:	f8 94       	cli
     15a:	a8 95       	wdr
     15c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     160:	88 61       	ori	r24, 0x18	; 24
     162:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     166:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     16a:	0f be       	out	0x3f, r0	; 63

0000016c <_ZL7wdt_offv>:
     16c:	14 be       	out	0x34, r1	; 52
     16e:	0f b6       	in	r0, 0x3f	; 63
     170:	f8 94       	cli
     172:	a8 95       	wdr
     174:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     178:	88 61       	ori	r24, 0x18	; 24
     17a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     17e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     182:	0f be       	out	0x3f, r0	; 63

00000184 <_ZL7wdt_offv>:
     184:	14 be       	out	0x34, r1	; 52
     186:	0f b6       	in	r0, 0x3f	; 63
     188:	f8 94       	cli
     18a:	a8 95       	wdr
     18c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     190:	88 61       	ori	r24, 0x18	; 24
     192:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     196:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     19a:	0f be       	out	0x3f, r0	; 63

0000019c <_ZL7wdt_offv>:
     19c:	14 be       	out	0x34, r1	; 52
     19e:	0f b6       	in	r0, 0x3f	; 63
     1a0:	f8 94       	cli
     1a2:	a8 95       	wdr
     1a4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     1a8:	88 61       	ori	r24, 0x18	; 24
     1aa:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     1ae:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
     1b2:	0f be       	out	0x3f, r0	; 63
     1b4:	11 24       	eor	r1, r1
     1b6:	1f be       	out	0x3f, r1	; 63
     1b8:	cf ef       	ldi	r28, 0xFF	; 255
     1ba:	d1 e2       	ldi	r29, 0x21	; 33
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	cd bf       	out	0x3d, r28	; 61
     1c0:	00 e0       	ldi	r16, 0x00	; 0
     1c2:	0c bf       	out	0x3c, r16	; 60

000001c4 <__do_copy_data>:
     1c4:	12 e0       	ldi	r17, 0x02	; 2
     1c6:	a0 e0       	ldi	r26, 0x00	; 0
     1c8:	b2 e0       	ldi	r27, 0x02	; 2
     1ca:	e4 e6       	ldi	r30, 0x64	; 100
     1cc:	f0 e2       	ldi	r31, 0x20	; 32
     1ce:	00 e0       	ldi	r16, 0x00	; 0
     1d0:	0b bf       	out	0x3b, r16	; 59
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <__do_copy_data+0x14>
     1d4:	07 90       	elpm	r0, Z+
     1d6:	0d 92       	st	X+, r0
     1d8:	a0 3a       	cpi	r26, 0xA0	; 160
     1da:	b1 07       	cpc	r27, r17
     1dc:	d9 f7       	brne	.-10     	; 0x1d4 <__do_copy_data+0x10>

000001de <__do_clear_bss>:
     1de:	2c e1       	ldi	r18, 0x1C	; 28
     1e0:	a0 ea       	ldi	r26, 0xA0	; 160
     1e2:	b2 e0       	ldi	r27, 0x02	; 2
     1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <.do_clear_bss_start>

000001e6 <.do_clear_bss_loop>:
     1e6:	1d 92       	st	X+, r1

000001e8 <.do_clear_bss_start>:
     1e8:	a5 37       	cpi	r26, 0x75	; 117
     1ea:	b2 07       	cpc	r27, r18
     1ec:	e1 f7       	brne	.-8      	; 0x1e6 <.do_clear_bss_loop>

000001ee <__do_global_ctors>:
     1ee:	10 e0       	ldi	r17, 0x00	; 0
     1f0:	ca e7       	ldi	r28, 0x7A	; 122
     1f2:	d0 e0       	ldi	r29, 0x00	; 0
     1f4:	00 e0       	ldi	r16, 0x00	; 0
     1f6:	06 c0       	rjmp	.+12     	; 0x204 <__do_global_ctors+0x16>
     1f8:	21 97       	sbiw	r28, 0x01	; 1
     1fa:	01 09       	sbc	r16, r1
     1fc:	80 2f       	mov	r24, r16
     1fe:	fe 01       	movw	r30, r28
     200:	0e 94 28 10 	call	0x2050	; 0x2050 <__tablejump2__>
     204:	c8 37       	cpi	r28, 0x78	; 120
     206:	d1 07       	cpc	r29, r17
     208:	80 e0       	ldi	r24, 0x00	; 0
     20a:	08 07       	cpc	r16, r24
     20c:	a9 f7       	brne	.-22     	; 0x1f8 <__do_global_ctors+0xa>
     20e:	15 d1       	rcall	.+554    	; 0x43a <main>
     210:	0c 94 30 10 	jmp	0x2060	; 0x2060 <_exit>

00000214 <__bad_interrupt>:
     214:	f5 ce       	rjmp	.-534    	; 0x0 <__vectors>

00000216 <_Z7Blinkerv>:
char const t1_yope[2] PROGMEM = {"Y"};
char const t1_fehler[2] PROGMEM = {"N"};
char t1_ausgabe[11] ={};

void Blinker(){
	if(led_1.status == ON){
     216:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <led_1>
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	c9 f4       	brne	.+50     	; 0x250 <_Z7Blinkerv+0x3a>
		if (led_1.current_delay == 0){
     21e:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <led_1+0x1>
     222:	81 11       	cpse	r24, r1
     224:	10 c0       	rjmp	.+32     	; 0x246 <_Z7Blinkerv+0x30>
    /*! \brief Invertiere die durch bits spezifizierten Bits des Ports.
		\param [in] bits Bitmuster in active-high Logik. Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
	inline void toggle (uint8_t bits=0xFF) {
		*(base + OUT_OFFSET) ^= (uint8_t)(OUT_MASK & bits);
     226:	a9 ee       	ldi	r26, 0xE9	; 233
     228:	b2 e0       	ldi	r27, 0x02	; 2
     22a:	ed 91       	ld	r30, X+
     22c:	fc 91       	ld	r31, X
     22e:	11 97       	sbiw	r26, 0x01	; 1
     230:	92 81       	ldd	r25, Z+2	; 0x02
     232:	12 96       	adiw	r26, 0x02	; 2
     234:	8c 91       	ld	r24, X
     236:	8f 70       	andi	r24, 0x0F	; 15
     238:	89 27       	eor	r24, r25
     23a:	82 83       	std	Z+2, r24	; 0x02
			leds.toggle(0b00001111);
			led_1.current_delay = led_1.request_delay; // repeat blink
     23c:	e3 ea       	ldi	r30, 0xA3	; 163
     23e:	f2 e0       	ldi	r31, 0x02	; 2
     240:	82 81       	ldd	r24, Z+2	; 0x02
     242:	81 83       	std	Z+1, r24	; 0x01
     244:	05 c0       	rjmp	.+10     	; 0x250 <_Z7Blinkerv+0x3a>
		}else if(led_1.current_delay > 0){
     246:	88 23       	and	r24, r24
     248:	19 f0       	breq	.+6      	; 0x250 <_Z7Blinkerv+0x3a>
			led_1.current_delay--;
     24a:	81 50       	subi	r24, 0x01	; 1
     24c:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <led_1+0x1>
		}
	}
	if(led_2.status == ON){
     250:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <__data_end>
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	c9 f4       	brne	.+50     	; 0x28a <_Z7Blinkerv+0x74>
		if (led_2.current_delay == 0){
     258:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <__data_end+0x1>
     25c:	81 11       	cpse	r24, r1
     25e:	10 c0       	rjmp	.+32     	; 0x280 <_Z7Blinkerv+0x6a>
     260:	a9 ee       	ldi	r26, 0xE9	; 233
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	ed 91       	ld	r30, X+
     266:	fc 91       	ld	r31, X
     268:	11 97       	sbiw	r26, 0x01	; 1
     26a:	92 81       	ldd	r25, Z+2	; 0x02
     26c:	12 96       	adiw	r26, 0x02	; 2
     26e:	8c 91       	ld	r24, X
     270:	80 7f       	andi	r24, 0xF0	; 240
     272:	89 27       	eor	r24, r25
     274:	82 83       	std	Z+2, r24	; 0x02
			leds.toggle(~(0b00001111));
			led_2.current_delay = led_2.request_delay; // repeat blink
     276:	e0 ea       	ldi	r30, 0xA0	; 160
     278:	f2 e0       	ldi	r31, 0x02	; 2
     27a:	82 81       	ldd	r24, Z+2	; 0x02
     27c:	81 83       	std	Z+1, r24	; 0x01
     27e:	08 95       	ret
		}else if(led_2.current_delay > 0){
     280:	88 23       	and	r24, r24
     282:	19 f0       	breq	.+6      	; 0x28a <_Z7Blinkerv+0x74>
			led_2.current_delay--;
     284:	81 50       	subi	r24, 0x01	; 1
     286:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <__data_end+0x1>
     28a:	08 95       	ret

0000028c <_Z6Task_1v>:
	}
}

void Task_1(){
	while(1){
		shared_resource_semaphor_1.wait_aquire();
     28c:	8c ec       	ldi	r24, 0xCC	; 204
     28e:	92 e0       	ldi	r25, 0x02	; 2
     290:	12 d1       	rcall	.+548    	; 0x4b6 <_ZN14BinarySemaphor11wait_aquireEv>
		uint8_t i = 0;
		Queue_1.clear();
     292:	8d eb       	ldi	r24, 0xBD	; 189
     294:	92 e0       	ldi	r25, 0x02	; 2
     296:	42 d1       	rcall	.+644    	; 0x51c <_ZN12BoundedQueue5clearEv>
		for(i=0; i< 11; i++){
     298:	c0 e0       	ldi	r28, 0x00	; 0
     29a:	cb 30       	cpi	r28, 0x0B	; 11
     29c:	68 f4       	brcc	.+26     	; 0x2b8 <_Z6Task_1v+0x2c>
			//display.write_number(i);
			if(Queue_1.write(t1_str[i]) == false){				// GOOD but Queue is Leer
     29e:	ec 2f       	mov	r30, r28
     2a0:	f0 e0       	ldi	r31, 0x00	; 0
     2a2:	ec 51       	subi	r30, 0x1C	; 28
     2a4:	ff 4f       	sbci	r31, 0xFF	; 255
     2a6:	60 81       	ld	r22, Z
     2a8:	8d eb       	ldi	r24, 0xBD	; 189
     2aa:	92 e0       	ldi	r25, 0x02	; 2
     2ac:	57 d1       	rcall	.+686    	; 0x55c <_ZN12BoundedQueue5writeEh>
     2ae:	81 11       	cpse	r24, r1
				//display.write_FLASH_text(t1_nope); // F
				//i--;
				yield();
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <_Z6Task_1v+0x28>
     2b2:	2e d5       	rcall	.+2652   	; 0xd10 <_Z5yieldv>
void Task_1(){
	while(1){
		shared_resource_semaphor_1.wait_aquire();
		uint8_t i = 0;
		Queue_1.clear();
		for(i=0; i< 11; i++){
     2b4:	cf 5f       	subi	r28, 0xFF	; 255
				//display.write_FLASH_text(t1_nope); // F
				//i--;
				yield();
			}
		}
		shared_resource_semaphor_1.release();
     2b6:	f1 cf       	rjmp	.-30     	; 0x29a <_Z6Task_1v+0xe>
     2b8:	8c ec       	ldi	r24, 0xCC	; 204
     2ba:	92 e0       	ldi	r25, 0x02	; 2
     2bc:	18 d1       	rcall	.+560    	; 0x4ee <_ZN14BinarySemaphor7releaseEv>
		yield();
     2be:	28 d5       	rcall	.+2640   	; 0xd10 <_Z5yieldv>
     2c0:	e5 cf       	rjmp	.-54     	; 0x28c <_Z6Task_1v>

000002c2 <_Z8Viewer_1v>:
		}
	}
}

void Task_1(){
	while(1){
     2c2:	8c ec       	ldi	r24, 0xCC	; 204
	}
}

void Viewer_1(){
	while(1){
		shared_resource_semaphor_1.wait_aquire();
     2c4:	92 e0       	ldi	r25, 0x02	; 2
     2c6:	f7 d0       	rcall	.+494    	; 0x4b6 <_ZN14BinarySemaphor11wait_aquireEv>
		display.set_pos(0, 0);
     2c8:	40 e0       	ldi	r20, 0x00	; 0
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	8f ed       	ldi	r24, 0xDF	; 223
     2ce:	92 e0       	ldi	r25, 0x02	; 2
     2d0:	11 d3       	rcall	.+1570   	; 0x8f4 <_ZN3LCD7set_posEhh>
		for(uint8_t i=0; i< 11; i++){
     2d2:	c0 e0       	ldi	r28, 0x00	; 0
     2d4:	cb 30       	cpi	r28, 0x0B	; 11
     2d6:	80 f4       	brcc	.+32     	; 0x2f8 <_Z8Viewer_1v+0x36>
			if(Queue_1.read() == NAC){
     2d8:	8d eb       	ldi	r24, 0xBD	; 189
     2da:	92 e0       	ldi	r25, 0x02	; 2
     2dc:	27 d1       	rcall	.+590    	; 0x52c <_ZN12BoundedQueue4readEv>
     2de:	81 11       	cpse	r24, r1
				//display.write_FLASH_text(t1_fehler); //N	// GOOD no i--
				yield();
     2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <_Z8Viewer_1v+0x24>
     2e2:	16 d5       	rcall	.+2604   	; 0xd10 <_Z5yieldv>
			}else{
				//display.write_FLASH_text(t1_fope);		//X // NEVER GONE HERE WHY XD
				//t1_ausgabe[i] = Queue_1.read();
				//display.write_char(t1_ausgabe[i]);
				display.write_char(Queue_1.read());
     2e4:	07 c0       	rjmp	.+14     	; 0x2f4 <_Z8Viewer_1v+0x32>
     2e6:	8d eb       	ldi	r24, 0xBD	; 189
     2e8:	92 e0       	ldi	r25, 0x02	; 2
     2ea:	20 d1       	rcall	.+576    	; 0x52c <_ZN12BoundedQueue4readEv>
     2ec:	68 2f       	mov	r22, r24
     2ee:	8f ed       	ldi	r24, 0xDF	; 223
     2f0:	92 e0       	ldi	r25, 0x02	; 2

void Viewer_1(){
	while(1){
		shared_resource_semaphor_1.wait_aquire();
		display.set_pos(0, 0);
		for(uint8_t i=0; i< 11; i++){
     2f2:	17 d4       	rcall	.+2094   	; 0xb22 <_ZN3LCD10write_charEc>
     2f4:	cf 5f       	subi	r28, 0xFF	; 255
				//t1_ausgabe[i] = Queue_1.read();
				//display.write_char(t1_ausgabe[i]);
				display.write_char(Queue_1.read());
			}
		}
		shared_resource_semaphor_1.release();
     2f6:	ee cf       	rjmp	.-36     	; 0x2d4 <_Z8Viewer_1v+0x12>
     2f8:	8c ec       	ldi	r24, 0xCC	; 204
     2fa:	92 e0       	ldi	r25, 0x02	; 2
     2fc:	f8 d0       	rcall	.+496    	; 0x4ee <_ZN14BinarySemaphor7releaseEv>
		yield();
     2fe:	08 d5       	rcall	.+2576   	; 0xd10 <_Z5yieldv>
     300:	e0 cf       	rjmp	.-64     	; 0x2c2 <_Z8Viewer_1v>

00000302 <_Z41__static_initialization_and_destruction_0ii>:
		yield();
	}
}

void Viewer_1(){
	while(1){
     302:	ef 92       	push	r14
	
	task[4].tid = task_insert(Key_Cntl, High);
	task[5].tid = task_insert(Viewer_1, Medium);
	//task[6].tid = task_insert(Viewer_2, High);
	kernel();
     304:	ff 92       	push	r15
     306:	0f 93       	push	r16
     308:	1f 93       	push	r17
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	99 f5       	brne	.+102    	; 0x374 <_Z41__static_initialization_and_destruction_0ii+0x72>
     30e:	6f 3f       	cpi	r22, 0xFF	; 255
     310:	7f 4f       	sbci	r23, 0xFF	; 255
     312:	81 f5       	brne	.+96     	; 0x374 <_Z41__static_initialization_and_destruction_0ii+0x72>
void Task_4();
void Viewer_1();
void Viewer_2();
void Activ_Deactiv(uint8_t id);	// normale prozedur

DigiPortRaw keys(PA, SET_IN_PORT);
     314:	20 e0       	ldi	r18, 0x00	; 0
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	8d ee       	ldi	r24, 0xED	; 237
     31c:	92 e0       	ldi	r25, 0x02	; 2
     31e:	48 d1       	rcall	.+656    	; 0x5b0 <_ZN11DigiPortRawC1Ehhh>
DigiPortRaw leds(PB, SET_OUT_PORT);
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	4f ef       	ldi	r20, 0xFF	; 255
     324:	61 e0       	ldi	r22, 0x01	; 1
     326:	89 ee       	ldi	r24, 0xE9	; 233
     328:	92 e0       	ldi	r25, 0x02	; 2
     32a:	42 d1       	rcall	.+644    	; 0x5b0 <_ZN11DigiPortRawC1Ehhh>
LCD display(PC, LCD_Type_24x2);
     32c:	2f e8       	ldi	r18, 0x8F	; 143
     32e:	45 e0       	ldi	r20, 0x05	; 5
     330:	62 e0       	ldi	r22, 0x02	; 2
     332:	8f ed       	ldi	r24, 0xDF	; 223
     334:	92 e0       	ldi	r25, 0x02	; 2
     336:	c2 d3       	rcall	.+1924   	; 0xabc <_ZN3LCDC1Eh10LCD_Type_th>
// timer
Timer16 timer(TC1, Blinker);
     338:	e1 2c       	mov	r14, r1
     33a:	f1 2c       	mov	r15, r1
     33c:	00 e0       	ldi	r16, 0x00	; 0
     33e:	10 e0       	ldi	r17, 0x00	; 0
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	4b e0       	ldi	r20, 0x0B	; 11
     346:	51 e0       	ldi	r21, 0x01	; 1
     348:	61 e0       	ldi	r22, 0x01	; 1
     34a:	8d ec       	ldi	r24, 0xCD	; 205
     34c:	92 e0       	ldi	r25, 0x02	; 2
     34e:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <_ZN7Timer16C1EhPFvvES1_S1_S1_>
class BinarySemaphor {
	private:
		uint8_t owner;
		
	public:
		BinarySemaphor () : owner(0) {};
     352:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <shared_resource_semaphor_1>
     356:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <shared_resource_semaphor_2>
		     \param [in]  m Steuert das Verhalten bei Vollaufen der Queue. 
			 
			 Im Modus NO_OVERWRITE lehnt die Queue weitere Schreibevorgaenge ab (der Aufruf 
			 scheitert), wenn die Queue voll ist. Im Modus ALLOW_OVERWRITE wird in diesem
			 Fall der aelteste Eintrag der Queue ueberschrieben. */
	    BoundedQueue (uint8_t m = NO_OVERWRITE) {read_pos = 0; write_pos = 0; count = 0; mode = m;};
     35a:	ed eb       	ldi	r30, 0xBD	; 189
     35c:	f2 e0       	ldi	r31, 0x02	; 2
     35e:	13 82       	std	Z+3, r1	; 0x03
     360:	12 82       	std	Z+2, r1	; 0x02
     362:	11 82       	std	Z+1, r1	; 0x01
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	80 83       	st	Z, r24
     368:	ef ea       	ldi	r30, 0xAF	; 175
     36a:	f2 e0       	ldi	r31, 0x02	; 2
     36c:	13 82       	std	Z+3, r1	; 0x03
     36e:	12 82       	std	Z+2, r1	; 0x02
     370:	11 82       	std	Z+1, r1	; 0x01
     372:	80 83       	st	Z, r24
	
	task[4].tid = task_insert(Key_Cntl, High);
	task[5].tid = task_insert(Viewer_1, Medium);
	//task[6].tid = task_insert(Viewer_2, High);
	kernel();
     374:	1f 91       	pop	r17
     376:	0f 91       	pop	r16
     378:	ff 90       	pop	r15
     37a:	ef 90       	pop	r14
     37c:	08 95       	ret

0000037e <_Z13Activ_Deactivh>:
		shared_resource_semaphor_1.release();
		yield();
	}
}

void Activ_Deactiv(uint8_t id) {
     37e:	cf 93       	push	r28
     380:	c8 2f       	mov	r28, r24
	if (is_active(id) == 0){		// wenn task deactive -> active
     382:	9b d4       	rcall	.+2358   	; 0xcba <_Z9is_activeh>
     384:	81 11       	cpse	r24, r1
     386:	03 c0       	rjmp	.+6      	; 0x38e <_Z13Activ_Deactivh+0x10>
		activate(id);
     388:	8c 2f       	mov	r24, r28
     38a:	73 d4       	rcall	.+2278   	; 0xc72 <_Z8activateh>
     38c:	02 c0       	rjmp	.+4      	; 0x392 <_Z13Activ_Deactivh+0x14>
	}
	else{
		deactivate(id);
     38e:	8c 2f       	mov	r24, r28
     390:	eb d4       	rcall	.+2518   	; 0xd68 <_Z10deactivateh>
     392:	cf 91       	pop	r28
	}
}
     394:	08 95       	ret

00000396 <_Z8Key_Cntlv>:
     396:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     398:	f8 94       	cli
		//return IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
	//};
	
	inline uint8_t read_raw(uint8_t mask=0xFF) {
		uint8_t ret_val;
		CRITICAL_SECTION {
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	88 23       	and	r24, r24
     39e:	b9 f0       	breq	.+46     	; 0x3ce <_Z8Key_Cntlv+0x38>
		 ret_val = IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
     3a0:	ed ee       	ldi	r30, 0xED	; 237
     3a2:	f2 e0       	ldi	r31, 0x02	; 2
     3a4:	82 81       	ldd	r24, Z+2	; 0x02
     3a6:	80 95       	com	r24
     3a8:	93 81       	ldd	r25, Z+3	; 0x03
     3aa:	9f 3f       	cpi	r25, 0xFF	; 255
     3ac:	31 f4       	brne	.+12     	; 0x3ba <_Z8Key_Cntlv+0x24>
     3ae:	e0 91 ed 02 	lds	r30, 0x02ED	; 0x8002ed <keys>
     3b2:	f0 91 ee 02 	lds	r31, 0x02EE	; 0x8002ee <keys+0x1>
     3b6:	90 81       	ld	r25, Z
     3b8:	06 c0       	rjmp	.+12     	; 0x3c6 <_Z8Key_Cntlv+0x30>
     3ba:	e0 91 ed 02 	lds	r30, 0x02ED	; 0x8002ed <keys>
     3be:	f0 91 ee 02 	lds	r31, 0x02EE	; 0x8002ee <keys+0x1>
     3c2:	90 81       	ld	r25, Z
     3c4:	90 95       	com	r25
     3c6:	c8 2f       	mov	r28, r24
     3c8:	c9 23       	and	r28, r25
		//return IN_MASK & mask & ((mode==SET_ACTIVE_HIGH) ? (*(base + IN_OFFSET)) : ~(*(base + IN_OFFSET)));
	//};
	
	inline uint8_t read_raw(uint8_t mask=0xFF) {
		uint8_t ret_val;
		CRITICAL_SECTION {
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	e7 cf       	rjmp	.-50     	; 0x39c <_Z8Key_Cntlv+0x6>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     3ce:	2f bf       	out	0x3f, r18	; 63

void Key_Cntl(){
	while (1) {
		key_in = keys.read_raw();
     3d0:	c0 93 ae 02 	sts	0x02AE, r28	; 0x8002ae <key_in>
		switch ((uint8_t)~(key_in)) {
     3d4:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <key_in>
     3d8:	80 95       	com	r24
     3da:	8f 3d       	cpi	r24, 0xDF	; 223
     3dc:	a9 f0       	breq	.+42     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     3de:	28 f4       	brcc	.+10     	; 0x3ea <_Z8Key_Cntlv+0x54>
     3e0:	8f 37       	cpi	r24, 0x7F	; 127
     3e2:	11 f1       	breq	.+68     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     3e4:	8f 3b       	cpi	r24, 0xBF	; 191
     3e6:	c1 f0       	breq	.+48     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     3e8:	26 c0       	rjmp	.+76     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     3ea:	8f 3e       	cpi	r24, 0xEF	; 239
     3ec:	31 f0       	breq	.+12     	; 0x3fa <_Z8Key_Cntlv+0x64>
     3ee:	8e 3f       	cpi	r24, 0xFE	; 254
     3f0:	11 f5       	brne	.+68     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			
			case 0b11111110:
			Activ_Deactiv(task[0].tid);
     3f2:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <task>
     3f6:	c3 df       	rcall	.-122    	; 0x37e <_Z13Activ_Deactivh>
			break;
     3f8:	1e c0       	rjmp	.+60     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			case 0b11110111:
			//Activ_Deactiv(task[3].tid);
			break;

			case 0b11101111:
			led_1.status = ON;
     3fa:	e3 ea       	ldi	r30, 0xA3	; 163
     3fc:	f2 e0       	ldi	r31, 0x02	; 2
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	80 83       	st	Z, r24
			led_1.request_delay = 1;
     402:	82 83       	std	Z+2, r24	; 0x02
			led_1.current_delay = led_1.request_delay;
     404:	81 83       	std	Z+1, r24	; 0x01
			break;
     406:	17 c0       	rjmp	.+46     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			
			case 0b11011111:
			led_1.status = ON;
     408:	e3 ea       	ldi	r30, 0xA3	; 163
     40a:	f2 e0       	ldi	r31, 0x02	; 2
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	80 83       	st	Z, r24
			led_1.request_delay = 10;
     410:	8a e0       	ldi	r24, 0x0A	; 10
     412:	82 83       	std	Z+2, r24	; 0x02
			led_1.current_delay = led_1.request_delay;
     414:	81 83       	std	Z+1, r24	; 0x01
			break;
     416:	0f c0       	rjmp	.+30     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			
			case 0b10111111:
			led_2.status = ON;
     418:	e0 ea       	ldi	r30, 0xA0	; 160
     41a:	f2 e0       	ldi	r31, 0x02	; 2
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	80 83       	st	Z, r24
			led_2.request_delay = 2;
     420:	82 e0       	ldi	r24, 0x02	; 2
     422:	82 83       	std	Z+2, r24	; 0x02
			led_2.current_delay = led_2.request_delay;
     424:	81 83       	std	Z+1, r24	; 0x01
			break;
     426:	07 c0       	rjmp	.+14     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			
			case 0b01111111:
			led_2.status = ON;
     428:	e0 ea       	ldi	r30, 0xA0	; 160
     42a:	f2 e0       	ldi	r31, 0x02	; 2
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	80 83       	st	Z, r24
			led_2.request_delay = 10;
     430:	8a e0       	ldi	r24, 0x0A	; 10
     432:	82 83       	std	Z+2, r24	; 0x02
			led_2.current_delay = led_2.request_delay;
			break;
		}
		yield();
     434:	81 83       	std	Z+1, r24	; 0x01
     436:	6c d4       	rcall	.+2264   	; 0xd10 <_Z5yieldv>
		deactivate(id);
	}
}

void Key_Cntl(){
	while (1) {
     438:	ae cf       	rjmp	.-164    	; 0x396 <_Z8Key_Cntlv>

0000043a <main>:
    /*! \brief Schalte die durch bits spezifizierten Bits des Ports aus.
		\param [in] bits Bitmuster in active-high Logik.  Default 0xFF. Bitpositionen, die
		            beim Port zur Eingabe konfiguriert sind, werden dabei ignoriert.
	*/
    inline void off (uint8_t bits=0xFF) { 
		if (mode==SET_ACTIVE_HIGH)
     43a:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <leds+0x3>
     43e:	8f 3f       	cpi	r24, 0xFF	; 255
     440:	39 f4       	brne	.+14     	; 0x450 <main+0x16>
			*(base + OUT_OFFSET) &= (uint8_t)(OUT_MASK & (uint8_t)(~bits));
     442:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <leds>
     446:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <leds+0x1>
     44a:	82 81       	ldd	r24, Z+2	; 0x02
     44c:	12 82       	std	Z+2, r1	; 0x02
     44e:	0a c0       	rjmp	.+20     	; 0x464 <main+0x2a>
		else
			*(base + OUT_OFFSET) |= (uint8_t)(OUT_MASK & bits);
     450:	a9 ee       	ldi	r26, 0xE9	; 233
     452:	b2 e0       	ldi	r27, 0x02	; 2
     454:	ed 91       	ld	r30, X+
     456:	fc 91       	ld	r31, X
     458:	11 97       	sbiw	r26, 0x01	; 1
     45a:	92 81       	ldd	r25, Z+2	; 0x02
     45c:	12 96       	adiw	r26, 0x02	; 2
     45e:	8c 91       	ld	r24, X
     460:	89 2b       	or	r24, r25
     462:	82 83       	std	Z+2, r24	; 0x02
	     wenn bei der Instanziierung entsprechende CBFs registriert wurden.  Der Wert
         fuer millisecs_CNT dient zum Setzen eines Startwerts fuer den Counter.
		 */
	inline void start(unsigned int millisecs_A, unsigned int millisecs_B=0, unsigned int millisecs_C=0,
	                  unsigned int millisecs_CNT=0, uint8_t rpt=255) {
		start_ms(millisecs_A, millisecs_B, millisecs_C, millisecs_CNT, rpt);		   
     464:	ee 24       	eor	r14, r14
     466:	ea 94       	dec	r14
     468:	00 e0       	ldi	r16, 0x00	; 0
     46a:	10 e0       	ldi	r17, 0x00	; 0
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	40 e0       	ldi	r20, 0x00	; 0
     472:	50 e0       	ldi	r21, 0x00	; 0
     474:	64 e6       	ldi	r22, 0x64	; 100
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	8d ec       	ldi	r24, 0xCD	; 205
     47a:	92 e0       	ldi	r25, 0x02	; 2
     47c:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <_ZN7Timer168start_msEjjjjh>
}

int main(void) {
	leds.off();
	timer.start(100); // in ms
	task[0].tid = task_insert(Task_1, Medium);
     480:	62 e0       	ldi	r22, 0x02	; 2
     482:	86 e4       	ldi	r24, 0x46	; 70
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	8a d3       	rcall	.+1812   	; 0xb9c <_Z11task_insertPFvvE8Priority>
     488:	c6 ea       	ldi	r28, 0xA6	; 166
     48a:	d2 e0       	ldi	r29, 0x02	; 2
     48c:	88 83       	st	Y, r24
	task[1].tid = task_insert(Task_2, Low);
	task[2].tid = task_insert(Task_3, Low);
	task[3].tid = task_insert(Task_4, Low);
	*/
	
	task[4].tid = task_insert(Key_Cntl, High);
     48e:	60 e0       	ldi	r22, 0x00	; 0
     490:	8b ec       	ldi	r24, 0xCB	; 203
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	83 d3       	rcall	.+1798   	; 0xb9c <_Z11task_insertPFvvE8Priority>
     496:	8c 83       	std	Y+4, r24	; 0x04
	task[5].tid = task_insert(Viewer_1, Medium);
     498:	62 e0       	ldi	r22, 0x02	; 2
     49a:	81 e6       	ldi	r24, 0x61	; 97
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	7e d3       	rcall	.+1788   	; 0xb9c <_Z11task_insertPFvvE8Priority>
     4a0:	8d 83       	std	Y+5, r24	; 0x05
	//task[6].tid = task_insert(Viewer_2, High);
	kernel();
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	1d d4       	rcall	.+2106   	; 0xce4 <_Z6kernel14SchedulingTypePFvhE>

000004aa <_GLOBAL__sub_I_keys>:
     4aa:	6f ef       	ldi	r22, 0xFF	; 255
     4ac:	7f ef       	ldi	r23, 0xFF	; 255
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	27 cf       	rjmp	.-434    	; 0x302 <_Z41__static_initialization_and_destruction_0ii>
     4b4:	08 95       	ret

000004b6 <_ZN14BinarySemaphor11wait_aquireEv>:
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	ec 01       	movw	r28, r24
     4be:	18 81       	ld	r17, Y
     4c0:	7b d4       	rcall	.+2294   	; 0xdb8 <_Z15current_task_idv>
     4c2:	18 17       	cp	r17, r24
     4c4:	81 f0       	breq	.+32     	; 0x4e6 <_ZN14BinarySemaphor11wait_aquireEv+0x30>
     4c6:	88 81       	ld	r24, Y
     4c8:	88 23       	and	r24, r24
     4ca:	21 f0       	breq	.+8      	; 0x4d4 <_ZN14BinarySemaphor11wait_aquireEv+0x1e>
     4cc:	75 d4       	rcall	.+2282   	; 0xdb8 <_Z15current_task_idv>
     4ce:	77 d4       	rcall	.+2286   	; 0xdbe <_Z8sem_waith>
     4d0:	1f d4       	rcall	.+2110   	; 0xd10 <_Z5yieldv>
     4d2:	f5 cf       	rjmp	.-22     	; 0x4be <_ZN14BinarySemaphor11wait_aquireEv+0x8>
     4d4:	1f b7       	in	r17, 0x3f	; 63
     4d6:	f8 94       	cli
     4d8:	88 81       	ld	r24, Y
     4da:	81 11       	cpse	r24, r1
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <_ZN14BinarySemaphor11wait_aquireEv+0x2c>
     4de:	6c d4       	rcall	.+2264   	; 0xdb8 <_Z15current_task_idv>
     4e0:	88 83       	st	Y, r24
     4e2:	1f bf       	out	0x3f, r17	; 63
    __asm__ volatile ("" ::: "memory");
     4e4:	ec cf       	rjmp	.-40     	; 0x4be <_ZN14BinarySemaphor11wait_aquireEv+0x8>
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	1f 91       	pop	r17
     4ec:	08 95       	ret

000004ee <_ZN14BinarySemaphor7releaseEv>:
     4ee:	0f 93       	push	r16
     4f0:	1f 93       	push	r17
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
     4f6:	ec 01       	movw	r28, r24
     4f8:	1f b7       	in	r17, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     4fa:	f8 94       	cli
     4fc:	08 81       	ld	r16, Y
     4fe:	5c d4       	rcall	.+2232   	; 0xdb8 <_Z15current_task_idv>
     500:	08 13       	cpse	r16, r24
     502:	03 c0       	rjmp	.+6      	; 0x50a <_ZN14BinarySemaphor7releaseEv+0x1c>
     504:	18 82       	st	Y, r1
     506:	c1 e0       	ldi	r28, 0x01	; 1
     508:	01 c0       	rjmp	.+2      	; 0x50c <_ZN14BinarySemaphor7releaseEv+0x1e>
     50a:	c0 e0       	ldi	r28, 0x00	; 0
     50c:	1f bf       	out	0x3f, r17	; 63
     50e:	00 d4       	rcall	.+2048   	; 0xd10 <_Z5yieldv>
     510:	8c 2f       	mov	r24, r28
     512:	df 91       	pop	r29
     514:	cf 91       	pop	r28
     516:	1f 91       	pop	r17
     518:	0f 91       	pop	r16
     51a:	08 95       	ret

0000051c <_ZN12BoundedQueue5clearEv>:
     51c:	fc 01       	movw	r30, r24
     51e:	8f b7       	in	r24, 0x3f	; 63
     520:	f8 94       	cli
     522:	13 82       	std	Z+3, r1	; 0x03
     524:	12 82       	std	Z+2, r1	; 0x02
     526:	11 82       	std	Z+1, r1	; 0x01
     528:	8f bf       	out	0x3f, r24	; 63
     52a:	08 95       	ret

0000052c <_ZN12BoundedQueue4readEv>:
     52c:	fc 01       	movw	r30, r24
     52e:	3f b7       	in	r19, 0x3f	; 63
     530:	f8 94       	cli
     532:	91 81       	ldd	r25, Z+1	; 0x01
     534:	91 11       	cpse	r25, r1
     536:	02 c0       	rjmp	.+4      	; 0x53c <_ZN12BoundedQueue4readEv+0x10>
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	0e c0       	rjmp	.+28     	; 0x558 <_ZN12BoundedQueue4readEv+0x2c>
     53c:	83 81       	ldd	r24, Z+3	; 0x03
     53e:	21 e0       	ldi	r18, 0x01	; 1
     540:	28 0f       	add	r18, r24
     542:	23 83       	std	Z+3, r18	; 0x03
     544:	df 01       	movw	r26, r30
     546:	a8 0f       	add	r26, r24
     548:	b1 1d       	adc	r27, r1
     54a:	14 96       	adiw	r26, 0x04	; 4
     54c:	8c 91       	ld	r24, X
     54e:	91 50       	subi	r25, 0x01	; 1
     550:	91 83       	std	Z+1, r25	; 0x01
     552:	2a 30       	cpi	r18, 0x0A	; 10
     554:	08 f0       	brcs	.+2      	; 0x558 <_ZN12BoundedQueue4readEv+0x2c>
     556:	13 82       	std	Z+3, r1	; 0x03
     558:	3f bf       	out	0x3f, r19	; 63
     55a:	08 95       	ret

0000055c <_ZN12BoundedQueue5writeEh>:
     55c:	fc 01       	movw	r30, r24
     55e:	2f b7       	in	r18, 0x3f	; 63
     560:	f8 94       	cli
     562:	91 81       	ldd	r25, Z+1	; 0x01
     564:	9a 30       	cpi	r25, 0x0A	; 10
     566:	a0 f0       	brcs	.+40     	; 0x590 <_ZN12BoundedQueue5writeEh+0x34>
     568:	80 81       	ld	r24, Z
     56a:	81 30       	cpi	r24, 0x01	; 1
     56c:	71 f0       	breq	.+28     	; 0x58a <_ZN12BoundedQueue5writeEh+0x2e>
     56e:	83 81       	ldd	r24, Z+3	; 0x03
     570:	8f 5f       	subi	r24, 0xFF	; 255
     572:	8a 30       	cpi	r24, 0x0A	; 10
     574:	10 f4       	brcc	.+4      	; 0x57a <_ZN12BoundedQueue5writeEh+0x1e>
     576:	83 83       	std	Z+3, r24	; 0x03
     578:	0b c0       	rjmp	.+22     	; 0x590 <_ZN12BoundedQueue5writeEh+0x34>
     57a:	13 82       	std	Z+3, r1	; 0x03
     57c:	8f ef       	ldi	r24, 0xFF	; 255
     57e:	89 0f       	add	r24, r25
     580:	81 83       	std	Z+1, r24	; 0x01
     582:	06 c0       	rjmp	.+12     	; 0x590 <_ZN12BoundedQueue5writeEh+0x34>
     584:	12 82       	std	Z+2, r1	; 0x02
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	01 c0       	rjmp	.+2      	; 0x58c <_ZN12BoundedQueue5writeEh+0x30>
     58a:	80 e0       	ldi	r24, 0x00	; 0
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     58c:	2f bf       	out	0x3f, r18	; 63
     58e:	08 95       	ret
     590:	82 81       	ldd	r24, Z+2	; 0x02
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	98 0f       	add	r25, r24
     596:	92 83       	std	Z+2, r25	; 0x02
     598:	df 01       	movw	r26, r30
     59a:	a8 0f       	add	r26, r24
     59c:	b1 1d       	adc	r27, r1
     59e:	14 96       	adiw	r26, 0x04	; 4
     5a0:	6c 93       	st	X, r22
     5a2:	81 81       	ldd	r24, Z+1	; 0x01
     5a4:	8f 5f       	subi	r24, 0xFF	; 255
     5a6:	81 83       	std	Z+1, r24	; 0x01
     5a8:	9a 30       	cpi	r25, 0x0A	; 10
     5aa:	60 f7       	brcc	.-40     	; 0x584 <_ZN12BoundedQueue5writeEh+0x28>
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	ee cf       	rjmp	.-36     	; 0x58c <_ZN12BoundedQueue5writeEh+0x30>

000005b0 <_ZN11DigiPortRawC1Ehhh>:
     5b0:	0f 93       	push	r16
     5b2:	1f 93       	push	r17
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
     5b8:	8c 01       	movw	r16, r24
     5ba:	86 2f       	mov	r24, r22
     5bc:	c4 2f       	mov	r28, r20
     5be:	d2 2f       	mov	r29, r18
     5c0:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <_Z22port_handle_to_addressh>
     5c4:	d8 01       	movw	r26, r16
     5c6:	11 96       	adiw	r26, 0x01	; 1
     5c8:	9c 93       	st	X, r25
     5ca:	8e 93       	st	-X, r24
     5cc:	00 97       	sbiw	r24, 0x00	; 0
     5ce:	69 f0       	breq	.+26     	; 0x5ea <_ZN11DigiPortRawC1Ehhh+0x3a>
     5d0:	13 96       	adiw	r26, 0x03	; 3
     5d2:	dc 93       	st	X, r29
     5d4:	13 97       	sbiw	r26, 0x03	; 3
     5d6:	12 96       	adiw	r26, 0x02	; 2
     5d8:	cc 93       	st	X, r28
     5da:	12 97       	sbiw	r26, 0x02	; 2
     5dc:	fc 01       	movw	r30, r24
     5de:	c1 83       	std	Z+1, r28	; 0x01
     5e0:	ed 91       	ld	r30, X+
     5e2:	fc 91       	ld	r31, X
     5e4:	cd 2b       	or	r28, r29
     5e6:	c0 95       	com	r28
     5e8:	c2 83       	std	Z+2, r28	; 0x02
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	08 95       	ret

000005f4 <__vector_9>:
     5f4:	1f 92       	push	r1
     5f6:	0f 92       	push	r0
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	0f 92       	push	r0
     5fc:	11 24       	eor	r1, r1
     5fe:	0b b6       	in	r0, 0x3b	; 59
     600:	0f 92       	push	r0
     602:	2f 93       	push	r18
     604:	3f 93       	push	r19
     606:	4f 93       	push	r20
     608:	5f 93       	push	r21
     60a:	6f 93       	push	r22
     60c:	7f 93       	push	r23
     60e:	8f 93       	push	r24
     610:	9f 93       	push	r25
     612:	af 93       	push	r26
     614:	bf 93       	push	r27
     616:	ef 93       	push	r30
     618:	ff 93       	push	r31
     61a:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <dp_obj>
     61e:	90 91 f2 02 	lds	r25, 0x02F2	; 0x8002f2 <dp_obj+0x1>
     622:	00 97       	sbiw	r24, 0x00	; 0
     624:	39 f0       	breq	.+14     	; 0x634 <__vector_9+0x40>
     626:	dc 01       	movw	r26, r24
     628:	ed 91       	ld	r30, X+
     62a:	fc 91       	ld	r31, X
     62c:	01 90       	ld	r0, Z+
     62e:	f0 81       	ld	r31, Z
     630:	e0 2d       	mov	r30, r0
     632:	19 95       	eicall
     634:	ff 91       	pop	r31
     636:	ef 91       	pop	r30
     638:	bf 91       	pop	r27
     63a:	af 91       	pop	r26
     63c:	9f 91       	pop	r25
     63e:	8f 91       	pop	r24
     640:	7f 91       	pop	r23
     642:	6f 91       	pop	r22
     644:	5f 91       	pop	r21
     646:	4f 91       	pop	r20
     648:	3f 91       	pop	r19
     64a:	2f 91       	pop	r18
     64c:	0f 90       	pop	r0
     64e:	0b be       	out	0x3b, r0	; 59
     650:	0f 90       	pop	r0
     652:	0f be       	out	0x3f, r0	; 63
     654:	0f 90       	pop	r0
     656:	1f 90       	pop	r1
     658:	18 95       	reti

0000065a <__vector_10>:
     65a:	1f 92       	push	r1
     65c:	0f 92       	push	r0
     65e:	0f b6       	in	r0, 0x3f	; 63
     660:	0f 92       	push	r0
     662:	11 24       	eor	r1, r1
     664:	0b b6       	in	r0, 0x3b	; 59
     666:	0f 92       	push	r0
     668:	2f 93       	push	r18
     66a:	3f 93       	push	r19
     66c:	4f 93       	push	r20
     66e:	5f 93       	push	r21
     670:	6f 93       	push	r22
     672:	7f 93       	push	r23
     674:	8f 93       	push	r24
     676:	9f 93       	push	r25
     678:	af 93       	push	r26
     67a:	bf 93       	push	r27
     67c:	ef 93       	push	r30
     67e:	ff 93       	push	r31
     680:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <dp_obj+0x4>
     684:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <dp_obj+0x5>
     688:	00 97       	sbiw	r24, 0x00	; 0
     68a:	39 f0       	breq	.+14     	; 0x69a <__vector_10+0x40>
     68c:	dc 01       	movw	r26, r24
     68e:	ed 91       	ld	r30, X+
     690:	fc 91       	ld	r31, X
     692:	01 90       	ld	r0, Z+
     694:	f0 81       	ld	r31, Z
     696:	e0 2d       	mov	r30, r0
     698:	19 95       	eicall
     69a:	ff 91       	pop	r31
     69c:	ef 91       	pop	r30
     69e:	bf 91       	pop	r27
     6a0:	af 91       	pop	r26
     6a2:	9f 91       	pop	r25
     6a4:	8f 91       	pop	r24
     6a6:	7f 91       	pop	r23
     6a8:	6f 91       	pop	r22
     6aa:	5f 91       	pop	r21
     6ac:	4f 91       	pop	r20
     6ae:	3f 91       	pop	r19
     6b0:	2f 91       	pop	r18
     6b2:	0f 90       	pop	r0
     6b4:	0b be       	out	0x3b, r0	; 59
     6b6:	0f 90       	pop	r0
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	0f 90       	pop	r0
     6bc:	1f 90       	pop	r1
     6be:	18 95       	reti

000006c0 <__vector_11>:
     6c0:	1f 92       	push	r1
     6c2:	0f 92       	push	r0
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	0f 92       	push	r0
     6c8:	11 24       	eor	r1, r1
     6ca:	0b b6       	in	r0, 0x3b	; 59
     6cc:	0f 92       	push	r0
     6ce:	2f 93       	push	r18
     6d0:	3f 93       	push	r19
     6d2:	4f 93       	push	r20
     6d4:	5f 93       	push	r21
     6d6:	6f 93       	push	r22
     6d8:	7f 93       	push	r23
     6da:	8f 93       	push	r24
     6dc:	9f 93       	push	r25
     6de:	af 93       	push	r26
     6e0:	bf 93       	push	r27
     6e2:	ef 93       	push	r30
     6e4:	ff 93       	push	r31
     6e6:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <dp_obj+0x2>
     6ea:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <dp_obj+0x3>
     6ee:	00 97       	sbiw	r24, 0x00	; 0
     6f0:	39 f0       	breq	.+14     	; 0x700 <__vector_11+0x40>
     6f2:	dc 01       	movw	r26, r24
     6f4:	ed 91       	ld	r30, X+
     6f6:	fc 91       	ld	r31, X
     6f8:	01 90       	ld	r0, Z+
     6fa:	f0 81       	ld	r31, Z
     6fc:	e0 2d       	mov	r30, r0
     6fe:	19 95       	eicall
     700:	ff 91       	pop	r31
     702:	ef 91       	pop	r30
     704:	bf 91       	pop	r27
     706:	af 91       	pop	r26
     708:	9f 91       	pop	r25
     70a:	8f 91       	pop	r24
     70c:	7f 91       	pop	r23
     70e:	6f 91       	pop	r22
     710:	5f 91       	pop	r21
     712:	4f 91       	pop	r20
     714:	3f 91       	pop	r19
     716:	2f 91       	pop	r18
     718:	0f 90       	pop	r0
     71a:	0b be       	out	0x3b, r0	; 59
     71c:	0f 90       	pop	r0
     71e:	0f be       	out	0x3f, r0	; 63
     720:	0f 90       	pop	r0
     722:	1f 90       	pop	r1
     724:	18 95       	reti

00000726 <_ZN3LCD10wait_readyEv>:
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	fc 01       	movw	r30, r24
     72c:	6f b7       	in	r22, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     72e:	f8 94       	cli
     730:	a2 81       	ldd	r26, Z+2	; 0x02
     732:	b3 81       	ldd	r27, Z+3	; 0x03
     734:	1c 92       	st	X, r1
     736:	a2 81       	ldd	r26, Z+2	; 0x02
     738:	b3 81       	ldd	r27, Z+3	; 0x03
     73a:	11 97       	sbiw	r26, 0x01	; 1
     73c:	80 ef       	ldi	r24, 0xF0	; 240
     73e:	8c 93       	st	X, r24
     740:	a2 81       	ldd	r26, Z+2	; 0x02
     742:	b3 81       	ldd	r27, Z+3	; 0x03
     744:	8c 91       	ld	r24, X
     746:	80 62       	ori	r24, 0x20	; 32
     748:	8c 93       	st	X, r24
     74a:	81 e0       	ldi	r24, 0x01	; 1
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a2 81       	ldd	r26, Z+2	; 0x02
     750:	b3 81       	ldd	r27, Z+3	; 0x03
     752:	4c 91       	ld	r20, X
     754:	9c 01       	movw	r18, r24
     756:	01 84       	ldd	r0, Z+9	; 0x09
     758:	02 c0       	rjmp	.+4      	; 0x75e <_ZN3LCD10wait_readyEv+0x38>
     75a:	22 0f       	add	r18, r18
     75c:	33 1f       	adc	r19, r19
     75e:	0a 94       	dec	r0
     760:	e2 f7       	brpl	.-8      	; 0x75a <_ZN3LCD10wait_readyEv+0x34>
     762:	24 27       	eor	r18, r20
     764:	2c 93       	st	X, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     766:	25 e0       	ldi	r18, 0x05	; 5
     768:	2a 95       	dec	r18
     76a:	f1 f7       	brne	.-4      	; 0x768 <_ZN3LCD10wait_readyEv+0x42>
     76c:	00 00       	nop
     76e:	a2 81       	ldd	r26, Z+2	; 0x02
     770:	b3 81       	ldd	r27, Z+3	; 0x03
     772:	ed 01       	movw	r28, r26
     774:	22 97       	sbiw	r28, 0x02	; 2
     776:	28 81       	ld	r18, Y
     778:	22 95       	swap	r18
     77a:	20 7f       	andi	r18, 0xF0	; 240
     77c:	3c 91       	ld	r19, X
     77e:	ac 01       	movw	r20, r24
     780:	01 84       	ldd	r0, Z+9	; 0x09
     782:	02 c0       	rjmp	.+4      	; 0x788 <_ZN3LCD10wait_readyEv+0x62>
     784:	44 0f       	add	r20, r20
     786:	55 1f       	adc	r21, r21
     788:	0a 94       	dec	r0
     78a:	e2 f7       	brpl	.-8      	; 0x784 <_ZN3LCD10wait_readyEv+0x5e>
     78c:	43 27       	eor	r20, r19
     78e:	4c 93       	st	X, r20
     790:	3a e0       	ldi	r19, 0x0A	; 10
     792:	3a 95       	dec	r19
     794:	f1 f7       	brne	.-4      	; 0x792 <_ZN3LCD10wait_readyEv+0x6c>
     796:	00 c0       	rjmp	.+0      	; 0x798 <_ZN3LCD10wait_readyEv+0x72>
     798:	a2 81       	ldd	r26, Z+2	; 0x02
     79a:	b3 81       	ldd	r27, Z+3	; 0x03
     79c:	3c 91       	ld	r19, X
     79e:	ac 01       	movw	r20, r24
     7a0:	01 84       	ldd	r0, Z+9	; 0x09
     7a2:	02 c0       	rjmp	.+4      	; 0x7a8 <_ZN3LCD10wait_readyEv+0x82>
     7a4:	44 0f       	add	r20, r20
     7a6:	55 1f       	adc	r21, r21
     7a8:	0a 94       	dec	r0
     7aa:	e2 f7       	brpl	.-8      	; 0x7a4 <_ZN3LCD10wait_readyEv+0x7e>
     7ac:	43 27       	eor	r20, r19
     7ae:	4c 93       	st	X, r20
     7b0:	35 e0       	ldi	r19, 0x05	; 5
     7b2:	3a 95       	dec	r19
     7b4:	f1 f7       	brne	.-4      	; 0x7b2 <_ZN3LCD10wait_readyEv+0x8c>
     7b6:	00 00       	nop
     7b8:	a2 81       	ldd	r26, Z+2	; 0x02
     7ba:	b3 81       	ldd	r27, Z+3	; 0x03
     7bc:	ed 01       	movw	r28, r26
     7be:	22 97       	sbiw	r28, 0x02	; 2
     7c0:	38 81       	ld	r19, Y
     7c2:	3c 91       	ld	r19, X
     7c4:	ac 01       	movw	r20, r24
     7c6:	01 84       	ldd	r0, Z+9	; 0x09
     7c8:	02 c0       	rjmp	.+4      	; 0x7ce <_ZN3LCD10wait_readyEv+0xa8>
     7ca:	44 0f       	add	r20, r20
     7cc:	55 1f       	adc	r21, r21
     7ce:	0a 94       	dec	r0
     7d0:	e2 f7       	brpl	.-8      	; 0x7ca <_ZN3LCD10wait_readyEv+0xa4>
     7d2:	43 27       	eor	r20, r19
     7d4:	4c 93       	st	X, r20
     7d6:	22 23       	and	r18, r18
     7d8:	0c f4       	brge	.+2      	; 0x7dc <_ZN3LCD10wait_readyEv+0xb6>
     7da:	b9 cf       	rjmp	.-142    	; 0x74e <_ZN3LCD10wait_readyEv+0x28>
     7dc:	a2 81       	ldd	r26, Z+2	; 0x02
     7de:	b3 81       	ldd	r27, Z+3	; 0x03
     7e0:	8c 91       	ld	r24, X
     7e2:	8f 7d       	andi	r24, 0xDF	; 223
     7e4:	8c 93       	st	X, r24
     7e6:	02 80       	ldd	r0, Z+2	; 0x02
     7e8:	f3 81       	ldd	r31, Z+3	; 0x03
     7ea:	e0 2d       	mov	r30, r0
     7ec:	31 97       	sbiw	r30, 0x01	; 1
     7ee:	8f ef       	ldi	r24, 0xFF	; 255
     7f0:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     7f2:	6f bf       	out	0x3f, r22	; 63
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <_ZN3LCD6enableEv>:
     7fa:	fc 01       	movw	r30, r24
     7fc:	4f b7       	in	r20, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     7fe:	f8 94       	cli
     800:	a2 81       	ldd	r26, Z+2	; 0x02
     802:	b3 81       	ldd	r27, Z+3	; 0x03
     804:	5c 91       	ld	r21, X
     806:	21 e0       	ldi	r18, 0x01	; 1
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	c9 01       	movw	r24, r18
     80c:	01 84       	ldd	r0, Z+9	; 0x09
     80e:	02 c0       	rjmp	.+4      	; 0x814 <_ZN3LCD6enableEv+0x1a>
     810:	88 0f       	add	r24, r24
     812:	99 1f       	adc	r25, r25
     814:	0a 94       	dec	r0
     816:	e2 f7       	brpl	.-8      	; 0x810 <_ZN3LCD6enableEv+0x16>
     818:	85 27       	eor	r24, r21
     81a:	8c 93       	st	X, r24
     81c:	85 e0       	ldi	r24, 0x05	; 5
     81e:	8a 95       	dec	r24
     820:	f1 f7       	brne	.-4      	; 0x81e <_ZN3LCD6enableEv+0x24>
     822:	00 00       	nop
     824:	a2 81       	ldd	r26, Z+2	; 0x02
     826:	b3 81       	ldd	r27, Z+3	; 0x03
     828:	8c 91       	ld	r24, X
     82a:	01 84       	ldd	r0, Z+9	; 0x09
     82c:	02 c0       	rjmp	.+4      	; 0x832 <_ZN3LCD6enableEv+0x38>
     82e:	22 0f       	add	r18, r18
     830:	33 1f       	adc	r19, r19
     832:	0a 94       	dec	r0
     834:	e2 f7       	brpl	.-8      	; 0x82e <_ZN3LCD6enableEv+0x34>
     836:	28 27       	eor	r18, r24
     838:	2c 93       	st	X, r18
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     83a:	4f bf       	out	0x3f, r20	; 63
    __asm__ volatile ("" ::: "memory");
     83c:	08 95       	ret

0000083e <_ZN3LCD7commandEh>:
     83e:	ef 92       	push	r14
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ec 01       	movw	r28, r24
     84c:	06 2f       	mov	r16, r22
     84e:	8c 81       	ldd	r24, Y+4	; 0x04
     850:	89 30       	cpi	r24, 0x09	; 9
     852:	11 f0       	breq	.+4      	; 0x858 <_ZN3LCD7commandEh+0x1a>
     854:	ce 01       	movw	r24, r28
     856:	67 df       	rcall	.-306    	; 0x726 <_ZN3LCD10wait_readyEv>
     858:	1f b7       	in	r17, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     85a:	f8 94       	cli
     85c:	e0 2e       	mov	r14, r16
     85e:	f1 2c       	mov	r15, r1
     860:	f5 94       	asr	r15
     862:	e7 94       	ror	r14
     864:	f5 94       	asr	r15
     866:	e7 94       	ror	r14
     868:	f5 94       	asr	r15
     86a:	e7 94       	ror	r14
     86c:	f5 94       	asr	r15
     86e:	e7 94       	ror	r14
     870:	ea 81       	ldd	r30, Y+2	; 0x02
     872:	fb 81       	ldd	r31, Y+3	; 0x03
     874:	e0 82       	st	Z, r14
     876:	ce 01       	movw	r24, r28
     878:	c0 df       	rcall	.-128    	; 0x7fa <_ZN3LCD6enableEv>
     87a:	0f 70       	andi	r16, 0x0F	; 15
     87c:	ea 81       	ldd	r30, Y+2	; 0x02
     87e:	fb 81       	ldd	r31, Y+3	; 0x03
     880:	00 83       	st	Z, r16
     882:	ce 01       	movw	r24, r28
     884:	ba df       	rcall	.-140    	; 0x7fa <_ZN3LCD6enableEv>
     886:	ea 81       	ldd	r30, Y+2	; 0x02
     888:	fb 81       	ldd	r31, Y+3	; 0x03
     88a:	10 82       	st	Z, r1
     88c:	8c 81       	ldd	r24, Y+4	; 0x04
     88e:	89 30       	cpi	r24, 0x09	; 9
     890:	31 f5       	brne	.+76     	; 0x8de <_ZN3LCD7commandEh+0xa0>
     892:	87 ec       	ldi	r24, 0xC7	; 199
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	01 97       	sbiw	r24, 0x01	; 1
     898:	f1 f7       	brne	.-4      	; 0x896 <_ZN3LCD7commandEh+0x58>
     89a:	00 c0       	rjmp	.+0      	; 0x89c <_ZN3LCD7commandEh+0x5e>
     89c:	00 00       	nop
     89e:	1f c0       	rjmp	.+62     	; 0x8de <_ZN3LCD7commandEh+0xa0>
     8a0:	19 85       	ldd	r17, Y+9	; 0x09
     8a2:	14 30       	cpi	r17, 0x04	; 4
     8a4:	11 f0       	breq	.+4      	; 0x8aa <_ZN3LCD7commandEh+0x6c>
     8a6:	84 e0       	ldi	r24, 0x04	; 4
     8a8:	01 c0       	rjmp	.+2      	; 0x8ac <_ZN3LCD7commandEh+0x6e>
     8aa:	87 e0       	ldi	r24, 0x07	; 7
     8ac:	89 87       	std	Y+9, r24	; 0x09
     8ae:	ff b6       	in	r15, 0x3f	; 63
     8b0:	f8 94       	cli
     8b2:	ea 81       	ldd	r30, Y+2	; 0x02
     8b4:	fb 81       	ldd	r31, Y+3	; 0x03
     8b6:	e0 82       	st	Z, r14
     8b8:	ce 01       	movw	r24, r28
     8ba:	9f df       	rcall	.-194    	; 0x7fa <_ZN3LCD6enableEv>
     8bc:	ea 81       	ldd	r30, Y+2	; 0x02
     8be:	fb 81       	ldd	r31, Y+3	; 0x03
     8c0:	00 83       	st	Z, r16
     8c2:	ce 01       	movw	r24, r28
     8c4:	9a df       	rcall	.-204    	; 0x7fa <_ZN3LCD6enableEv>
     8c6:	ea 81       	ldd	r30, Y+2	; 0x02
     8c8:	fb 81       	ldd	r31, Y+3	; 0x03
     8ca:	10 82       	st	Z, r1
     8cc:	19 87       	std	Y+9, r17	; 0x09
     8ce:	87 ec       	ldi	r24, 0xC7	; 199
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	f1 f7       	brne	.-4      	; 0x8d2 <_ZN3LCD7commandEh+0x94>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <_ZN3LCD7commandEh+0x9a>
     8d8:	00 00       	nop
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     8da:	ff be       	out	0x3f, r15	; 63
     8dc:	04 c0       	rjmp	.+8      	; 0x8e6 <_ZN3LCD7commandEh+0xa8>
     8de:	1f bf       	out	0x3f, r17	; 63
     8e0:	8c 81       	ldd	r24, Y+4	; 0x04
     8e2:	89 30       	cpi	r24, 0x09	; 9
     8e4:	e9 f2       	breq	.-70     	; 0x8a0 <_ZN3LCD7commandEh+0x62>
     8e6:	df 91       	pop	r29
     8e8:	cf 91       	pop	r28
     8ea:	1f 91       	pop	r17
     8ec:	0f 91       	pop	r16
     8ee:	ff 90       	pop	r15
     8f0:	ef 90       	pop	r14
     8f2:	08 95       	ret

000008f4 <_ZN3LCD7set_posEhh>:
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	fc 01       	movw	r30, r24
     8fa:	a5 81       	ldd	r26, Z+5	; 0x05
     8fc:	b6 81       	ldd	r27, Z+6	; 0x06
     8fe:	8c 91       	ld	r24, X
     900:	68 17       	cp	r22, r24
     902:	f0 f4       	brcc	.+60     	; 0x940 <_ZN3LCD7set_posEhh+0x4c>
     904:	11 96       	adiw	r26, 0x01	; 1
     906:	8c 91       	ld	r24, X
     908:	11 97       	sbiw	r26, 0x01	; 1
     90a:	48 17       	cp	r20, r24
     90c:	d8 f4       	brcc	.+54     	; 0x944 <_ZN3LCD7set_posEhh+0x50>
     90e:	40 87       	std	Z+8, r20	; 0x08
     910:	67 83       	std	Z+7, r22	; 0x07
     912:	ed 01       	movw	r28, r26
     914:	c6 0f       	add	r28, r22
     916:	d1 1d       	adc	r29, r1
     918:	8a 81       	ldd	r24, Y+2	; 0x02
     91a:	48 0f       	add	r20, r24
     91c:	84 81       	ldd	r24, Z+4	; 0x04
     91e:	89 30       	cpi	r24, 0x09	; 9
     920:	39 f4       	brne	.+14     	; 0x930 <_ZN3LCD7set_posEhh+0x3c>
     922:	8c 91       	ld	r24, X
     924:	86 95       	lsr	r24
     926:	68 17       	cp	r22, r24
     928:	18 f0       	brcs	.+6      	; 0x930 <_ZN3LCD7set_posEhh+0x3c>
     92a:	87 e0       	ldi	r24, 0x07	; 7
     92c:	81 87       	std	Z+9, r24	; 0x09
     92e:	02 c0       	rjmp	.+4      	; 0x934 <_ZN3LCD7set_posEhh+0x40>
     930:	84 e0       	ldi	r24, 0x04	; 4
     932:	81 87       	std	Z+9, r24	; 0x09
     934:	cf 01       	movw	r24, r30
     936:	64 2f       	mov	r22, r20
     938:	60 68       	ori	r22, 0x80	; 128
     93a:	81 df       	rcall	.-254    	; 0x83e <_ZN3LCD7commandEh>
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	03 c0       	rjmp	.+6      	; 0x946 <_ZN3LCD7set_posEhh+0x52>
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	01 c0       	rjmp	.+2      	; 0x946 <_ZN3LCD7set_posEhh+0x52>
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	08 95       	ret

0000094c <_ZN3LCD14advance_cursorEv>:
     94c:	fc 01       	movw	r30, r24
     94e:	90 85       	ldd	r25, Z+8	; 0x08
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	89 0f       	add	r24, r25
     954:	80 87       	std	Z+8, r24	; 0x08
     956:	a5 81       	ldd	r26, Z+5	; 0x05
     958:	b6 81       	ldd	r27, Z+6	; 0x06
     95a:	11 96       	adiw	r26, 0x01	; 1
     95c:	2c 91       	ld	r18, X
     95e:	11 97       	sbiw	r26, 0x01	; 1
     960:	82 17       	cp	r24, r18
     962:	88 f0       	brcs	.+34     	; 0x986 <_ZN3LCD14advance_cursorEv+0x3a>
     964:	81 81       	ldd	r24, Z+1	; 0x01
     966:	88 23       	and	r24, r24
     968:	49 f0       	breq	.+18     	; 0x97c <_ZN3LCD14advance_cursorEv+0x30>
     96a:	10 86       	std	Z+8, r1	; 0x08
     96c:	87 81       	ldd	r24, Z+7	; 0x07
     96e:	8f 5f       	subi	r24, 0xFF	; 255
     970:	87 83       	std	Z+7, r24	; 0x07
     972:	9c 91       	ld	r25, X
     974:	89 17       	cp	r24, r25
     976:	18 f0       	brcs	.+6      	; 0x97e <_ZN3LCD14advance_cursorEv+0x32>
     978:	17 82       	std	Z+7, r1	; 0x07
     97a:	01 c0       	rjmp	.+2      	; 0x97e <_ZN3LCD14advance_cursorEv+0x32>
     97c:	90 87       	std	Z+8, r25	; 0x08
     97e:	40 85       	ldd	r20, Z+8	; 0x08
     980:	67 81       	ldd	r22, Z+7	; 0x07
     982:	cf 01       	movw	r24, r30
     984:	b7 cf       	rjmp	.-146    	; 0x8f4 <_ZN3LCD7set_posEhh>
     986:	08 95       	ret

00000988 <_ZN3LCD4initEh>:
     988:	1f 93       	push	r17
     98a:	cf 93       	push	r28
     98c:	df 93       	push	r29
     98e:	ec 01       	movw	r28, r24
     990:	16 2f       	mov	r17, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     992:	2f ef       	ldi	r18, 0xFF	; 255
     994:	81 ee       	ldi	r24, 0xE1	; 225
     996:	94 e0       	ldi	r25, 0x04	; 4
     998:	21 50       	subi	r18, 0x01	; 1
     99a:	80 40       	sbci	r24, 0x00	; 0
     99c:	90 40       	sbci	r25, 0x00	; 0
     99e:	e1 f7       	brne	.-8      	; 0x998 <_ZN3LCD4initEh+0x10>
     9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <_ZN3LCD4initEh+0x1a>
     9a2:	00 00       	nop
     9a4:	ea 81       	ldd	r30, Y+2	; 0x02
     9a6:	fb 81       	ldd	r31, Y+3	; 0x03
     9a8:	83 e0       	ldi	r24, 0x03	; 3
     9aa:	80 83       	st	Z, r24
     9ac:	ce 01       	movw	r24, r28
     9ae:	25 df       	rcall	.-438    	; 0x7fa <_ZN3LCD6enableEv>
     9b0:	8f e1       	ldi	r24, 0x1F	; 31
     9b2:	9e e4       	ldi	r25, 0x4E	; 78
     9b4:	01 97       	sbiw	r24, 0x01	; 1
     9b6:	f1 f7       	brne	.-4      	; 0x9b4 <_ZN3LCD4initEh+0x2c>
     9b8:	00 c0       	rjmp	.+0      	; 0x9ba <_ZN3LCD4initEh+0x32>
     9ba:	00 00       	nop
     9bc:	ce 01       	movw	r24, r28
     9be:	1d df       	rcall	.-454    	; 0x7fa <_ZN3LCD6enableEv>
     9c0:	8f e1       	ldi	r24, 0x1F	; 31
     9c2:	9e e4       	ldi	r25, 0x4E	; 78
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	f1 f7       	brne	.-4      	; 0x9c4 <_ZN3LCD4initEh+0x3c>
     9c8:	00 c0       	rjmp	.+0      	; 0x9ca <_ZN3LCD4initEh+0x42>
     9ca:	00 00       	nop
     9cc:	ce 01       	movw	r24, r28
     9ce:	15 df       	rcall	.-470    	; 0x7fa <_ZN3LCD6enableEv>
     9d0:	8f e1       	ldi	r24, 0x1F	; 31
     9d2:	9e e4       	ldi	r25, 0x4E	; 78
     9d4:	01 97       	sbiw	r24, 0x01	; 1
     9d6:	f1 f7       	brne	.-4      	; 0x9d4 <_ZN3LCD4initEh+0x4c>
     9d8:	00 c0       	rjmp	.+0      	; 0x9da <_ZN3LCD4initEh+0x52>
     9da:	00 00       	nop
     9dc:	ea 81       	ldd	r30, Y+2	; 0x02
     9de:	fb 81       	ldd	r31, Y+3	; 0x03
     9e0:	82 e0       	ldi	r24, 0x02	; 2
     9e2:	80 83       	st	Z, r24
     9e4:	ce 01       	movw	r24, r28
     9e6:	09 df       	rcall	.-494    	; 0x7fa <_ZN3LCD6enableEv>
     9e8:	8f e1       	ldi	r24, 0x1F	; 31
     9ea:	9e e4       	ldi	r25, 0x4E	; 78
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <_ZN3LCD4initEh+0x64>
     9f0:	00 c0       	rjmp	.+0      	; 0x9f2 <_ZN3LCD4initEh+0x6a>
     9f2:	00 00       	nop
     9f4:	61 2f       	mov	r22, r17
     9f6:	ce 01       	movw	r24, r28
     9f8:	22 df       	rcall	.-444    	; 0x83e <_ZN3LCD7commandEh>
     9fa:	ed 81       	ldd	r30, Y+5	; 0x05
     9fc:	fe 81       	ldd	r31, Y+6	; 0x06
     9fe:	80 81       	ld	r24, Z
     a00:	81 30       	cpi	r24, 0x01	; 1
     a02:	21 f4       	brne	.+8      	; 0xa0c <_ZN3LCD4initEh+0x84>
     a04:	60 e2       	ldi	r22, 0x20	; 32
     a06:	ce 01       	movw	r24, r28
     a08:	1a df       	rcall	.-460    	; 0x83e <_ZN3LCD7commandEh>
     a0a:	03 c0       	rjmp	.+6      	; 0xa12 <_ZN3LCD4initEh+0x8a>
     a0c:	68 e2       	ldi	r22, 0x28	; 40
     a0e:	ce 01       	movw	r24, r28
     a10:	16 df       	rcall	.-468    	; 0x83e <_ZN3LCD7commandEh>
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	ce 01       	movw	r24, r28
     a16:	13 df       	rcall	.-474    	; 0x83e <_ZN3LCD7commandEh>
     a18:	8c 81       	ldd	r24, Y+4	; 0x04
     a1a:	89 30       	cpi	r24, 0x09	; 9
     a1c:	31 f4       	brne	.+12     	; 0xa2a <_ZN3LCD4initEh+0xa2>
     a1e:	8f e1       	ldi	r24, 0x1F	; 31
     a20:	9e e4       	ldi	r25, 0x4E	; 78
     a22:	01 97       	sbiw	r24, 0x01	; 1
     a24:	f1 f7       	brne	.-4      	; 0xa22 <_ZN3LCD4initEh+0x9a>
     a26:	00 c0       	rjmp	.+0      	; 0xa28 <_ZN3LCD4initEh+0xa0>
     a28:	00 00       	nop
     a2a:	66 e0       	ldi	r22, 0x06	; 6
     a2c:	ce 01       	movw	r24, r28
     a2e:	07 df       	rcall	.-498    	; 0x83e <_ZN3LCD7commandEh>
     a30:	8c 81       	ldd	r24, Y+4	; 0x04
     a32:	89 30       	cpi	r24, 0x09	; 9
     a34:	09 f0       	breq	.+2      	; 0xa38 <_ZN3LCD4initEh+0xb0>
     a36:	3e c0       	rjmp	.+124    	; 0xab4 <_ZN3LCD4initEh+0x12c>
     a38:	87 e0       	ldi	r24, 0x07	; 7
     a3a:	89 87       	std	Y+9, r24	; 0x09
     a3c:	ea 81       	ldd	r30, Y+2	; 0x02
     a3e:	fb 81       	ldd	r31, Y+3	; 0x03
     a40:	83 e0       	ldi	r24, 0x03	; 3
     a42:	80 83       	st	Z, r24
     a44:	ce 01       	movw	r24, r28
     a46:	d9 de       	rcall	.-590    	; 0x7fa <_ZN3LCD6enableEv>
     a48:	8f e1       	ldi	r24, 0x1F	; 31
     a4a:	9e e4       	ldi	r25, 0x4E	; 78
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	f1 f7       	brne	.-4      	; 0xa4c <_ZN3LCD4initEh+0xc4>
     a50:	00 c0       	rjmp	.+0      	; 0xa52 <_ZN3LCD4initEh+0xca>
     a52:	00 00       	nop
     a54:	ce 01       	movw	r24, r28
     a56:	d1 de       	rcall	.-606    	; 0x7fa <_ZN3LCD6enableEv>
     a58:	8f e1       	ldi	r24, 0x1F	; 31
     a5a:	9e e4       	ldi	r25, 0x4E	; 78
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	f1 f7       	brne	.-4      	; 0xa5c <_ZN3LCD4initEh+0xd4>
     a60:	00 c0       	rjmp	.+0      	; 0xa62 <_ZN3LCD4initEh+0xda>
     a62:	00 00       	nop
     a64:	ce 01       	movw	r24, r28
     a66:	c9 de       	rcall	.-622    	; 0x7fa <_ZN3LCD6enableEv>
     a68:	8f e1       	ldi	r24, 0x1F	; 31
     a6a:	9e e4       	ldi	r25, 0x4E	; 78
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	f1 f7       	brne	.-4      	; 0xa6c <_ZN3LCD4initEh+0xe4>
     a70:	00 c0       	rjmp	.+0      	; 0xa72 <_ZN3LCD4initEh+0xea>
     a72:	00 00       	nop
     a74:	ea 81       	ldd	r30, Y+2	; 0x02
     a76:	fb 81       	ldd	r31, Y+3	; 0x03
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	80 83       	st	Z, r24
     a7c:	ce 01       	movw	r24, r28
     a7e:	bd de       	rcall	.-646    	; 0x7fa <_ZN3LCD6enableEv>
     a80:	8f e1       	ldi	r24, 0x1F	; 31
     a82:	9e e4       	ldi	r25, 0x4E	; 78
     a84:	01 97       	sbiw	r24, 0x01	; 1
     a86:	f1 f7       	brne	.-4      	; 0xa84 <_ZN3LCD4initEh+0xfc>
     a88:	00 c0       	rjmp	.+0      	; 0xa8a <_ZN3LCD4initEh+0x102>
     a8a:	00 00       	nop
     a8c:	61 2f       	mov	r22, r17
     a8e:	ce 01       	movw	r24, r28
     a90:	d6 de       	rcall	.-596    	; 0x83e <_ZN3LCD7commandEh>
     a92:	68 e2       	ldi	r22, 0x28	; 40
     a94:	ce 01       	movw	r24, r28
     a96:	d3 de       	rcall	.-602    	; 0x83e <_ZN3LCD7commandEh>
     a98:	61 e0       	ldi	r22, 0x01	; 1
     a9a:	ce 01       	movw	r24, r28
     a9c:	d0 de       	rcall	.-608    	; 0x83e <_ZN3LCD7commandEh>
     a9e:	8f e1       	ldi	r24, 0x1F	; 31
     aa0:	9e e4       	ldi	r25, 0x4E	; 78
     aa2:	01 97       	sbiw	r24, 0x01	; 1
     aa4:	f1 f7       	brne	.-4      	; 0xaa2 <_ZN3LCD4initEh+0x11a>
     aa6:	00 c0       	rjmp	.+0      	; 0xaa8 <_ZN3LCD4initEh+0x120>
     aa8:	00 00       	nop
     aaa:	66 e0       	ldi	r22, 0x06	; 6
     aac:	ce 01       	movw	r24, r28
     aae:	c7 de       	rcall	.-626    	; 0x83e <_ZN3LCD7commandEh>
     ab0:	84 e0       	ldi	r24, 0x04	; 4
     ab2:	89 87       	std	Y+9, r24	; 0x09
     ab4:	df 91       	pop	r29
     ab6:	cf 91       	pop	r28
     ab8:	1f 91       	pop	r17
     aba:	08 95       	ret

00000abc <_ZN3LCDC1Eh10LCD_Type_th>:
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	ec 01       	movw	r28, r24
     ac6:	86 2f       	mov	r24, r22
     ac8:	04 2f       	mov	r16, r20
     aca:	12 2f       	mov	r17, r18
     acc:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <_Z22port_handle_to_addressh>
     ad0:	9c 01       	movw	r18, r24
     ad2:	2e 5f       	subi	r18, 0xFE	; 254
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	3b 83       	std	Y+3, r19	; 0x03
     ad8:	2a 83       	std	Y+2, r18	; 0x02
     ada:	24 e0       	ldi	r18, 0x04	; 4
     adc:	29 87       	std	Y+9, r18	; 0x09
     ade:	0c 83       	std	Y+4, r16	; 0x04
     ae0:	40 2f       	mov	r20, r16
     ae2:	50 e0       	ldi	r21, 0x00	; 0
     ae4:	9a 01       	movw	r18, r20
     ae6:	22 0f       	add	r18, r18
     ae8:	33 1f       	adc	r19, r19
     aea:	42 0f       	add	r20, r18
     aec:	53 1f       	adc	r21, r19
     aee:	44 0f       	add	r20, r20
     af0:	55 1f       	adc	r21, r21
     af2:	47 5f       	subi	r20, 0xF7	; 247
     af4:	5d 4f       	sbci	r21, 0xFD	; 253
     af6:	5e 83       	std	Y+6, r21	; 0x06
     af8:	4d 83       	std	Y+5, r20	; 0x05
     afa:	18 86       	std	Y+8, r1	; 0x08
     afc:	1f 82       	std	Y+7, r1	; 0x07
     afe:	21 2f       	mov	r18, r17
     b00:	22 1f       	adc	r18, r18
     b02:	22 27       	eor	r18, r18
     b04:	22 1f       	adc	r18, r18
     b06:	29 83       	std	Y+1, r18	; 0x01
     b08:	2f ef       	ldi	r18, 0xFF	; 255
     b0a:	fc 01       	movw	r30, r24
     b0c:	21 83       	std	Z+1, r18	; 0x01
     b0e:	61 2f       	mov	r22, r17
     b10:	6f 77       	andi	r22, 0x7F	; 127
     b12:	68 83       	st	Y, r22
     b14:	ce 01       	movw	r24, r28
     b16:	38 df       	rcall	.-400    	; 0x988 <_ZN3LCD4initEh>
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	1f 91       	pop	r17
     b1e:	0f 91       	pop	r16
     b20:	08 95       	ret

00000b22 <_ZN3LCD10write_charEc>:
     b22:	0f 93       	push	r16
     b24:	1f 93       	push	r17
     b26:	cf 93       	push	r28
     b28:	df 93       	push	r29
     b2a:	ec 01       	movw	r28, r24
     b2c:	16 2f       	mov	r17, r22
     b2e:	8c 81       	ldd	r24, Y+4	; 0x04
     b30:	89 30       	cpi	r24, 0x09	; 9
     b32:	11 f0       	breq	.+4      	; 0xb38 <_ZN3LCD10write_charEc+0x16>
     b34:	ce 01       	movw	r24, r28
     b36:	f7 dd       	rcall	.-1042   	; 0x726 <_ZN3LCD10wait_readyEv>
     b38:	0f b7       	in	r16, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     b3a:	f8 94       	cli
     b3c:	81 2f       	mov	r24, r17
     b3e:	82 95       	swap	r24
     b40:	8f 70       	andi	r24, 0x0F	; 15
     b42:	80 64       	ori	r24, 0x40	; 64
     b44:	ea 81       	ldd	r30, Y+2	; 0x02
     b46:	fb 81       	ldd	r31, Y+3	; 0x03
     b48:	80 83       	st	Z, r24
     b4a:	ce 01       	movw	r24, r28
     b4c:	56 de       	rcall	.-852    	; 0x7fa <_ZN3LCD6enableEv>
     b4e:	1f 70       	andi	r17, 0x0F	; 15
     b50:	10 64       	ori	r17, 0x40	; 64
     b52:	ea 81       	ldd	r30, Y+2	; 0x02
     b54:	fb 81       	ldd	r31, Y+3	; 0x03
     b56:	10 83       	st	Z, r17
     b58:	ce 01       	movw	r24, r28
     b5a:	4f de       	rcall	.-866    	; 0x7fa <_ZN3LCD6enableEv>
     b5c:	ea 81       	ldd	r30, Y+2	; 0x02
     b5e:	fb 81       	ldd	r31, Y+3	; 0x03
     b60:	10 82       	st	Z, r1
     b62:	8c 81       	ldd	r24, Y+4	; 0x04
     b64:	89 30       	cpi	r24, 0x09	; 9
     b66:	31 f4       	brne	.+12     	; 0xb74 <_ZN3LCD10write_charEc+0x52>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b68:	87 ec       	ldi	r24, 0xC7	; 199
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	01 97       	sbiw	r24, 0x01	; 1
     b6e:	f1 f7       	brne	.-4      	; 0xb6c <_ZN3LCD10write_charEc+0x4a>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <_ZN3LCD10write_charEc+0x50>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     b72:	00 00       	nop
     b74:	0f bf       	out	0x3f, r16	; 63
     b76:	ce 01       	movw	r24, r28
     b78:	e9 de       	rcall	.-558    	; 0x94c <_ZN3LCD14advance_cursorEv>
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	1f 91       	pop	r17
     b80:	0f 91       	pop	r16
     b82:	08 95       	ret

00000b84 <_ZL4idlev>:
     b84:	78 94       	sei
     b86:	83 b7       	in	r24, 0x33	; 51
     b88:	81 7f       	andi	r24, 0xF1	; 241
     b8a:	83 bf       	out	0x33, r24	; 51
     b8c:	83 b7       	in	r24, 0x33	; 51
     b8e:	81 60       	ori	r24, 0x01	; 1
     b90:	83 bf       	out	0x33, r24	; 51
     b92:	88 95       	sleep
     b94:	83 b7       	in	r24, 0x33	; 51
     b96:	8e 7f       	andi	r24, 0xFE	; 254
     b98:	83 bf       	out	0x33, r24	; 51
     b9a:	f4 cf       	rjmp	.-24     	; 0xb84 <_ZL4idlev>

00000b9c <_Z11task_insertPFvvE8Priority>:
     b9c:	78 2f       	mov	r23, r24
     b9e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <_ZL14active_task_id>
     ba2:	8f 3f       	cpi	r24, 0xFF	; 255
     ba4:	39 f5       	brne	.+78     	; 0xbf4 <_Z11task_insertPFvvE8Priority+0x58>
     ba6:	e9 e3       	ldi	r30, 0x39	; 57
     ba8:	f6 e0       	ldi	r31, 0x06	; 6
     baa:	26 e6       	ldi	r18, 0x66	; 102
     bac:	3c e1       	ldi	r19, 0x1C	; 28
     bae:	80 83       	st	Z, r24
     bb0:	e5 5d       	subi	r30, 0xD5	; 213
     bb2:	fc 4f       	sbci	r31, 0xFC	; 252
     bb4:	2e 17       	cp	r18, r30
     bb6:	3f 07       	cpc	r19, r31
     bb8:	d1 f7       	brne	.-12     	; 0xbae <_Z11task_insertPFvvE8Priority+0x12>
     bba:	4f b7       	in	r20, 0x3f	; 63
     bbc:	f8 94       	cli
     bbe:	ee e0       	ldi	r30, 0x0E	; 14
     bc0:	f3 e0       	ldi	r31, 0x03	; 3
     bc2:	10 82       	st	Z, r1
     bc4:	84 e0       	ldi	r24, 0x04	; 4
     bc6:	82 83       	std	Z+2, r24	; 0x02
     bc8:	83 83       	std	Z+3, r24	; 0x03
     bca:	14 82       	std	Z+4, r1	; 0x04
     bcc:	15 82       	std	Z+5, r1	; 0x05
     bce:	16 82       	std	Z+6, r1	; 0x06
     bd0:	17 82       	std	Z+7, r1	; 0x07
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	81 83       	std	Z+1, r24	; 0x01
     bd6:	22 ec       	ldi	r18, 0xC2	; 194
     bd8:	35 e0       	ldi	r19, 0x05	; 5
     bda:	20 93 38 06 	sts	0x0638, r18	; 0x800638 <_ZL7taskset+0x32a>
     bde:	30 93 37 06 	sts	0x0637, r19	; 0x800637 <_ZL7taskset+0x329>
     be2:	10 92 36 06 	sts	0x0636, r1	; 0x800636 <_ZL7taskset+0x328>
     be6:	25 e1       	ldi	r18, 0x15	; 21
     be8:	36 e0       	ldi	r19, 0x06	; 6
     bea:	32 87       	std	Z+10, r19	; 0x0a
     bec:	21 87       	std	Z+9, r18	; 0x09
     bee:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <_ZL14active_task_id>
     bf2:	4f bf       	out	0x3f, r20	; 63
     bf4:	5f b7       	in	r21, 0x3f	; 63
     bf6:	f8 94       	cli
     bf8:	20 91 39 06 	lds	r18, 0x0639	; 0x800639 <_ZL7taskset+0x32b>
     bfc:	2f 3f       	cpi	r18, 0xFF	; 255
     bfe:	51 f0       	breq	.+20     	; 0xc14 <_Z11task_insertPFvvE8Priority+0x78>
     c00:	e4 e6       	ldi	r30, 0x64	; 100
     c02:	f9 e0       	ldi	r31, 0x09	; 9
     c04:	22 e0       	ldi	r18, 0x02	; 2
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	82 2f       	mov	r24, r18
     c0a:	d9 01       	movw	r26, r18
     c0c:	40 81       	ld	r20, Z
     c0e:	4f 3f       	cpi	r20, 0xFF	; 255
     c10:	31 f5       	brne	.+76     	; 0xc5e <_Z11task_insertPFvvE8Priority+0xc2>
     c12:	03 c0       	rjmp	.+6      	; 0xc1a <_Z11task_insertPFvvE8Priority+0x7e>
     c14:	a1 e0       	ldi	r26, 0x01	; 1
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	eb e2       	ldi	r30, 0x2B	; 43
     c1c:	f3 e0       	ldi	r31, 0x03	; 3
     c1e:	ae 9f       	mul	r26, r30
     c20:	90 01       	movw	r18, r0
     c22:	af 9f       	mul	r26, r31
     c24:	30 0d       	add	r19, r0
     c26:	be 9f       	mul	r27, r30
     c28:	30 0d       	add	r19, r0
     c2a:	11 24       	eor	r1, r1
     c2c:	f9 01       	movw	r30, r18
     c2e:	e2 5f       	subi	r30, 0xF2	; 242
     c30:	fc 4f       	sbci	r31, 0xFC	; 252
     c32:	80 83       	st	Z, r24
     c34:	62 83       	std	Z+2, r22	; 0x02
     c36:	63 83       	std	Z+3, r22	; 0x03
     c38:	14 82       	std	Z+4, r1	; 0x04
     c3a:	15 82       	std	Z+5, r1	; 0x05
     c3c:	16 82       	std	Z+6, r1	; 0x06
     c3e:	17 82       	std	Z+7, r1	; 0x07
     c40:	41 e0       	ldi	r20, 0x01	; 1
     c42:	41 83       	std	Z+1, r20	; 0x01
     c44:	df 01       	movw	r26, r30
     c46:	a6 5d       	subi	r26, 0xD6	; 214
     c48:	bc 4f       	sbci	r27, 0xFC	; 252
     c4a:	7c 93       	st	X, r23
     c4c:	11 97       	sbiw	r26, 0x01	; 1
     c4e:	9c 93       	st	X, r25
     c50:	11 97       	sbiw	r26, 0x01	; 1
     c52:	1c 92       	st	X, r1
     c54:	2b 5e       	subi	r18, 0xEB	; 235
     c56:	39 4f       	sbci	r19, 0xF9	; 249
     c58:	32 87       	std	Z+10, r19	; 0x0a
     c5a:	21 87       	std	Z+9, r18	; 0x09
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <_Z11task_insertPFvvE8Priority+0xd2>
     c5e:	2f 5f       	subi	r18, 0xFF	; 255
     c60:	3f 4f       	sbci	r19, 0xFF	; 255
     c62:	e5 5d       	subi	r30, 0xD5	; 213
     c64:	fc 4f       	sbci	r31, 0xFC	; 252
     c66:	28 30       	cpi	r18, 0x08	; 8
     c68:	31 05       	cpc	r19, r1
     c6a:	71 f6       	brne	.-100    	; 0xc08 <_Z11task_insertPFvvE8Priority+0x6c>
     c6c:	8f ef       	ldi	r24, 0xFF	; 255
     c6e:	5f bf       	out	0x3f, r21	; 63
     c70:	08 95       	ret

00000c72 <_Z8activateh>:
     c72:	9f ef       	ldi	r25, 0xFF	; 255
     c74:	98 0f       	add	r25, r24
     c76:	97 30       	cpi	r25, 0x07	; 7
     c78:	f8 f4       	brcc	.+62     	; 0xcb8 <_Z8activateh+0x46>
     c7a:	4f b7       	in	r20, 0x3f	; 63
     c7c:	f8 94       	cli
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	2b e2       	ldi	r18, 0x2B	; 43
     c82:	33 e0       	ldi	r19, 0x03	; 3
     c84:	82 9f       	mul	r24, r18
     c86:	f0 01       	movw	r30, r0
     c88:	83 9f       	mul	r24, r19
     c8a:	f0 0d       	add	r31, r0
     c8c:	92 9f       	mul	r25, r18
     c8e:	f0 0d       	add	r31, r0
     c90:	11 24       	eor	r1, r1
     c92:	e2 5f       	subi	r30, 0xF2	; 242
     c94:	fc 4f       	sbci	r31, 0xFC	; 252
     c96:	20 81       	ld	r18, Z
     c98:	2f 3f       	cpi	r18, 0xFF	; 255
     c9a:	69 f0       	breq	.+26     	; 0xcb6 <_Z8activateh+0x44>
     c9c:	2b e2       	ldi	r18, 0x2B	; 43
     c9e:	33 e0       	ldi	r19, 0x03	; 3
     ca0:	82 9f       	mul	r24, r18
     ca2:	f0 01       	movw	r30, r0
     ca4:	83 9f       	mul	r24, r19
     ca6:	f0 0d       	add	r31, r0
     ca8:	92 9f       	mul	r25, r18
     caa:	f0 0d       	add	r31, r0
     cac:	11 24       	eor	r1, r1
     cae:	e2 5f       	subi	r30, 0xF2	; 242
     cb0:	fc 4f       	sbci	r31, 0xFC	; 252
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	81 83       	std	Z+1, r24	; 0x01
     cb6:	4f bf       	out	0x3f, r20	; 63
     cb8:	08 95       	ret

00000cba <_Z9is_activeh>:
     cba:	9f ef       	ldi	r25, 0xFF	; 255
     cbc:	98 0f       	add	r25, r24
     cbe:	97 30       	cpi	r25, 0x07	; 7
     cc0:	78 f4       	brcc	.+30     	; 0xce0 <_Z9is_activeh+0x26>
     cc2:	2b e2       	ldi	r18, 0x2B	; 43
     cc4:	33 e0       	ldi	r19, 0x03	; 3
     cc6:	82 9f       	mul	r24, r18
     cc8:	f0 01       	movw	r30, r0
     cca:	83 9f       	mul	r24, r19
     ccc:	f0 0d       	add	r31, r0
     cce:	11 24       	eor	r1, r1
     cd0:	e2 5f       	subi	r30, 0xF2	; 242
     cd2:	fc 4f       	sbci	r31, 0xFC	; 252
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	92 30       	cpi	r25, 0x02	; 2
     cda:	19 f4       	brne	.+6      	; 0xce2 <_Z9is_activeh+0x28>
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	08 95       	ret
     ce0:	80 e0       	ldi	r24, 0x00	; 0
     ce2:	08 95       	ret

00000ce4 <_Z6kernel14SchedulingTypePFvhE>:
     ce4:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <_ZL10sched_type>
     ce8:	70 93 fb 02 	sts	0x02FB, r23	; 0x8002fb <_ZL8exitproc+0x1>
     cec:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <_ZL8exitproc>
     cf0:	6f e0       	ldi	r22, 0x0F	; 15
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	8d ef       	ldi	r24, 0xFD	; 253
     cf6:	92 e0       	ldi	r25, 0x02	; 2
     cf8:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_ZN7OSTimer5startEj>
     cfc:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <_ZL14active_task_id>
     d00:	10 92 0f 03 	sts	0x030F, r1	; 0x80030f <_ZL7taskset+0x1>
     d04:	78 94       	sei
     d06:	8d ef       	ldi	r24, 0xFD	; 253
     d08:	92 e0       	ldi	r25, 0x02	; 2
     d0a:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <_ZN7OSTimer13force_timeoutEv>
     d0e:	ff cf       	rjmp	.-2      	; 0xd0e <_Z6kernel14SchedulingTypePFvhE+0x2a>

00000d10 <_Z5yieldv>:
     d10:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <_ZL10sched_type>
     d14:	81 30       	cpi	r24, 0x01	; 1
     d16:	61 f4       	brne	.+24     	; 0xd30 <_Z5yieldv+0x20>
     d18:	78 94       	sei
     d1a:	83 b7       	in	r24, 0x33	; 51
     d1c:	81 7f       	andi	r24, 0xF1	; 241
     d1e:	83 bf       	out	0x33, r24	; 51
     d20:	83 b7       	in	r24, 0x33	; 51
     d22:	81 60       	ori	r24, 0x01	; 1
     d24:	83 bf       	out	0x33, r24	; 51
     d26:	88 95       	sleep
     d28:	83 b7       	in	r24, 0x33	; 51
     d2a:	8e 7f       	andi	r24, 0xFE	; 254
     d2c:	83 bf       	out	0x33, r24	; 51
     d2e:	08 95       	ret
     d30:	8d ef       	ldi	r24, 0xFD	; 253
     d32:	92 e0       	ldi	r25, 0x02	; 2
     d34:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <_ZN7OSTimer13force_timeoutEv>
     d38:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <_ZL14active_task_id>
     d3c:	2b e2       	ldi	r18, 0x2B	; 43
     d3e:	33 e0       	ldi	r19, 0x03	; 3
     d40:	92 9f       	mul	r25, r18
     d42:	f0 01       	movw	r30, r0
     d44:	93 9f       	mul	r25, r19
     d46:	f0 0d       	add	r31, r0
     d48:	11 24       	eor	r1, r1
     d4a:	e2 5f       	subi	r30, 0xF2	; 242
     d4c:	fc 4f       	sbci	r31, 0xFC	; 252
     d4e:	44 81       	ldd	r20, Z+4	; 0x04
     d50:	55 81       	ldd	r21, Z+5	; 0x05
     d52:	66 81       	ldd	r22, Z+6	; 0x06
     d54:	77 81       	ldd	r23, Z+7	; 0x07
     d56:	48 0f       	add	r20, r24
     d58:	51 1d       	adc	r21, r1
     d5a:	61 1d       	adc	r22, r1
     d5c:	71 1d       	adc	r23, r1
     d5e:	44 83       	std	Z+4, r20	; 0x04
     d60:	55 83       	std	Z+5, r21	; 0x05
     d62:	66 83       	std	Z+6, r22	; 0x06
     d64:	77 83       	std	Z+7, r23	; 0x07
     d66:	08 95       	ret

00000d68 <_Z10deactivateh>:
     d68:	9f ef       	ldi	r25, 0xFF	; 255
     d6a:	98 0f       	add	r25, r24
     d6c:	97 30       	cpi	r25, 0x07	; 7
     d6e:	f0 f4       	brcc	.+60     	; 0xdac <_Z10deactivateh+0x44>
     d70:	6f b7       	in	r22, 0x3f	; 63
     d72:	f8 94       	cli
     d74:	28 2f       	mov	r18, r24
     d76:	30 e0       	ldi	r19, 0x00	; 0
     d78:	4b e2       	ldi	r20, 0x2B	; 43
     d7a:	53 e0       	ldi	r21, 0x03	; 3
     d7c:	24 9f       	mul	r18, r20
     d7e:	f0 01       	movw	r30, r0
     d80:	25 9f       	mul	r18, r21
     d82:	f0 0d       	add	r31, r0
     d84:	34 9f       	mul	r19, r20
     d86:	f0 0d       	add	r31, r0
     d88:	11 24       	eor	r1, r1
     d8a:	e2 5f       	subi	r30, 0xF2	; 242
     d8c:	fc 4f       	sbci	r31, 0xFC	; 252
     d8e:	90 81       	ld	r25, Z
     d90:	9f 3f       	cpi	r25, 0xFF	; 255
     d92:	59 f0       	breq	.+22     	; 0xdaa <_Z10deactivateh+0x42>
     d94:	24 9f       	mul	r18, r20
     d96:	f0 01       	movw	r30, r0
     d98:	25 9f       	mul	r18, r21
     d9a:	f0 0d       	add	r31, r0
     d9c:	34 9f       	mul	r19, r20
     d9e:	f0 0d       	add	r31, r0
     da0:	11 24       	eor	r1, r1
     da2:	e2 5f       	subi	r30, 0xF2	; 242
     da4:	fc 4f       	sbci	r31, 0xFC	; 252
     da6:	92 e0       	ldi	r25, 0x02	; 2
     da8:	91 83       	std	Z+1, r25	; 0x01
     daa:	6f bf       	out	0x3f, r22	; 63
     dac:	90 91 08 02 	lds	r25, 0x0208	; 0x800208 <_ZL14active_task_id>
     db0:	89 13       	cpse	r24, r25
     db2:	01 c0       	rjmp	.+2      	; 0xdb6 <_Z10deactivateh+0x4e>
     db4:	ad cf       	rjmp	.-166    	; 0xd10 <_Z5yieldv>
     db6:	08 95       	ret

00000db8 <_Z15current_task_idv>:
     db8:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <_ZL14active_task_id>
     dbc:	08 95       	ret

00000dbe <_Z8sem_waith>:
     dbe:	20 91 f9 02 	lds	r18, 0x02F9	; 0x8002f9 <_ZL17sem_waiting_count>
     dc2:	28 30       	cpi	r18, 0x08	; 8
     dc4:	99 f1       	breq	.+102    	; 0xe2c <_Z8sem_waith+0x6e>
     dc6:	22 23       	and	r18, r18
     dc8:	29 f0       	breq	.+10     	; 0xdd4 <_Z8sem_waith+0x16>
     dca:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     dce:	89 13       	cpse	r24, r25
     dd0:	0b c0       	rjmp	.+22     	; 0xde8 <_Z8sem_waith+0x2a>
     dd2:	08 95       	ret
     dd4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     dd8:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <_ZL18sem_waiting_oldest>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <_ZL22sem_waiting_free_index>
     de2:	80 93 f9 02 	sts	0x02F9, r24	; 0x8002f9 <_ZL17sem_waiting_count>
     de6:	08 95       	ret
     de8:	e1 e0       	ldi	r30, 0x01	; 1
     dea:	f2 e0       	ldi	r31, 0x02	; 2
     dec:	48 e0       	ldi	r20, 0x08	; 8
     dee:	52 e0       	ldi	r21, 0x02	; 2
     df0:	91 91       	ld	r25, Z+
     df2:	89 17       	cp	r24, r25
     df4:	d9 f0       	breq	.+54     	; 0xe2c <_Z8sem_waith+0x6e>
     df6:	e4 17       	cp	r30, r20
     df8:	f5 07       	cpc	r31, r21
     dfa:	d1 f7       	brne	.-12     	; 0xdf0 <_Z8sem_waith+0x32>
     dfc:	e0 91 f8 02 	lds	r30, 0x02F8	; 0x8002f8 <_ZL22sem_waiting_free_index>
     e00:	e8 30       	cpi	r30, 0x08	; 8
     e02:	48 f0       	brcs	.+18     	; 0xe16 <_Z8sem_waith+0x58>
     e04:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <_ZL22sem_waiting_free_index>
     e0e:	2f 5f       	subi	r18, 0xFF	; 255
     e10:	20 93 f9 02 	sts	0x02F9, r18	; 0x8002f9 <_ZL17sem_waiting_count>
     e14:	08 95       	ret
     e16:	91 e0       	ldi	r25, 0x01	; 1
     e18:	9e 0f       	add	r25, r30
     e1a:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <_ZL22sem_waiting_free_index>
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	e0 50       	subi	r30, 0x00	; 0
     e22:	fe 4f       	sbci	r31, 0xFE	; 254
     e24:	80 83       	st	Z, r24
     e26:	2f 5f       	subi	r18, 0xFF	; 255
     e28:	20 93 f9 02 	sts	0x02F9, r18	; 0x8002f9 <_ZL17sem_waiting_count>
     e2c:	08 95       	ret

00000e2e <_Z11sem_waitingv>:
     e2e:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <_ZL17sem_waiting_count>
     e32:	99 23       	and	r25, r25
     e34:	a9 f0       	breq	.+42     	; 0xe60 <_Z11sem_waitingv+0x32>
     e36:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <_ZL18sem_waiting_oldest>
     e3a:	e2 2f       	mov	r30, r18
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	e0 50       	subi	r30, 0x00	; 0
     e40:	fe 4f       	sbci	r31, 0xFE	; 254
     e42:	80 81       	ld	r24, Z
     e44:	3f ef       	ldi	r19, 0xFF	; 255
     e46:	30 83       	st	Z, r19
     e48:	91 50       	subi	r25, 0x01	; 1
     e4a:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <_ZL17sem_waiting_count>
     e4e:	2f 5f       	subi	r18, 0xFF	; 255
     e50:	28 30       	cpi	r18, 0x08	; 8
     e52:	18 f4       	brcc	.+6      	; 0xe5a <_Z11sem_waitingv+0x2c>
     e54:	20 93 f7 02 	sts	0x02F7, r18	; 0x8002f7 <_ZL18sem_waiting_oldest>
     e58:	08 95       	ret
     e5a:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <_ZL18sem_waiting_oldest>
     e5e:	08 95       	ret
     e60:	8f ef       	ldi	r24, 0xFF	; 255
     e62:	08 95       	ret

00000e64 <__vector_23>:
     e64:	ff 93       	push	r31
     e66:	ef 93       	push	r30
     e68:	df 93       	push	r29
     e6a:	cf 93       	push	r28
     e6c:	bf 93       	push	r27
     e6e:	af 93       	push	r26
     e70:	9f 93       	push	r25
     e72:	8f 93       	push	r24
     e74:	7f 93       	push	r23
     e76:	6f 93       	push	r22
     e78:	5f 93       	push	r21
     e7a:	4f 93       	push	r20
     e7c:	3f 93       	push	r19
     e7e:	2f 93       	push	r18
     e80:	1f 93       	push	r17
     e82:	0f 93       	push	r16
     e84:	ff 92       	push	r15
     e86:	ef 92       	push	r14
     e88:	df 92       	push	r13
     e8a:	cf 92       	push	r12
     e8c:	bf 92       	push	r11
     e8e:	af 92       	push	r10
     e90:	9f 92       	push	r9
     e92:	8f 92       	push	r8
     e94:	7f 92       	push	r7
     e96:	6f 92       	push	r6
     e98:	5f 92       	push	r5
     e9a:	4f 92       	push	r4
     e9c:	3f 92       	push	r3
     e9e:	2f 92       	push	r2
     ea0:	1f 92       	push	r1
     ea2:	0f 92       	push	r0
     ea4:	c0 91 08 02 	lds	r28, 0x0208	; 0x800208 <_ZL14active_task_id>
     ea8:	2c 2f       	mov	r18, r28
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	8f b7       	in	r24, 0x3f	; 63
     eae:	4b e2       	ldi	r20, 0x2B	; 43
     eb0:	53 e0       	ldi	r21, 0x03	; 3
     eb2:	24 9f       	mul	r18, r20
     eb4:	f0 01       	movw	r30, r0
     eb6:	25 9f       	mul	r18, r21
     eb8:	f0 0d       	add	r31, r0
     eba:	34 9f       	mul	r19, r20
     ebc:	f0 0d       	add	r31, r0
     ebe:	11 24       	eor	r1, r1
     ec0:	e2 5f       	subi	r30, 0xF2	; 242
     ec2:	fc 4f       	sbci	r31, 0xFC	; 252
     ec4:	80 87       	std	Z+8, r24	; 0x08
     ec6:	8d b7       	in	r24, 0x3d	; 61
     ec8:	9e b7       	in	r25, 0x3e	; 62
     eca:	92 87       	std	Z+10, r25	; 0x0a
     ecc:	81 87       	std	Z+9, r24	; 0x09
     ece:	84 81       	ldd	r24, Z+4	; 0x04
     ed0:	95 81       	ldd	r25, Z+5	; 0x05
     ed2:	a6 81       	ldd	r26, Z+6	; 0x06
     ed4:	b7 81       	ldd	r27, Z+7	; 0x07
     ed6:	8f 51       	subi	r24, 0x1F	; 31
     ed8:	9f 4f       	sbci	r25, 0xFF	; 255
     eda:	af 4f       	sbci	r26, 0xFF	; 255
     edc:	bf 4f       	sbci	r27, 0xFF	; 255
     ede:	84 83       	std	Z+4, r24	; 0x04
     ee0:	95 83       	std	Z+5, r25	; 0x05
     ee2:	a6 83       	std	Z+6, r26	; 0x06
     ee4:	b7 83       	std	Z+7, r27	; 0x07
     ee6:	81 81       	ldd	r24, Z+1	; 0x01
     ee8:	81 11       	cpse	r24, r1
     eea:	0d c0       	rjmp	.+26     	; 0xf06 <__vector_23+0xa2>
     eec:	8b e2       	ldi	r24, 0x2B	; 43
     eee:	93 e0       	ldi	r25, 0x03	; 3
     ef0:	28 9f       	mul	r18, r24
     ef2:	f0 01       	movw	r30, r0
     ef4:	29 9f       	mul	r18, r25
     ef6:	f0 0d       	add	r31, r0
     ef8:	38 9f       	mul	r19, r24
     efa:	f0 0d       	add	r31, r0
     efc:	11 24       	eor	r1, r1
     efe:	e2 5f       	subi	r30, 0xF2	; 242
     f00:	fc 4f       	sbci	r31, 0xFC	; 252
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	81 83       	std	Z+1, r24	; 0x01
     f06:	93 df       	rcall	.-218    	; 0xe2e <_Z11sem_waitingv>
     f08:	8f 3f       	cpi	r24, 0xFF	; 255
     f0a:	19 f0       	breq	.+6      	; 0xf12 <__vector_23+0xae>
     f0c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZL14active_task_id>
     f10:	41 c0       	rjmp	.+130    	; 0xf94 <__vector_23+0x130>
     f12:	8c 2f       	mov	r24, r28
     f14:	4b e2       	ldi	r20, 0x2B	; 43
     f16:	53 e0       	ldi	r21, 0x03	; 3
     f18:	8f 5f       	subi	r24, 0xFF	; 255
     f1a:	88 30       	cpi	r24, 0x08	; 8
     f1c:	08 f0       	brcs	.+2      	; 0xf20 <__vector_23+0xbc>
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	28 2f       	mov	r18, r24
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	24 9f       	mul	r18, r20
     f26:	f0 01       	movw	r30, r0
     f28:	25 9f       	mul	r18, r21
     f2a:	f0 0d       	add	r31, r0
     f2c:	34 9f       	mul	r19, r20
     f2e:	f0 0d       	add	r31, r0
     f30:	11 24       	eor	r1, r1
     f32:	e2 5f       	subi	r30, 0xF2	; 242
     f34:	fc 4f       	sbci	r31, 0xFC	; 252
     f36:	91 81       	ldd	r25, Z+1	; 0x01
     f38:	91 30       	cpi	r25, 0x01	; 1
     f3a:	41 f5       	brne	.+80     	; 0xf8c <__vector_23+0x128>
     f3c:	24 9f       	mul	r18, r20
     f3e:	f0 01       	movw	r30, r0
     f40:	25 9f       	mul	r18, r21
     f42:	f0 0d       	add	r31, r0
     f44:	34 9f       	mul	r19, r20
     f46:	f0 0d       	add	r31, r0
     f48:	11 24       	eor	r1, r1
     f4a:	e2 5f       	subi	r30, 0xF2	; 242
     f4c:	fc 4f       	sbci	r31, 0xFC	; 252
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	99 23       	and	r25, r25
     f52:	61 f0       	breq	.+24     	; 0xf6c <__vector_23+0x108>
     f54:	24 9f       	mul	r18, r20
     f56:	f0 01       	movw	r30, r0
     f58:	25 9f       	mul	r18, r21
     f5a:	f0 0d       	add	r31, r0
     f5c:	34 9f       	mul	r19, r20
     f5e:	f0 0d       	add	r31, r0
     f60:	11 24       	eor	r1, r1
     f62:	e2 5f       	subi	r30, 0xF2	; 242
     f64:	fc 4f       	sbci	r31, 0xFC	; 252
     f66:	91 50       	subi	r25, 0x01	; 1
     f68:	93 83       	std	Z+3, r25	; 0x03
     f6a:	d6 cf       	rjmp	.-84     	; 0xf18 <__vector_23+0xb4>
     f6c:	4b e2       	ldi	r20, 0x2B	; 43
     f6e:	53 e0       	ldi	r21, 0x03	; 3
     f70:	24 9f       	mul	r18, r20
     f72:	f0 01       	movw	r30, r0
     f74:	25 9f       	mul	r18, r21
     f76:	f0 0d       	add	r31, r0
     f78:	34 9f       	mul	r19, r20
     f7a:	f0 0d       	add	r31, r0
     f7c:	11 24       	eor	r1, r1
     f7e:	e2 5f       	subi	r30, 0xF2	; 242
     f80:	fc 4f       	sbci	r31, 0xFC	; 252
     f82:	92 81       	ldd	r25, Z+2	; 0x02
     f84:	93 83       	std	Z+3, r25	; 0x03
     f86:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <_ZL14active_task_id>
     f8a:	04 c0       	rjmp	.+8      	; 0xf94 <__vector_23+0x130>
     f8c:	8c 13       	cpse	r24, r28
     f8e:	c4 cf       	rjmp	.-120    	; 0xf18 <__vector_23+0xb4>
     f90:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <_ZL14active_task_id>
     f94:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
     f98:	8b e2       	ldi	r24, 0x2B	; 43
     f9a:	93 e0       	ldi	r25, 0x03	; 3
     f9c:	28 9f       	mul	r18, r24
     f9e:	f0 01       	movw	r30, r0
     fa0:	29 9f       	mul	r18, r25
     fa2:	f0 0d       	add	r31, r0
     fa4:	11 24       	eor	r1, r1
     fa6:	e2 5f       	subi	r30, 0xF2	; 242
     fa8:	fc 4f       	sbci	r31, 0xFC	; 252
     faa:	11 82       	std	Z+1, r1	; 0x01
     fac:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     fae:	f8 94       	cli
     fb0:	40 91 ff 02 	lds	r20, 0x02FF	; 0x8002ff <_ZL8OS_timer+0x2>
     fb4:	50 91 00 03 	lds	r21, 0x0300	; 0x800300 <_ZL8OS_timer+0x3>
     fb8:	20 91 7d 02 	lds	r18, 0x027D	; 0x80027d <tc_vect>
     fbc:	30 91 7e 02 	lds	r19, 0x027E	; 0x80027e <tc_vect+0x1>
     fc0:	42 17       	cp	r20, r18
     fc2:	53 07       	cpc	r21, r19
     fc4:	51 f4       	brne	.+20     	; 0xfda <__vector_23+0x176>
     fc6:	ed ef       	ldi	r30, 0xFD	; 253
     fc8:	f2 e0       	ldi	r31, 0x02	; 2
     fca:	a4 81       	ldd	r26, Z+4	; 0x04
     fcc:	b5 81       	ldd	r27, Z+5	; 0x05
     fce:	8c 91       	ld	r24, X
     fd0:	85 60       	ori	r24, 0x05	; 5
     fd2:	8c 93       	st	X, r24
     fd4:	80 89       	ldd	r24, Z+16	; 0x10
     fd6:	86 bd       	out	0x26, r24	; 38
     fd8:	0a c0       	rjmp	.+20     	; 0xfee <__vector_23+0x18a>
     fda:	ed ef       	ldi	r30, 0xFD	; 253
     fdc:	f2 e0       	ldi	r31, 0x02	; 2
     fde:	a4 81       	ldd	r26, Z+4	; 0x04
     fe0:	b5 81       	ldd	r27, Z+5	; 0x05
     fe2:	8c 91       	ld	r24, X
     fe4:	87 60       	ori	r24, 0x07	; 7
     fe6:	8c 93       	st	X, r24
     fe8:	80 89       	ldd	r24, Z+16	; 0x10
     fea:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     fee:	9f bf       	out	0x3f, r25	; 63
     ff0:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
     ff4:	8b e2       	ldi	r24, 0x2B	; 43
     ff6:	93 e0       	ldi	r25, 0x03	; 3
     ff8:	28 9f       	mul	r18, r24
     ffa:	f0 01       	movw	r30, r0
     ffc:	29 9f       	mul	r18, r25
     ffe:	f0 0d       	add	r31, r0
    1000:	11 24       	eor	r1, r1
    1002:	e2 5f       	subi	r30, 0xF2	; 242
    1004:	fc 4f       	sbci	r31, 0xFC	; 252
    1006:	20 85       	ldd	r18, Z+8	; 0x08
    1008:	2f bf       	out	0x3f, r18	; 63
    100a:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <_ZL14active_task_id>
    100e:	28 9f       	mul	r18, r24
    1010:	f0 01       	movw	r30, r0
    1012:	29 9f       	mul	r18, r25
    1014:	f0 0d       	add	r31, r0
    1016:	11 24       	eor	r1, r1
    1018:	e2 5f       	subi	r30, 0xF2	; 242
    101a:	fc 4f       	sbci	r31, 0xFC	; 252
    101c:	81 85       	ldd	r24, Z+9	; 0x09
    101e:	92 85       	ldd	r25, Z+10	; 0x0a
    1020:	9e bf       	out	0x3e, r25	; 62
    1022:	8d bf       	out	0x3d, r24	; 61
    1024:	0f 90       	pop	r0
    1026:	1f 90       	pop	r1
    1028:	2f 90       	pop	r2
    102a:	3f 90       	pop	r3
    102c:	4f 90       	pop	r4
    102e:	5f 90       	pop	r5
    1030:	6f 90       	pop	r6
    1032:	7f 90       	pop	r7
    1034:	8f 90       	pop	r8
    1036:	9f 90       	pop	r9
    1038:	af 90       	pop	r10
    103a:	bf 90       	pop	r11
    103c:	cf 90       	pop	r12
    103e:	df 90       	pop	r13
    1040:	ef 90       	pop	r14
    1042:	ff 90       	pop	r15
    1044:	0f 91       	pop	r16
    1046:	1f 91       	pop	r17
    1048:	2f 91       	pop	r18
    104a:	3f 91       	pop	r19
    104c:	4f 91       	pop	r20
    104e:	5f 91       	pop	r21
    1050:	6f 91       	pop	r22
    1052:	7f 91       	pop	r23
    1054:	8f 91       	pop	r24
    1056:	9f 91       	pop	r25
    1058:	af 91       	pop	r26
    105a:	bf 91       	pop	r27
    105c:	cf 91       	pop	r28
    105e:	df 91       	pop	r29
    1060:	ef 91       	pop	r30
    1062:	ff 91       	pop	r31
    1064:	18 95       	reti

00001066 <_GLOBAL__sub_I__Z11task_insertPFvvE8Priority>:
    1066:	60 e0       	ldi	r22, 0x00	; 0
    1068:	8d ef       	ldi	r24, 0xFD	; 253
    106a:	92 e0       	ldi	r25, 0x02	; 2
    106c:	bc c6       	rjmp	.+3448   	; 0x1de6 <_ZN7OSTimerC1Eh>
    106e:	08 95       	ret

00001070 <_ZN6Timer88notify_AEv>:
    1070:	cf 93       	push	r28
    1072:	df 93       	push	r29
    1074:	ec 01       	movw	r28, r24
    1076:	e8 85       	ldd	r30, Y+8	; 0x08
    1078:	f9 85       	ldd	r31, Y+9	; 0x09
    107a:	30 97       	sbiw	r30, 0x00	; 0
    107c:	09 f0       	breq	.+2      	; 0x1080 <_ZN6Timer88notify_AEv+0x10>
    107e:	19 95       	eicall
    1080:	8a 85       	ldd	r24, Y+10	; 0x0a
    1082:	9b 85       	ldd	r25, Y+11	; 0x0b
    1084:	89 2b       	or	r24, r25
    1086:	39 f4       	brne	.+14     	; 0x1096 <_ZN6Timer88notify_AEv+0x26>
    1088:	e8 81       	ld	r30, Y
    108a:	f9 81       	ldd	r31, Y+1	; 0x01
    108c:	01 90       	ld	r0, Z+
    108e:	f0 81       	ld	r31, Z
    1090:	e0 2d       	mov	r30, r0
    1092:	ce 01       	movw	r24, r28
    1094:	19 95       	eicall
    1096:	df 91       	pop	r29
    1098:	cf 91       	pop	r28
    109a:	08 95       	ret

0000109c <_ZN6Timer88notify_BEv>:
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	ec 01       	movw	r28, r24
    10a2:	ea 85       	ldd	r30, Y+10	; 0x0a
    10a4:	fb 85       	ldd	r31, Y+11	; 0x0b
    10a6:	30 97       	sbiw	r30, 0x00	; 0
    10a8:	09 f0       	breq	.+2      	; 0x10ac <_ZN6Timer88notify_BEv+0x10>
    10aa:	19 95       	eicall
    10ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    10ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    10b0:	89 2b       	or	r24, r25
    10b2:	39 f4       	brne	.+14     	; 0x10c2 <_ZN6Timer88notify_BEv+0x26>
    10b4:	e8 81       	ld	r30, Y
    10b6:	f9 81       	ldd	r31, Y+1	; 0x01
    10b8:	01 90       	ld	r0, Z+
    10ba:	f0 81       	ld	r31, Z
    10bc:	e0 2d       	mov	r30, r0
    10be:	ce 01       	movw	r24, r28
    10c0:	19 95       	eicall
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	08 95       	ret

000010c8 <_ZN6Timer88notify_CEv>:
    10c8:	08 95       	ret

000010ca <_ZN6Timer88notify_OEv>:
    10ca:	cf 93       	push	r28
    10cc:	df 93       	push	r29
    10ce:	ec 01       	movw	r28, r24
    10d0:	ee 85       	ldd	r30, Y+14	; 0x0e
    10d2:	ff 85       	ldd	r31, Y+15	; 0x0f
    10d4:	30 97       	sbiw	r30, 0x00	; 0
    10d6:	09 f0       	breq	.+2      	; 0x10da <_ZN6Timer88notify_OEv+0x10>
    10d8:	19 95       	eicall
    10da:	e8 81       	ld	r30, Y
    10dc:	f9 81       	ldd	r31, Y+1	; 0x01
    10de:	01 90       	ld	r0, Z+
    10e0:	f0 81       	ld	r31, Z
    10e2:	e0 2d       	mov	r30, r0
    10e4:	ce 01       	movw	r24, r28
    10e6:	19 95       	eicall
    10e8:	df 91       	pop	r29
    10ea:	cf 91       	pop	r28
    10ec:	08 95       	ret

000010ee <_ZN7OSTimer5resetEv>:
    10ee:	dc 01       	movw	r26, r24
    10f0:	2f b7       	in	r18, 0x3f	; 63
    10f2:	f8 94       	cli
    10f4:	12 96       	adiw	r26, 0x02	; 2
    10f6:	4d 91       	ld	r20, X+
    10f8:	5c 91       	ld	r21, X
    10fa:	13 97       	sbiw	r26, 0x03	; 3
    10fc:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <tc_vect>
    1100:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <tc_vect+0x1>
    1104:	48 17       	cp	r20, r24
    1106:	59 07       	cpc	r21, r25
    1108:	59 f4       	brne	.+22     	; 0x1120 <_ZN7OSTimer5resetEv+0x32>
    110a:	14 96       	adiw	r26, 0x04	; 4
    110c:	ed 91       	ld	r30, X+
    110e:	fc 91       	ld	r31, X
    1110:	15 97       	sbiw	r26, 0x05	; 5
    1112:	80 81       	ld	r24, Z
    1114:	85 60       	ori	r24, 0x05	; 5
    1116:	80 83       	st	Z, r24
    1118:	50 96       	adiw	r26, 0x10	; 16
    111a:	8c 91       	ld	r24, X
    111c:	86 bd       	out	0x26, r24	; 38
    111e:	0b c0       	rjmp	.+22     	; 0x1136 <_ZN7OSTimer5resetEv+0x48>
    1120:	14 96       	adiw	r26, 0x04	; 4
    1122:	ed 91       	ld	r30, X+
    1124:	fc 91       	ld	r31, X
    1126:	15 97       	sbiw	r26, 0x05	; 5
    1128:	90 81       	ld	r25, Z
    112a:	97 60       	ori	r25, 0x07	; 7
    112c:	90 83       	st	Z, r25
    112e:	50 96       	adiw	r26, 0x10	; 16
    1130:	8c 91       	ld	r24, X
    1132:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    1136:	2f bf       	out	0x3f, r18	; 63
    1138:	08 95       	ret

0000113a <_ZN7Timer168notify_AEv>:
    113a:	cf 93       	push	r28
    113c:	df 93       	push	r29
    113e:	ec 01       	movw	r28, r24
    1140:	e8 85       	ldd	r30, Y+8	; 0x08
    1142:	f9 85       	ldd	r31, Y+9	; 0x09
    1144:	30 97       	sbiw	r30, 0x00	; 0
    1146:	09 f0       	breq	.+2      	; 0x114a <_ZN7Timer168notify_AEv+0x10>
    1148:	19 95       	eicall
    114a:	8a 85       	ldd	r24, Y+10	; 0x0a
    114c:	9b 85       	ldd	r25, Y+11	; 0x0b
    114e:	89 2b       	or	r24, r25
    1150:	39 f4       	brne	.+14     	; 0x1160 <_ZN7Timer168notify_AEv+0x26>
    1152:	e8 81       	ld	r30, Y
    1154:	f9 81       	ldd	r31, Y+1	; 0x01
    1156:	01 90       	ld	r0, Z+
    1158:	f0 81       	ld	r31, Z
    115a:	e0 2d       	mov	r30, r0
    115c:	ce 01       	movw	r24, r28
    115e:	19 95       	eicall
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	08 95       	ret

00001166 <_ZN7Timer168notify_BEv>:
    1166:	cf 93       	push	r28
    1168:	df 93       	push	r29
    116a:	ec 01       	movw	r28, r24
    116c:	ea 85       	ldd	r30, Y+10	; 0x0a
    116e:	fb 85       	ldd	r31, Y+11	; 0x0b
    1170:	30 97       	sbiw	r30, 0x00	; 0
    1172:	09 f0       	breq	.+2      	; 0x1176 <_ZN7Timer168notify_BEv+0x10>
    1174:	19 95       	eicall
    1176:	8c 85       	ldd	r24, Y+12	; 0x0c
    1178:	9d 85       	ldd	r25, Y+13	; 0x0d
    117a:	89 2b       	or	r24, r25
    117c:	39 f4       	brne	.+14     	; 0x118c <_ZN7Timer168notify_BEv+0x26>
    117e:	e8 81       	ld	r30, Y
    1180:	f9 81       	ldd	r31, Y+1	; 0x01
    1182:	01 90       	ld	r0, Z+
    1184:	f0 81       	ld	r31, Z
    1186:	e0 2d       	mov	r30, r0
    1188:	ce 01       	movw	r24, r28
    118a:	19 95       	eicall
    118c:	df 91       	pop	r29
    118e:	cf 91       	pop	r28
    1190:	08 95       	ret

00001192 <_ZN7Timer168notify_CEv>:
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	ec 01       	movw	r28, r24
    1198:	ec 85       	ldd	r30, Y+12	; 0x0c
    119a:	fd 85       	ldd	r31, Y+13	; 0x0d
    119c:	30 97       	sbiw	r30, 0x00	; 0
    119e:	09 f0       	breq	.+2      	; 0x11a2 <_ZN7Timer168notify_CEv+0x10>
    11a0:	19 95       	eicall
    11a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    11a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    11a6:	89 2b       	or	r24, r25
    11a8:	39 f4       	brne	.+14     	; 0x11b8 <_ZN7Timer168notify_CEv+0x26>
    11aa:	e8 81       	ld	r30, Y
    11ac:	f9 81       	ldd	r31, Y+1	; 0x01
    11ae:	01 90       	ld	r0, Z+
    11b0:	f0 81       	ld	r31, Z
    11b2:	e0 2d       	mov	r30, r0
    11b4:	ce 01       	movw	r24, r28
    11b6:	19 95       	eicall
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	08 95       	ret

000011be <_ZN7Timer168notify_OEv>:
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	ec 01       	movw	r28, r24
    11c4:	ee 85       	ldd	r30, Y+14	; 0x0e
    11c6:	ff 85       	ldd	r31, Y+15	; 0x0f
    11c8:	30 97       	sbiw	r30, 0x00	; 0
    11ca:	09 f0       	breq	.+2      	; 0x11ce <_ZN7Timer168notify_OEv+0x10>
    11cc:	19 95       	eicall
    11ce:	e8 81       	ld	r30, Y
    11d0:	f9 81       	ldd	r31, Y+1	; 0x01
    11d2:	01 90       	ld	r0, Z+
    11d4:	f0 81       	ld	r31, Z
    11d6:	e0 2d       	mov	r30, r0
    11d8:	ce 01       	movw	r24, r28
    11da:	19 95       	eicall
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	08 95       	ret

000011e2 <__cxa_pure_virtual>:
    11e2:	ff cf       	rjmp	.-2      	; 0x11e2 <__cxa_pure_virtual>

000011e4 <__vector_21>:
    11e4:	1f 92       	push	r1
    11e6:	0f 92       	push	r0
    11e8:	0f b6       	in	r0, 0x3f	; 63
    11ea:	0f 92       	push	r0
    11ec:	11 24       	eor	r1, r1
    11ee:	0b b6       	in	r0, 0x3b	; 59
    11f0:	0f 92       	push	r0
    11f2:	2f 93       	push	r18
    11f4:	3f 93       	push	r19
    11f6:	4f 93       	push	r20
    11f8:	5f 93       	push	r21
    11fa:	6f 93       	push	r22
    11fc:	7f 93       	push	r23
    11fe:	8f 93       	push	r24
    1200:	9f 93       	push	r25
    1202:	af 93       	push	r26
    1204:	bf 93       	push	r27
    1206:	ef 93       	push	r30
    1208:	ff 93       	push	r31
    120a:	80 91 66 1c 	lds	r24, 0x1C66	; 0x801c66 <timer_obj>
    120e:	90 91 67 1c 	lds	r25, 0x1C67	; 0x801c67 <timer_obj+0x1>
    1212:	00 97       	sbiw	r24, 0x00	; 0
    1214:	39 f0       	breq	.+14     	; 0x1224 <__vector_21+0x40>
    1216:	dc 01       	movw	r26, r24
    1218:	ed 91       	ld	r30, X+
    121a:	fc 91       	ld	r31, X
    121c:	02 80       	ldd	r0, Z+2	; 0x02
    121e:	f3 81       	ldd	r31, Z+3	; 0x03
    1220:	e0 2d       	mov	r30, r0
    1222:	19 95       	eicall
    1224:	ff 91       	pop	r31
    1226:	ef 91       	pop	r30
    1228:	bf 91       	pop	r27
    122a:	af 91       	pop	r26
    122c:	9f 91       	pop	r25
    122e:	8f 91       	pop	r24
    1230:	7f 91       	pop	r23
    1232:	6f 91       	pop	r22
    1234:	5f 91       	pop	r21
    1236:	4f 91       	pop	r20
    1238:	3f 91       	pop	r19
    123a:	2f 91       	pop	r18
    123c:	0f 90       	pop	r0
    123e:	0b be       	out	0x3b, r0	; 59
    1240:	0f 90       	pop	r0
    1242:	0f be       	out	0x3f, r0	; 63
    1244:	0f 90       	pop	r0
    1246:	1f 90       	pop	r1
    1248:	18 95       	reti

0000124a <__vector_22>:
    124a:	1f 92       	push	r1
    124c:	0f 92       	push	r0
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	0f 92       	push	r0
    1252:	11 24       	eor	r1, r1
    1254:	0b b6       	in	r0, 0x3b	; 59
    1256:	0f 92       	push	r0
    1258:	2f 93       	push	r18
    125a:	3f 93       	push	r19
    125c:	4f 93       	push	r20
    125e:	5f 93       	push	r21
    1260:	6f 93       	push	r22
    1262:	7f 93       	push	r23
    1264:	8f 93       	push	r24
    1266:	9f 93       	push	r25
    1268:	af 93       	push	r26
    126a:	bf 93       	push	r27
    126c:	ef 93       	push	r30
    126e:	ff 93       	push	r31
    1270:	80 91 66 1c 	lds	r24, 0x1C66	; 0x801c66 <timer_obj>
    1274:	90 91 67 1c 	lds	r25, 0x1C67	; 0x801c67 <timer_obj+0x1>
    1278:	00 97       	sbiw	r24, 0x00	; 0
    127a:	39 f0       	breq	.+14     	; 0x128a <__vector_22+0x40>
    127c:	dc 01       	movw	r26, r24
    127e:	ed 91       	ld	r30, X+
    1280:	fc 91       	ld	r31, X
    1282:	04 80       	ldd	r0, Z+4	; 0x04
    1284:	f5 81       	ldd	r31, Z+5	; 0x05
    1286:	e0 2d       	mov	r30, r0
    1288:	19 95       	eicall
    128a:	ff 91       	pop	r31
    128c:	ef 91       	pop	r30
    128e:	bf 91       	pop	r27
    1290:	af 91       	pop	r26
    1292:	9f 91       	pop	r25
    1294:	8f 91       	pop	r24
    1296:	7f 91       	pop	r23
    1298:	6f 91       	pop	r22
    129a:	5f 91       	pop	r21
    129c:	4f 91       	pop	r20
    129e:	3f 91       	pop	r19
    12a0:	2f 91       	pop	r18
    12a2:	0f 90       	pop	r0
    12a4:	0b be       	out	0x3b, r0	; 59
    12a6:	0f 90       	pop	r0
    12a8:	0f be       	out	0x3f, r0	; 63
    12aa:	0f 90       	pop	r0
    12ac:	1f 90       	pop	r1
    12ae:	18 95       	reti

000012b0 <__vector_13>:
    12b0:	1f 92       	push	r1
    12b2:	0f 92       	push	r0
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	0f 92       	push	r0
    12b8:	11 24       	eor	r1, r1
    12ba:	0b b6       	in	r0, 0x3b	; 59
    12bc:	0f 92       	push	r0
    12be:	2f 93       	push	r18
    12c0:	3f 93       	push	r19
    12c2:	4f 93       	push	r20
    12c4:	5f 93       	push	r21
    12c6:	6f 93       	push	r22
    12c8:	7f 93       	push	r23
    12ca:	8f 93       	push	r24
    12cc:	9f 93       	push	r25
    12ce:	af 93       	push	r26
    12d0:	bf 93       	push	r27
    12d2:	ef 93       	push	r30
    12d4:	ff 93       	push	r31
    12d6:	80 91 6a 1c 	lds	r24, 0x1C6A	; 0x801c6a <timer_obj+0x4>
    12da:	90 91 6b 1c 	lds	r25, 0x1C6B	; 0x801c6b <timer_obj+0x5>
    12de:	00 97       	sbiw	r24, 0x00	; 0
    12e0:	39 f0       	breq	.+14     	; 0x12f0 <__vector_13+0x40>
    12e2:	dc 01       	movw	r26, r24
    12e4:	ed 91       	ld	r30, X+
    12e6:	fc 91       	ld	r31, X
    12e8:	02 80       	ldd	r0, Z+2	; 0x02
    12ea:	f3 81       	ldd	r31, Z+3	; 0x03
    12ec:	e0 2d       	mov	r30, r0
    12ee:	19 95       	eicall
    12f0:	ff 91       	pop	r31
    12f2:	ef 91       	pop	r30
    12f4:	bf 91       	pop	r27
    12f6:	af 91       	pop	r26
    12f8:	9f 91       	pop	r25
    12fa:	8f 91       	pop	r24
    12fc:	7f 91       	pop	r23
    12fe:	6f 91       	pop	r22
    1300:	5f 91       	pop	r21
    1302:	4f 91       	pop	r20
    1304:	3f 91       	pop	r19
    1306:	2f 91       	pop	r18
    1308:	0f 90       	pop	r0
    130a:	0b be       	out	0x3b, r0	; 59
    130c:	0f 90       	pop	r0
    130e:	0f be       	out	0x3f, r0	; 63
    1310:	0f 90       	pop	r0
    1312:	1f 90       	pop	r1
    1314:	18 95       	reti

00001316 <__vector_14>:
    1316:	1f 92       	push	r1
    1318:	0f 92       	push	r0
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	0f 92       	push	r0
    131e:	11 24       	eor	r1, r1
    1320:	0b b6       	in	r0, 0x3b	; 59
    1322:	0f 92       	push	r0
    1324:	2f 93       	push	r18
    1326:	3f 93       	push	r19
    1328:	4f 93       	push	r20
    132a:	5f 93       	push	r21
    132c:	6f 93       	push	r22
    132e:	7f 93       	push	r23
    1330:	8f 93       	push	r24
    1332:	9f 93       	push	r25
    1334:	af 93       	push	r26
    1336:	bf 93       	push	r27
    1338:	ef 93       	push	r30
    133a:	ff 93       	push	r31
    133c:	80 91 6a 1c 	lds	r24, 0x1C6A	; 0x801c6a <timer_obj+0x4>
    1340:	90 91 6b 1c 	lds	r25, 0x1C6B	; 0x801c6b <timer_obj+0x5>
    1344:	00 97       	sbiw	r24, 0x00	; 0
    1346:	39 f0       	breq	.+14     	; 0x1356 <__vector_14+0x40>
    1348:	dc 01       	movw	r26, r24
    134a:	ed 91       	ld	r30, X+
    134c:	fc 91       	ld	r31, X
    134e:	04 80       	ldd	r0, Z+4	; 0x04
    1350:	f5 81       	ldd	r31, Z+5	; 0x05
    1352:	e0 2d       	mov	r30, r0
    1354:	19 95       	eicall
    1356:	ff 91       	pop	r31
    1358:	ef 91       	pop	r30
    135a:	bf 91       	pop	r27
    135c:	af 91       	pop	r26
    135e:	9f 91       	pop	r25
    1360:	8f 91       	pop	r24
    1362:	7f 91       	pop	r23
    1364:	6f 91       	pop	r22
    1366:	5f 91       	pop	r21
    1368:	4f 91       	pop	r20
    136a:	3f 91       	pop	r19
    136c:	2f 91       	pop	r18
    136e:	0f 90       	pop	r0
    1370:	0b be       	out	0x3b, r0	; 59
    1372:	0f 90       	pop	r0
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	0f 90       	pop	r0
    1378:	1f 90       	pop	r1
    137a:	18 95       	reti

0000137c <__vector_17>:
    137c:	1f 92       	push	r1
    137e:	0f 92       	push	r0
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	0f 92       	push	r0
    1384:	11 24       	eor	r1, r1
    1386:	0b b6       	in	r0, 0x3b	; 59
    1388:	0f 92       	push	r0
    138a:	2f 93       	push	r18
    138c:	3f 93       	push	r19
    138e:	4f 93       	push	r20
    1390:	5f 93       	push	r21
    1392:	6f 93       	push	r22
    1394:	7f 93       	push	r23
    1396:	8f 93       	push	r24
    1398:	9f 93       	push	r25
    139a:	af 93       	push	r26
    139c:	bf 93       	push	r27
    139e:	ef 93       	push	r30
    13a0:	ff 93       	push	r31
    13a2:	80 91 68 1c 	lds	r24, 0x1C68	; 0x801c68 <timer_obj+0x2>
    13a6:	90 91 69 1c 	lds	r25, 0x1C69	; 0x801c69 <timer_obj+0x3>
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	39 f0       	breq	.+14     	; 0x13bc <__vector_17+0x40>
    13ae:	dc 01       	movw	r26, r24
    13b0:	ed 91       	ld	r30, X+
    13b2:	fc 91       	ld	r31, X
    13b4:	02 80       	ldd	r0, Z+2	; 0x02
    13b6:	f3 81       	ldd	r31, Z+3	; 0x03
    13b8:	e0 2d       	mov	r30, r0
    13ba:	19 95       	eicall
    13bc:	ff 91       	pop	r31
    13be:	ef 91       	pop	r30
    13c0:	bf 91       	pop	r27
    13c2:	af 91       	pop	r26
    13c4:	9f 91       	pop	r25
    13c6:	8f 91       	pop	r24
    13c8:	7f 91       	pop	r23
    13ca:	6f 91       	pop	r22
    13cc:	5f 91       	pop	r21
    13ce:	4f 91       	pop	r20
    13d0:	3f 91       	pop	r19
    13d2:	2f 91       	pop	r18
    13d4:	0f 90       	pop	r0
    13d6:	0b be       	out	0x3b, r0	; 59
    13d8:	0f 90       	pop	r0
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	0f 90       	pop	r0
    13de:	1f 90       	pop	r1
    13e0:	18 95       	reti

000013e2 <__vector_18>:
    13e2:	1f 92       	push	r1
    13e4:	0f 92       	push	r0
    13e6:	0f b6       	in	r0, 0x3f	; 63
    13e8:	0f 92       	push	r0
    13ea:	11 24       	eor	r1, r1
    13ec:	0b b6       	in	r0, 0x3b	; 59
    13ee:	0f 92       	push	r0
    13f0:	2f 93       	push	r18
    13f2:	3f 93       	push	r19
    13f4:	4f 93       	push	r20
    13f6:	5f 93       	push	r21
    13f8:	6f 93       	push	r22
    13fa:	7f 93       	push	r23
    13fc:	8f 93       	push	r24
    13fe:	9f 93       	push	r25
    1400:	af 93       	push	r26
    1402:	bf 93       	push	r27
    1404:	ef 93       	push	r30
    1406:	ff 93       	push	r31
    1408:	80 91 68 1c 	lds	r24, 0x1C68	; 0x801c68 <timer_obj+0x2>
    140c:	90 91 69 1c 	lds	r25, 0x1C69	; 0x801c69 <timer_obj+0x3>
    1410:	00 97       	sbiw	r24, 0x00	; 0
    1412:	39 f0       	breq	.+14     	; 0x1422 <__vector_18+0x40>
    1414:	dc 01       	movw	r26, r24
    1416:	ed 91       	ld	r30, X+
    1418:	fc 91       	ld	r31, X
    141a:	04 80       	ldd	r0, Z+4	; 0x04
    141c:	f5 81       	ldd	r31, Z+5	; 0x05
    141e:	e0 2d       	mov	r30, r0
    1420:	19 95       	eicall
    1422:	ff 91       	pop	r31
    1424:	ef 91       	pop	r30
    1426:	bf 91       	pop	r27
    1428:	af 91       	pop	r26
    142a:	9f 91       	pop	r25
    142c:	8f 91       	pop	r24
    142e:	7f 91       	pop	r23
    1430:	6f 91       	pop	r22
    1432:	5f 91       	pop	r21
    1434:	4f 91       	pop	r20
    1436:	3f 91       	pop	r19
    1438:	2f 91       	pop	r18
    143a:	0f 90       	pop	r0
    143c:	0b be       	out	0x3b, r0	; 59
    143e:	0f 90       	pop	r0
    1440:	0f be       	out	0x3f, r0	; 63
    1442:	0f 90       	pop	r0
    1444:	1f 90       	pop	r1
    1446:	18 95       	reti

00001448 <__vector_19>:
    1448:	1f 92       	push	r1
    144a:	0f 92       	push	r0
    144c:	0f b6       	in	r0, 0x3f	; 63
    144e:	0f 92       	push	r0
    1450:	11 24       	eor	r1, r1
    1452:	0b b6       	in	r0, 0x3b	; 59
    1454:	0f 92       	push	r0
    1456:	2f 93       	push	r18
    1458:	3f 93       	push	r19
    145a:	4f 93       	push	r20
    145c:	5f 93       	push	r21
    145e:	6f 93       	push	r22
    1460:	7f 93       	push	r23
    1462:	8f 93       	push	r24
    1464:	9f 93       	push	r25
    1466:	af 93       	push	r26
    1468:	bf 93       	push	r27
    146a:	ef 93       	push	r30
    146c:	ff 93       	push	r31
    146e:	80 91 68 1c 	lds	r24, 0x1C68	; 0x801c68 <timer_obj+0x2>
    1472:	90 91 69 1c 	lds	r25, 0x1C69	; 0x801c69 <timer_obj+0x3>
    1476:	00 97       	sbiw	r24, 0x00	; 0
    1478:	39 f0       	breq	.+14     	; 0x1488 <__vector_19+0x40>
    147a:	dc 01       	movw	r26, r24
    147c:	ed 91       	ld	r30, X+
    147e:	fc 91       	ld	r31, X
    1480:	06 80       	ldd	r0, Z+6	; 0x06
    1482:	f7 81       	ldd	r31, Z+7	; 0x07
    1484:	e0 2d       	mov	r30, r0
    1486:	19 95       	eicall
    1488:	ff 91       	pop	r31
    148a:	ef 91       	pop	r30
    148c:	bf 91       	pop	r27
    148e:	af 91       	pop	r26
    1490:	9f 91       	pop	r25
    1492:	8f 91       	pop	r24
    1494:	7f 91       	pop	r23
    1496:	6f 91       	pop	r22
    1498:	5f 91       	pop	r21
    149a:	4f 91       	pop	r20
    149c:	3f 91       	pop	r19
    149e:	2f 91       	pop	r18
    14a0:	0f 90       	pop	r0
    14a2:	0b be       	out	0x3b, r0	; 59
    14a4:	0f 90       	pop	r0
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	0f 90       	pop	r0
    14aa:	1f 90       	pop	r1
    14ac:	18 95       	reti

000014ae <__vector_20>:
    14ae:	1f 92       	push	r1
    14b0:	0f 92       	push	r0
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	0f 92       	push	r0
    14b6:	11 24       	eor	r1, r1
    14b8:	0b b6       	in	r0, 0x3b	; 59
    14ba:	0f 92       	push	r0
    14bc:	2f 93       	push	r18
    14be:	3f 93       	push	r19
    14c0:	4f 93       	push	r20
    14c2:	5f 93       	push	r21
    14c4:	6f 93       	push	r22
    14c6:	7f 93       	push	r23
    14c8:	8f 93       	push	r24
    14ca:	9f 93       	push	r25
    14cc:	af 93       	push	r26
    14ce:	bf 93       	push	r27
    14d0:	ef 93       	push	r30
    14d2:	ff 93       	push	r31
    14d4:	80 91 68 1c 	lds	r24, 0x1C68	; 0x801c68 <timer_obj+0x2>
    14d8:	90 91 69 1c 	lds	r25, 0x1C69	; 0x801c69 <timer_obj+0x3>
    14dc:	00 97       	sbiw	r24, 0x00	; 0
    14de:	39 f0       	breq	.+14     	; 0x14ee <__vector_20+0x40>
    14e0:	dc 01       	movw	r26, r24
    14e2:	ed 91       	ld	r30, X+
    14e4:	fc 91       	ld	r31, X
    14e6:	00 84       	ldd	r0, Z+8	; 0x08
    14e8:	f1 85       	ldd	r31, Z+9	; 0x09
    14ea:	e0 2d       	mov	r30, r0
    14ec:	19 95       	eicall
    14ee:	ff 91       	pop	r31
    14f0:	ef 91       	pop	r30
    14f2:	bf 91       	pop	r27
    14f4:	af 91       	pop	r26
    14f6:	9f 91       	pop	r25
    14f8:	8f 91       	pop	r24
    14fa:	7f 91       	pop	r23
    14fc:	6f 91       	pop	r22
    14fe:	5f 91       	pop	r21
    1500:	4f 91       	pop	r20
    1502:	3f 91       	pop	r19
    1504:	2f 91       	pop	r18
    1506:	0f 90       	pop	r0
    1508:	0b be       	out	0x3b, r0	; 59
    150a:	0f 90       	pop	r0
    150c:	0f be       	out	0x3f, r0	; 63
    150e:	0f 90       	pop	r0
    1510:	1f 90       	pop	r1
    1512:	18 95       	reti

00001514 <__vector_32>:
    1514:	1f 92       	push	r1
    1516:	0f 92       	push	r0
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	0f 92       	push	r0
    151c:	11 24       	eor	r1, r1
    151e:	0b b6       	in	r0, 0x3b	; 59
    1520:	0f 92       	push	r0
    1522:	2f 93       	push	r18
    1524:	3f 93       	push	r19
    1526:	4f 93       	push	r20
    1528:	5f 93       	push	r21
    152a:	6f 93       	push	r22
    152c:	7f 93       	push	r23
    152e:	8f 93       	push	r24
    1530:	9f 93       	push	r25
    1532:	af 93       	push	r26
    1534:	bf 93       	push	r27
    1536:	ef 93       	push	r30
    1538:	ff 93       	push	r31
    153a:	80 91 6c 1c 	lds	r24, 0x1C6C	; 0x801c6c <timer_obj+0x6>
    153e:	90 91 6d 1c 	lds	r25, 0x1C6D	; 0x801c6d <timer_obj+0x7>
    1542:	00 97       	sbiw	r24, 0x00	; 0
    1544:	39 f0       	breq	.+14     	; 0x1554 <__vector_32+0x40>
    1546:	dc 01       	movw	r26, r24
    1548:	ed 91       	ld	r30, X+
    154a:	fc 91       	ld	r31, X
    154c:	02 80       	ldd	r0, Z+2	; 0x02
    154e:	f3 81       	ldd	r31, Z+3	; 0x03
    1550:	e0 2d       	mov	r30, r0
    1552:	19 95       	eicall
    1554:	ff 91       	pop	r31
    1556:	ef 91       	pop	r30
    1558:	bf 91       	pop	r27
    155a:	af 91       	pop	r26
    155c:	9f 91       	pop	r25
    155e:	8f 91       	pop	r24
    1560:	7f 91       	pop	r23
    1562:	6f 91       	pop	r22
    1564:	5f 91       	pop	r21
    1566:	4f 91       	pop	r20
    1568:	3f 91       	pop	r19
    156a:	2f 91       	pop	r18
    156c:	0f 90       	pop	r0
    156e:	0b be       	out	0x3b, r0	; 59
    1570:	0f 90       	pop	r0
    1572:	0f be       	out	0x3f, r0	; 63
    1574:	0f 90       	pop	r0
    1576:	1f 90       	pop	r1
    1578:	18 95       	reti

0000157a <__vector_33>:
    157a:	1f 92       	push	r1
    157c:	0f 92       	push	r0
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	0f 92       	push	r0
    1582:	11 24       	eor	r1, r1
    1584:	0b b6       	in	r0, 0x3b	; 59
    1586:	0f 92       	push	r0
    1588:	2f 93       	push	r18
    158a:	3f 93       	push	r19
    158c:	4f 93       	push	r20
    158e:	5f 93       	push	r21
    1590:	6f 93       	push	r22
    1592:	7f 93       	push	r23
    1594:	8f 93       	push	r24
    1596:	9f 93       	push	r25
    1598:	af 93       	push	r26
    159a:	bf 93       	push	r27
    159c:	ef 93       	push	r30
    159e:	ff 93       	push	r31
    15a0:	80 91 6c 1c 	lds	r24, 0x1C6C	; 0x801c6c <timer_obj+0x6>
    15a4:	90 91 6d 1c 	lds	r25, 0x1C6D	; 0x801c6d <timer_obj+0x7>
    15a8:	00 97       	sbiw	r24, 0x00	; 0
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__vector_33+0x40>
    15ac:	dc 01       	movw	r26, r24
    15ae:	ed 91       	ld	r30, X+
    15b0:	fc 91       	ld	r31, X
    15b2:	04 80       	ldd	r0, Z+4	; 0x04
    15b4:	f5 81       	ldd	r31, Z+5	; 0x05
    15b6:	e0 2d       	mov	r30, r0
    15b8:	19 95       	eicall
    15ba:	ff 91       	pop	r31
    15bc:	ef 91       	pop	r30
    15be:	bf 91       	pop	r27
    15c0:	af 91       	pop	r26
    15c2:	9f 91       	pop	r25
    15c4:	8f 91       	pop	r24
    15c6:	7f 91       	pop	r23
    15c8:	6f 91       	pop	r22
    15ca:	5f 91       	pop	r21
    15cc:	4f 91       	pop	r20
    15ce:	3f 91       	pop	r19
    15d0:	2f 91       	pop	r18
    15d2:	0f 90       	pop	r0
    15d4:	0b be       	out	0x3b, r0	; 59
    15d6:	0f 90       	pop	r0
    15d8:	0f be       	out	0x3f, r0	; 63
    15da:	0f 90       	pop	r0
    15dc:	1f 90       	pop	r1
    15de:	18 95       	reti

000015e0 <__vector_34>:
    15e0:	1f 92       	push	r1
    15e2:	0f 92       	push	r0
    15e4:	0f b6       	in	r0, 0x3f	; 63
    15e6:	0f 92       	push	r0
    15e8:	11 24       	eor	r1, r1
    15ea:	0b b6       	in	r0, 0x3b	; 59
    15ec:	0f 92       	push	r0
    15ee:	2f 93       	push	r18
    15f0:	3f 93       	push	r19
    15f2:	4f 93       	push	r20
    15f4:	5f 93       	push	r21
    15f6:	6f 93       	push	r22
    15f8:	7f 93       	push	r23
    15fa:	8f 93       	push	r24
    15fc:	9f 93       	push	r25
    15fe:	af 93       	push	r26
    1600:	bf 93       	push	r27
    1602:	ef 93       	push	r30
    1604:	ff 93       	push	r31
    1606:	80 91 6c 1c 	lds	r24, 0x1C6C	; 0x801c6c <timer_obj+0x6>
    160a:	90 91 6d 1c 	lds	r25, 0x1C6D	; 0x801c6d <timer_obj+0x7>
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	39 f0       	breq	.+14     	; 0x1620 <__vector_34+0x40>
    1612:	dc 01       	movw	r26, r24
    1614:	ed 91       	ld	r30, X+
    1616:	fc 91       	ld	r31, X
    1618:	06 80       	ldd	r0, Z+6	; 0x06
    161a:	f7 81       	ldd	r31, Z+7	; 0x07
    161c:	e0 2d       	mov	r30, r0
    161e:	19 95       	eicall
    1620:	ff 91       	pop	r31
    1622:	ef 91       	pop	r30
    1624:	bf 91       	pop	r27
    1626:	af 91       	pop	r26
    1628:	9f 91       	pop	r25
    162a:	8f 91       	pop	r24
    162c:	7f 91       	pop	r23
    162e:	6f 91       	pop	r22
    1630:	5f 91       	pop	r21
    1632:	4f 91       	pop	r20
    1634:	3f 91       	pop	r19
    1636:	2f 91       	pop	r18
    1638:	0f 90       	pop	r0
    163a:	0b be       	out	0x3b, r0	; 59
    163c:	0f 90       	pop	r0
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	0f 90       	pop	r0
    1642:	1f 90       	pop	r1
    1644:	18 95       	reti

00001646 <__vector_35>:
    1646:	1f 92       	push	r1
    1648:	0f 92       	push	r0
    164a:	0f b6       	in	r0, 0x3f	; 63
    164c:	0f 92       	push	r0
    164e:	11 24       	eor	r1, r1
    1650:	0b b6       	in	r0, 0x3b	; 59
    1652:	0f 92       	push	r0
    1654:	2f 93       	push	r18
    1656:	3f 93       	push	r19
    1658:	4f 93       	push	r20
    165a:	5f 93       	push	r21
    165c:	6f 93       	push	r22
    165e:	7f 93       	push	r23
    1660:	8f 93       	push	r24
    1662:	9f 93       	push	r25
    1664:	af 93       	push	r26
    1666:	bf 93       	push	r27
    1668:	ef 93       	push	r30
    166a:	ff 93       	push	r31
    166c:	80 91 6c 1c 	lds	r24, 0x1C6C	; 0x801c6c <timer_obj+0x6>
    1670:	90 91 6d 1c 	lds	r25, 0x1C6D	; 0x801c6d <timer_obj+0x7>
    1674:	00 97       	sbiw	r24, 0x00	; 0
    1676:	39 f0       	breq	.+14     	; 0x1686 <__vector_35+0x40>
    1678:	dc 01       	movw	r26, r24
    167a:	ed 91       	ld	r30, X+
    167c:	fc 91       	ld	r31, X
    167e:	00 84       	ldd	r0, Z+8	; 0x08
    1680:	f1 85       	ldd	r31, Z+9	; 0x09
    1682:	e0 2d       	mov	r30, r0
    1684:	19 95       	eicall
    1686:	ff 91       	pop	r31
    1688:	ef 91       	pop	r30
    168a:	bf 91       	pop	r27
    168c:	af 91       	pop	r26
    168e:	9f 91       	pop	r25
    1690:	8f 91       	pop	r24
    1692:	7f 91       	pop	r23
    1694:	6f 91       	pop	r22
    1696:	5f 91       	pop	r21
    1698:	4f 91       	pop	r20
    169a:	3f 91       	pop	r19
    169c:	2f 91       	pop	r18
    169e:	0f 90       	pop	r0
    16a0:	0b be       	out	0x3b, r0	; 59
    16a2:	0f 90       	pop	r0
    16a4:	0f be       	out	0x3f, r0	; 63
    16a6:	0f 90       	pop	r0
    16a8:	1f 90       	pop	r1
    16aa:	18 95       	reti

000016ac <__vector_42>:
    16ac:	1f 92       	push	r1
    16ae:	0f 92       	push	r0
    16b0:	0f b6       	in	r0, 0x3f	; 63
    16b2:	0f 92       	push	r0
    16b4:	11 24       	eor	r1, r1
    16b6:	0b b6       	in	r0, 0x3b	; 59
    16b8:	0f 92       	push	r0
    16ba:	2f 93       	push	r18
    16bc:	3f 93       	push	r19
    16be:	4f 93       	push	r20
    16c0:	5f 93       	push	r21
    16c2:	6f 93       	push	r22
    16c4:	7f 93       	push	r23
    16c6:	8f 93       	push	r24
    16c8:	9f 93       	push	r25
    16ca:	af 93       	push	r26
    16cc:	bf 93       	push	r27
    16ce:	ef 93       	push	r30
    16d0:	ff 93       	push	r31
    16d2:	80 91 6e 1c 	lds	r24, 0x1C6E	; 0x801c6e <timer_obj+0x8>
    16d6:	90 91 6f 1c 	lds	r25, 0x1C6F	; 0x801c6f <timer_obj+0x9>
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	39 f0       	breq	.+14     	; 0x16ec <__vector_42+0x40>
    16de:	dc 01       	movw	r26, r24
    16e0:	ed 91       	ld	r30, X+
    16e2:	fc 91       	ld	r31, X
    16e4:	02 80       	ldd	r0, Z+2	; 0x02
    16e6:	f3 81       	ldd	r31, Z+3	; 0x03
    16e8:	e0 2d       	mov	r30, r0
    16ea:	19 95       	eicall
    16ec:	ff 91       	pop	r31
    16ee:	ef 91       	pop	r30
    16f0:	bf 91       	pop	r27
    16f2:	af 91       	pop	r26
    16f4:	9f 91       	pop	r25
    16f6:	8f 91       	pop	r24
    16f8:	7f 91       	pop	r23
    16fa:	6f 91       	pop	r22
    16fc:	5f 91       	pop	r21
    16fe:	4f 91       	pop	r20
    1700:	3f 91       	pop	r19
    1702:	2f 91       	pop	r18
    1704:	0f 90       	pop	r0
    1706:	0b be       	out	0x3b, r0	; 59
    1708:	0f 90       	pop	r0
    170a:	0f be       	out	0x3f, r0	; 63
    170c:	0f 90       	pop	r0
    170e:	1f 90       	pop	r1
    1710:	18 95       	reti

00001712 <__vector_43>:
    1712:	1f 92       	push	r1
    1714:	0f 92       	push	r0
    1716:	0f b6       	in	r0, 0x3f	; 63
    1718:	0f 92       	push	r0
    171a:	11 24       	eor	r1, r1
    171c:	0b b6       	in	r0, 0x3b	; 59
    171e:	0f 92       	push	r0
    1720:	2f 93       	push	r18
    1722:	3f 93       	push	r19
    1724:	4f 93       	push	r20
    1726:	5f 93       	push	r21
    1728:	6f 93       	push	r22
    172a:	7f 93       	push	r23
    172c:	8f 93       	push	r24
    172e:	9f 93       	push	r25
    1730:	af 93       	push	r26
    1732:	bf 93       	push	r27
    1734:	ef 93       	push	r30
    1736:	ff 93       	push	r31
    1738:	80 91 6e 1c 	lds	r24, 0x1C6E	; 0x801c6e <timer_obj+0x8>
    173c:	90 91 6f 1c 	lds	r25, 0x1C6F	; 0x801c6f <timer_obj+0x9>
    1740:	00 97       	sbiw	r24, 0x00	; 0
    1742:	39 f0       	breq	.+14     	; 0x1752 <__vector_43+0x40>
    1744:	dc 01       	movw	r26, r24
    1746:	ed 91       	ld	r30, X+
    1748:	fc 91       	ld	r31, X
    174a:	04 80       	ldd	r0, Z+4	; 0x04
    174c:	f5 81       	ldd	r31, Z+5	; 0x05
    174e:	e0 2d       	mov	r30, r0
    1750:	19 95       	eicall
    1752:	ff 91       	pop	r31
    1754:	ef 91       	pop	r30
    1756:	bf 91       	pop	r27
    1758:	af 91       	pop	r26
    175a:	9f 91       	pop	r25
    175c:	8f 91       	pop	r24
    175e:	7f 91       	pop	r23
    1760:	6f 91       	pop	r22
    1762:	5f 91       	pop	r21
    1764:	4f 91       	pop	r20
    1766:	3f 91       	pop	r19
    1768:	2f 91       	pop	r18
    176a:	0f 90       	pop	r0
    176c:	0b be       	out	0x3b, r0	; 59
    176e:	0f 90       	pop	r0
    1770:	0f be       	out	0x3f, r0	; 63
    1772:	0f 90       	pop	r0
    1774:	1f 90       	pop	r1
    1776:	18 95       	reti

00001778 <__vector_44>:
    1778:	1f 92       	push	r1
    177a:	0f 92       	push	r0
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	0f 92       	push	r0
    1780:	11 24       	eor	r1, r1
    1782:	0b b6       	in	r0, 0x3b	; 59
    1784:	0f 92       	push	r0
    1786:	2f 93       	push	r18
    1788:	3f 93       	push	r19
    178a:	4f 93       	push	r20
    178c:	5f 93       	push	r21
    178e:	6f 93       	push	r22
    1790:	7f 93       	push	r23
    1792:	8f 93       	push	r24
    1794:	9f 93       	push	r25
    1796:	af 93       	push	r26
    1798:	bf 93       	push	r27
    179a:	ef 93       	push	r30
    179c:	ff 93       	push	r31
    179e:	80 91 6e 1c 	lds	r24, 0x1C6E	; 0x801c6e <timer_obj+0x8>
    17a2:	90 91 6f 1c 	lds	r25, 0x1C6F	; 0x801c6f <timer_obj+0x9>
    17a6:	00 97       	sbiw	r24, 0x00	; 0
    17a8:	39 f0       	breq	.+14     	; 0x17b8 <__vector_44+0x40>
    17aa:	dc 01       	movw	r26, r24
    17ac:	ed 91       	ld	r30, X+
    17ae:	fc 91       	ld	r31, X
    17b0:	06 80       	ldd	r0, Z+6	; 0x06
    17b2:	f7 81       	ldd	r31, Z+7	; 0x07
    17b4:	e0 2d       	mov	r30, r0
    17b6:	19 95       	eicall
    17b8:	ff 91       	pop	r31
    17ba:	ef 91       	pop	r30
    17bc:	bf 91       	pop	r27
    17be:	af 91       	pop	r26
    17c0:	9f 91       	pop	r25
    17c2:	8f 91       	pop	r24
    17c4:	7f 91       	pop	r23
    17c6:	6f 91       	pop	r22
    17c8:	5f 91       	pop	r21
    17ca:	4f 91       	pop	r20
    17cc:	3f 91       	pop	r19
    17ce:	2f 91       	pop	r18
    17d0:	0f 90       	pop	r0
    17d2:	0b be       	out	0x3b, r0	; 59
    17d4:	0f 90       	pop	r0
    17d6:	0f be       	out	0x3f, r0	; 63
    17d8:	0f 90       	pop	r0
    17da:	1f 90       	pop	r1
    17dc:	18 95       	reti

000017de <__vector_45>:
    17de:	1f 92       	push	r1
    17e0:	0f 92       	push	r0
    17e2:	0f b6       	in	r0, 0x3f	; 63
    17e4:	0f 92       	push	r0
    17e6:	11 24       	eor	r1, r1
    17e8:	0b b6       	in	r0, 0x3b	; 59
    17ea:	0f 92       	push	r0
    17ec:	2f 93       	push	r18
    17ee:	3f 93       	push	r19
    17f0:	4f 93       	push	r20
    17f2:	5f 93       	push	r21
    17f4:	6f 93       	push	r22
    17f6:	7f 93       	push	r23
    17f8:	8f 93       	push	r24
    17fa:	9f 93       	push	r25
    17fc:	af 93       	push	r26
    17fe:	bf 93       	push	r27
    1800:	ef 93       	push	r30
    1802:	ff 93       	push	r31
    1804:	80 91 6e 1c 	lds	r24, 0x1C6E	; 0x801c6e <timer_obj+0x8>
    1808:	90 91 6f 1c 	lds	r25, 0x1C6F	; 0x801c6f <timer_obj+0x9>
    180c:	00 97       	sbiw	r24, 0x00	; 0
    180e:	39 f0       	breq	.+14     	; 0x181e <__vector_45+0x40>
    1810:	dc 01       	movw	r26, r24
    1812:	ed 91       	ld	r30, X+
    1814:	fc 91       	ld	r31, X
    1816:	00 84       	ldd	r0, Z+8	; 0x08
    1818:	f1 85       	ldd	r31, Z+9	; 0x09
    181a:	e0 2d       	mov	r30, r0
    181c:	19 95       	eicall
    181e:	ff 91       	pop	r31
    1820:	ef 91       	pop	r30
    1822:	bf 91       	pop	r27
    1824:	af 91       	pop	r26
    1826:	9f 91       	pop	r25
    1828:	8f 91       	pop	r24
    182a:	7f 91       	pop	r23
    182c:	6f 91       	pop	r22
    182e:	5f 91       	pop	r21
    1830:	4f 91       	pop	r20
    1832:	3f 91       	pop	r19
    1834:	2f 91       	pop	r18
    1836:	0f 90       	pop	r0
    1838:	0b be       	out	0x3b, r0	; 59
    183a:	0f 90       	pop	r0
    183c:	0f be       	out	0x3f, r0	; 63
    183e:	0f 90       	pop	r0
    1840:	1f 90       	pop	r1
    1842:	18 95       	reti

00001844 <__vector_47>:
    1844:	1f 92       	push	r1
    1846:	0f 92       	push	r0
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	0f 92       	push	r0
    184c:	11 24       	eor	r1, r1
    184e:	0b b6       	in	r0, 0x3b	; 59
    1850:	0f 92       	push	r0
    1852:	2f 93       	push	r18
    1854:	3f 93       	push	r19
    1856:	4f 93       	push	r20
    1858:	5f 93       	push	r21
    185a:	6f 93       	push	r22
    185c:	7f 93       	push	r23
    185e:	8f 93       	push	r24
    1860:	9f 93       	push	r25
    1862:	af 93       	push	r26
    1864:	bf 93       	push	r27
    1866:	ef 93       	push	r30
    1868:	ff 93       	push	r31
    186a:	80 91 70 1c 	lds	r24, 0x1C70	; 0x801c70 <timer_obj+0xa>
    186e:	90 91 71 1c 	lds	r25, 0x1C71	; 0x801c71 <timer_obj+0xb>
    1872:	00 97       	sbiw	r24, 0x00	; 0
    1874:	39 f0       	breq	.+14     	; 0x1884 <__vector_47+0x40>
    1876:	dc 01       	movw	r26, r24
    1878:	ed 91       	ld	r30, X+
    187a:	fc 91       	ld	r31, X
    187c:	02 80       	ldd	r0, Z+2	; 0x02
    187e:	f3 81       	ldd	r31, Z+3	; 0x03
    1880:	e0 2d       	mov	r30, r0
    1882:	19 95       	eicall
    1884:	ff 91       	pop	r31
    1886:	ef 91       	pop	r30
    1888:	bf 91       	pop	r27
    188a:	af 91       	pop	r26
    188c:	9f 91       	pop	r25
    188e:	8f 91       	pop	r24
    1890:	7f 91       	pop	r23
    1892:	6f 91       	pop	r22
    1894:	5f 91       	pop	r21
    1896:	4f 91       	pop	r20
    1898:	3f 91       	pop	r19
    189a:	2f 91       	pop	r18
    189c:	0f 90       	pop	r0
    189e:	0b be       	out	0x3b, r0	; 59
    18a0:	0f 90       	pop	r0
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	0f 90       	pop	r0
    18a6:	1f 90       	pop	r1
    18a8:	18 95       	reti

000018aa <__vector_48>:
    18aa:	1f 92       	push	r1
    18ac:	0f 92       	push	r0
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	0f 92       	push	r0
    18b2:	11 24       	eor	r1, r1
    18b4:	0b b6       	in	r0, 0x3b	; 59
    18b6:	0f 92       	push	r0
    18b8:	2f 93       	push	r18
    18ba:	3f 93       	push	r19
    18bc:	4f 93       	push	r20
    18be:	5f 93       	push	r21
    18c0:	6f 93       	push	r22
    18c2:	7f 93       	push	r23
    18c4:	8f 93       	push	r24
    18c6:	9f 93       	push	r25
    18c8:	af 93       	push	r26
    18ca:	bf 93       	push	r27
    18cc:	ef 93       	push	r30
    18ce:	ff 93       	push	r31
    18d0:	80 91 70 1c 	lds	r24, 0x1C70	; 0x801c70 <timer_obj+0xa>
    18d4:	90 91 71 1c 	lds	r25, 0x1C71	; 0x801c71 <timer_obj+0xb>
    18d8:	00 97       	sbiw	r24, 0x00	; 0
    18da:	39 f0       	breq	.+14     	; 0x18ea <__vector_48+0x40>
    18dc:	dc 01       	movw	r26, r24
    18de:	ed 91       	ld	r30, X+
    18e0:	fc 91       	ld	r31, X
    18e2:	04 80       	ldd	r0, Z+4	; 0x04
    18e4:	f5 81       	ldd	r31, Z+5	; 0x05
    18e6:	e0 2d       	mov	r30, r0
    18e8:	19 95       	eicall
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0b be       	out	0x3b, r0	; 59
    1906:	0f 90       	pop	r0
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	0f 90       	pop	r0
    190c:	1f 90       	pop	r1
    190e:	18 95       	reti

00001910 <__vector_49>:
    1910:	1f 92       	push	r1
    1912:	0f 92       	push	r0
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	0f 92       	push	r0
    1918:	11 24       	eor	r1, r1
    191a:	0b b6       	in	r0, 0x3b	; 59
    191c:	0f 92       	push	r0
    191e:	2f 93       	push	r18
    1920:	3f 93       	push	r19
    1922:	4f 93       	push	r20
    1924:	5f 93       	push	r21
    1926:	6f 93       	push	r22
    1928:	7f 93       	push	r23
    192a:	8f 93       	push	r24
    192c:	9f 93       	push	r25
    192e:	af 93       	push	r26
    1930:	bf 93       	push	r27
    1932:	ef 93       	push	r30
    1934:	ff 93       	push	r31
    1936:	80 91 70 1c 	lds	r24, 0x1C70	; 0x801c70 <timer_obj+0xa>
    193a:	90 91 71 1c 	lds	r25, 0x1C71	; 0x801c71 <timer_obj+0xb>
    193e:	00 97       	sbiw	r24, 0x00	; 0
    1940:	39 f0       	breq	.+14     	; 0x1950 <__vector_49+0x40>
    1942:	dc 01       	movw	r26, r24
    1944:	ed 91       	ld	r30, X+
    1946:	fc 91       	ld	r31, X
    1948:	06 80       	ldd	r0, Z+6	; 0x06
    194a:	f7 81       	ldd	r31, Z+7	; 0x07
    194c:	e0 2d       	mov	r30, r0
    194e:	19 95       	eicall
    1950:	ff 91       	pop	r31
    1952:	ef 91       	pop	r30
    1954:	bf 91       	pop	r27
    1956:	af 91       	pop	r26
    1958:	9f 91       	pop	r25
    195a:	8f 91       	pop	r24
    195c:	7f 91       	pop	r23
    195e:	6f 91       	pop	r22
    1960:	5f 91       	pop	r21
    1962:	4f 91       	pop	r20
    1964:	3f 91       	pop	r19
    1966:	2f 91       	pop	r18
    1968:	0f 90       	pop	r0
    196a:	0b be       	out	0x3b, r0	; 59
    196c:	0f 90       	pop	r0
    196e:	0f be       	out	0x3f, r0	; 63
    1970:	0f 90       	pop	r0
    1972:	1f 90       	pop	r1
    1974:	18 95       	reti

00001976 <__vector_50>:
    1976:	1f 92       	push	r1
    1978:	0f 92       	push	r0
    197a:	0f b6       	in	r0, 0x3f	; 63
    197c:	0f 92       	push	r0
    197e:	11 24       	eor	r1, r1
    1980:	0b b6       	in	r0, 0x3b	; 59
    1982:	0f 92       	push	r0
    1984:	2f 93       	push	r18
    1986:	3f 93       	push	r19
    1988:	4f 93       	push	r20
    198a:	5f 93       	push	r21
    198c:	6f 93       	push	r22
    198e:	7f 93       	push	r23
    1990:	8f 93       	push	r24
    1992:	9f 93       	push	r25
    1994:	af 93       	push	r26
    1996:	bf 93       	push	r27
    1998:	ef 93       	push	r30
    199a:	ff 93       	push	r31
    199c:	80 91 70 1c 	lds	r24, 0x1C70	; 0x801c70 <timer_obj+0xa>
    19a0:	90 91 71 1c 	lds	r25, 0x1C71	; 0x801c71 <timer_obj+0xb>
    19a4:	00 97       	sbiw	r24, 0x00	; 0
    19a6:	39 f0       	breq	.+14     	; 0x19b6 <__vector_50+0x40>
    19a8:	dc 01       	movw	r26, r24
    19aa:	ed 91       	ld	r30, X+
    19ac:	fc 91       	ld	r31, X
    19ae:	00 84       	ldd	r0, Z+8	; 0x08
    19b0:	f1 85       	ldd	r31, Z+9	; 0x09
    19b2:	e0 2d       	mov	r30, r0
    19b4:	19 95       	eicall
    19b6:	ff 91       	pop	r31
    19b8:	ef 91       	pop	r30
    19ba:	bf 91       	pop	r27
    19bc:	af 91       	pop	r26
    19be:	9f 91       	pop	r25
    19c0:	8f 91       	pop	r24
    19c2:	7f 91       	pop	r23
    19c4:	6f 91       	pop	r22
    19c6:	5f 91       	pop	r21
    19c8:	4f 91       	pop	r20
    19ca:	3f 91       	pop	r19
    19cc:	2f 91       	pop	r18
    19ce:	0f 90       	pop	r0
    19d0:	0b be       	out	0x3b, r0	; 59
    19d2:	0f 90       	pop	r0
    19d4:	0f be       	out	0x3f, r0	; 63
    19d6:	0f 90       	pop	r0
    19d8:	1f 90       	pop	r1
    19da:	18 95       	reti

000019dc <_ZN7Timer16C1EhPFvvES1_S1_S1_>:
    19dc:	9f 92       	push	r9
    19de:	af 92       	push	r10
    19e0:	bf 92       	push	r11
    19e2:	cf 92       	push	r12
    19e4:	df 92       	push	r13
    19e6:	ef 92       	push	r14
    19e8:	ff 92       	push	r15
    19ea:	0f 93       	push	r16
    19ec:	1f 93       	push	r17
    19ee:	cf 93       	push	r28
    19f0:	df 93       	push	r29
    19f2:	ec 01       	movw	r28, r24
    19f4:	96 2e       	mov	r9, r22
    19f6:	5a 01       	movw	r10, r20
    19f8:	69 01       	movw	r12, r18
    19fa:	89 e4       	ldi	r24, 0x49	; 73
    19fc:	92 e0       	ldi	r25, 0x02	; 2
    19fe:	99 83       	std	Y+1, r25	; 0x01
    1a00:	88 83       	st	Y, r24
    1a02:	86 2f       	mov	r24, r22
    1a04:	00 d3       	rcall	.+1536   	; 0x2006 <_Z20tc_handle_to_addressh>
    1a06:	9b 83       	std	Y+3, r25	; 0x03
    1a08:	8a 83       	std	Y+2, r24	; 0x02
    1a0a:	e9 2d       	mov	r30, r9
    1a0c:	f0 e0       	ldi	r31, 0x00	; 0
    1a0e:	ee 0f       	add	r30, r30
    1a10:	ff 1f       	adc	r31, r31
    1a12:	e3 58       	subi	r30, 0x83	; 131
    1a14:	fd 4f       	sbci	r31, 0xFD	; 253
    1a16:	80 81       	ld	r24, Z
    1a18:	91 81       	ldd	r25, Z+1	; 0x01
    1a1a:	01 96       	adiw	r24, 0x01	; 1
    1a1c:	9d 83       	std	Y+5, r25	; 0x05
    1a1e:	8c 83       	std	Y+4, r24	; 0x04
    1a20:	83 e7       	ldi	r24, 0x73	; 115
    1a22:	92 e0       	ldi	r25, 0x02	; 2
    1a24:	99 83       	std	Y+1, r25	; 0x01
    1a26:	88 83       	st	Y, r24
    1a28:	81 e0       	ldi	r24, 0x01	; 1
    1a2a:	98 12       	cpse	r9, r24
    1a2c:	26 c0       	rjmp	.+76     	; 0x1a7a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x9e>
    1a2e:	d0 93 69 1c 	sts	0x1C69, r29	; 0x801c69 <timer_obj+0x3>
    1a32:	c0 93 68 1c 	sts	0x1C68, r28	; 0x801c68 <timer_obj+0x2>
    1a36:	a1 14       	cp	r10, r1
    1a38:	b1 04       	cpc	r11, r1
    1a3a:	29 f0       	breq	.+10     	; 0x1a46 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x6a>
    1a3c:	ef e6       	ldi	r30, 0x6F	; 111
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	80 81       	ld	r24, Z
    1a42:	82 60       	ori	r24, 0x02	; 2
    1a44:	80 83       	st	Z, r24
    1a46:	c1 14       	cp	r12, r1
    1a48:	d1 04       	cpc	r13, r1
    1a4a:	29 f0       	breq	.+10     	; 0x1a56 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x7a>
    1a4c:	ef e6       	ldi	r30, 0x6F	; 111
    1a4e:	f0 e0       	ldi	r31, 0x00	; 0
    1a50:	80 81       	ld	r24, Z
    1a52:	84 60       	ori	r24, 0x04	; 4
    1a54:	80 83       	st	Z, r24
    1a56:	01 15       	cp	r16, r1
    1a58:	11 05       	cpc	r17, r1
    1a5a:	29 f0       	breq	.+10     	; 0x1a66 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x8a>
    1a5c:	ef e6       	ldi	r30, 0x6F	; 111
    1a5e:	f0 e0       	ldi	r31, 0x00	; 0
    1a60:	80 81       	ld	r24, Z
    1a62:	88 60       	ori	r24, 0x08	; 8
    1a64:	80 83       	st	Z, r24
    1a66:	e1 14       	cp	r14, r1
    1a68:	f1 04       	cpc	r15, r1
    1a6a:	09 f4       	brne	.+2      	; 0x1a6e <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x92>
    1a6c:	7e c0       	rjmp	.+252    	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1a6e:	ef e6       	ldi	r30, 0x6F	; 111
    1a70:	f0 e0       	ldi	r31, 0x00	; 0
    1a72:	80 81       	ld	r24, Z
    1a74:	81 60       	ori	r24, 0x01	; 1
    1a76:	80 83       	st	Z, r24
    1a78:	78 c0       	rjmp	.+240    	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1a7a:	83 e0       	ldi	r24, 0x03	; 3
    1a7c:	98 12       	cpse	r9, r24
    1a7e:	26 c0       	rjmp	.+76     	; 0x1acc <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xf0>
    1a80:	d0 93 6d 1c 	sts	0x1C6D, r29	; 0x801c6d <timer_obj+0x7>
    1a84:	c0 93 6c 1c 	sts	0x1C6C, r28	; 0x801c6c <timer_obj+0x6>
    1a88:	a1 14       	cp	r10, r1
    1a8a:	b1 04       	cpc	r11, r1
    1a8c:	29 f0       	breq	.+10     	; 0x1a98 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xbc>
    1a8e:	e1 e7       	ldi	r30, 0x71	; 113
    1a90:	f0 e0       	ldi	r31, 0x00	; 0
    1a92:	80 81       	ld	r24, Z
    1a94:	82 60       	ori	r24, 0x02	; 2
    1a96:	80 83       	st	Z, r24
    1a98:	c1 14       	cp	r12, r1
    1a9a:	d1 04       	cpc	r13, r1
    1a9c:	29 f0       	breq	.+10     	; 0x1aa8 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xcc>
    1a9e:	e1 e7       	ldi	r30, 0x71	; 113
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	80 81       	ld	r24, Z
    1aa4:	84 60       	ori	r24, 0x04	; 4
    1aa6:	80 83       	st	Z, r24
    1aa8:	01 15       	cp	r16, r1
    1aaa:	11 05       	cpc	r17, r1
    1aac:	29 f0       	breq	.+10     	; 0x1ab8 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xdc>
    1aae:	e1 e7       	ldi	r30, 0x71	; 113
    1ab0:	f0 e0       	ldi	r31, 0x00	; 0
    1ab2:	80 81       	ld	r24, Z
    1ab4:	88 60       	ori	r24, 0x08	; 8
    1ab6:	80 83       	st	Z, r24
    1ab8:	e1 14       	cp	r14, r1
    1aba:	f1 04       	cpc	r15, r1
    1abc:	09 f4       	brne	.+2      	; 0x1ac0 <_ZN7Timer16C1EhPFvvES1_S1_S1_+0xe4>
    1abe:	55 c0       	rjmp	.+170    	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1ac0:	e1 e7       	ldi	r30, 0x71	; 113
    1ac2:	f0 e0       	ldi	r31, 0x00	; 0
    1ac4:	80 81       	ld	r24, Z
    1ac6:	81 60       	ori	r24, 0x01	; 1
    1ac8:	80 83       	st	Z, r24
    1aca:	4f c0       	rjmp	.+158    	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1acc:	84 e0       	ldi	r24, 0x04	; 4
    1ace:	98 12       	cpse	r9, r24
    1ad0:	25 c0       	rjmp	.+74     	; 0x1b1c <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x140>
    1ad2:	d0 93 6f 1c 	sts	0x1C6F, r29	; 0x801c6f <timer_obj+0x9>
    1ad6:	c0 93 6e 1c 	sts	0x1C6E, r28	; 0x801c6e <timer_obj+0x8>
    1ada:	a1 14       	cp	r10, r1
    1adc:	b1 04       	cpc	r11, r1
    1ade:	29 f0       	breq	.+10     	; 0x1aea <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x10e>
    1ae0:	e2 e7       	ldi	r30, 0x72	; 114
    1ae2:	f0 e0       	ldi	r31, 0x00	; 0
    1ae4:	80 81       	ld	r24, Z
    1ae6:	82 60       	ori	r24, 0x02	; 2
    1ae8:	80 83       	st	Z, r24
    1aea:	c1 14       	cp	r12, r1
    1aec:	d1 04       	cpc	r13, r1
    1aee:	29 f0       	breq	.+10     	; 0x1afa <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x11e>
    1af0:	e2 e7       	ldi	r30, 0x72	; 114
    1af2:	f0 e0       	ldi	r31, 0x00	; 0
    1af4:	80 81       	ld	r24, Z
    1af6:	84 60       	ori	r24, 0x04	; 4
    1af8:	80 83       	st	Z, r24
    1afa:	01 15       	cp	r16, r1
    1afc:	11 05       	cpc	r17, r1
    1afe:	29 f0       	breq	.+10     	; 0x1b0a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x12e>
    1b00:	e2 e7       	ldi	r30, 0x72	; 114
    1b02:	f0 e0       	ldi	r31, 0x00	; 0
    1b04:	80 81       	ld	r24, Z
    1b06:	88 60       	ori	r24, 0x08	; 8
    1b08:	80 83       	st	Z, r24
    1b0a:	e1 14       	cp	r14, r1
    1b0c:	f1 04       	cpc	r15, r1
    1b0e:	69 f1       	breq	.+90     	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b10:	e2 e7       	ldi	r30, 0x72	; 114
    1b12:	f0 e0       	ldi	r31, 0x00	; 0
    1b14:	80 81       	ld	r24, Z
    1b16:	81 60       	ori	r24, 0x01	; 1
    1b18:	80 83       	st	Z, r24
    1b1a:	27 c0       	rjmp	.+78     	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b1c:	85 e0       	ldi	r24, 0x05	; 5
    1b1e:	98 12       	cpse	r9, r24
    1b20:	2e c0       	rjmp	.+92     	; 0x1b7e <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x1a2>
    1b22:	d0 93 71 1c 	sts	0x1C71, r29	; 0x801c71 <timer_obj+0xb>
    1b26:	c0 93 70 1c 	sts	0x1C70, r28	; 0x801c70 <timer_obj+0xa>
    1b2a:	a1 14       	cp	r10, r1
    1b2c:	b1 04       	cpc	r11, r1
    1b2e:	29 f0       	breq	.+10     	; 0x1b3a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x15e>
    1b30:	e3 e7       	ldi	r30, 0x73	; 115
    1b32:	f0 e0       	ldi	r31, 0x00	; 0
    1b34:	80 81       	ld	r24, Z
    1b36:	82 60       	ori	r24, 0x02	; 2
    1b38:	80 83       	st	Z, r24
    1b3a:	c1 14       	cp	r12, r1
    1b3c:	d1 04       	cpc	r13, r1
    1b3e:	29 f0       	breq	.+10     	; 0x1b4a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x16e>
    1b40:	e3 e7       	ldi	r30, 0x73	; 115
    1b42:	f0 e0       	ldi	r31, 0x00	; 0
    1b44:	80 81       	ld	r24, Z
    1b46:	84 60       	ori	r24, 0x04	; 4
    1b48:	80 83       	st	Z, r24
    1b4a:	01 15       	cp	r16, r1
    1b4c:	11 05       	cpc	r17, r1
    1b4e:	29 f0       	breq	.+10     	; 0x1b5a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x17e>
    1b50:	e3 e7       	ldi	r30, 0x73	; 115
    1b52:	f0 e0       	ldi	r31, 0x00	; 0
    1b54:	80 81       	ld	r24, Z
    1b56:	88 60       	ori	r24, 0x08	; 8
    1b58:	80 83       	st	Z, r24
    1b5a:	e1 14       	cp	r14, r1
    1b5c:	f1 04       	cpc	r15, r1
    1b5e:	29 f0       	breq	.+10     	; 0x1b6a <_ZN7Timer16C1EhPFvvES1_S1_S1_+0x18e>
    1b60:	e3 e7       	ldi	r30, 0x73	; 115
    1b62:	f0 e0       	ldi	r31, 0x00	; 0
    1b64:	80 81       	ld	r24, Z
    1b66:	81 60       	ori	r24, 0x01	; 1
    1b68:	80 83       	st	Z, r24
    1b6a:	b9 86       	std	Y+9, r11	; 0x09
    1b6c:	a8 86       	std	Y+8, r10	; 0x08
    1b6e:	db 86       	std	Y+11, r13	; 0x0b
    1b70:	ca 86       	std	Y+10, r12	; 0x0a
    1b72:	1d 87       	std	Y+13, r17	; 0x0d
    1b74:	0c 87       	std	Y+12, r16	; 0x0c
    1b76:	ff 86       	std	Y+15, r15	; 0x0f
    1b78:	ee 86       	std	Y+14, r14	; 0x0e
    1b7a:	1e 82       	std	Y+6, r1	; 0x06
    1b7c:	1f 82       	std	Y+7, r1	; 0x07
    1b7e:	df 91       	pop	r29
    1b80:	cf 91       	pop	r28
    1b82:	1f 91       	pop	r17
    1b84:	0f 91       	pop	r16
    1b86:	ff 90       	pop	r15
    1b88:	ef 90       	pop	r14
    1b8a:	df 90       	pop	r13
    1b8c:	cf 90       	pop	r12
    1b8e:	bf 90       	pop	r11
    1b90:	af 90       	pop	r10
    1b92:	9f 90       	pop	r9
    1b94:	08 95       	ret

00001b96 <_ZN7Timer168start_msEjjjjh>:
    1b96:	ef 92       	push	r14
    1b98:	ff 92       	push	r15
    1b9a:	0f 93       	push	r16
    1b9c:	1f 93       	push	r17
    1b9e:	cf 93       	push	r28
    1ba0:	df 93       	push	r29
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	ff b6       	in	r15, 0x3f	; 63
    1ba6:	f8 94       	cli
    1ba8:	a4 81       	ldd	r26, Z+4	; 0x04
    1baa:	b5 81       	ldd	r27, Z+5	; 0x05
    1bac:	8c 91       	ld	r24, X
    1bae:	88 7f       	andi	r24, 0xF8	; 248
    1bb0:	8c 93       	st	X, r24
    1bb2:	a4 81       	ldd	r26, Z+4	; 0x04
    1bb4:	b5 81       	ldd	r27, Z+5	; 0x05
    1bb6:	8c 91       	ld	r24, X
    1bb8:	85 60       	ori	r24, 0x05	; 5
    1bba:	8c 93       	st	X, r24
    1bbc:	a6 2f       	mov	r26, r22
    1bbe:	b7 2f       	mov	r27, r23
    1bc0:	a2 31       	cpi	r26, 0x12	; 18
    1bc2:	81 e1       	ldi	r24, 0x11	; 17
    1bc4:	b8 07       	cpc	r27, r24
    1bc6:	10 f0       	brcs	.+4      	; 0x1bcc <_ZN7Timer168start_msEjjjjh+0x36>
    1bc8:	a1 e1       	ldi	r26, 0x11	; 17
    1bca:	b1 e1       	ldi	r27, 0x11	; 17
    1bcc:	8f e0       	ldi	r24, 0x0F	; 15
    1bce:	8a 9f       	mul	r24, r26
    1bd0:	e0 01       	movw	r28, r0
    1bd2:	8b 9f       	mul	r24, r27
    1bd4:	d0 0d       	add	r29, r0
    1bd6:	11 24       	eor	r1, r1
    1bd8:	64 2f       	mov	r22, r20
    1bda:	75 2f       	mov	r23, r21
    1bdc:	62 31       	cpi	r22, 0x12	; 18
    1bde:	81 e1       	ldi	r24, 0x11	; 17
    1be0:	78 07       	cpc	r23, r24
    1be2:	10 f0       	brcs	.+4      	; 0x1be8 <_ZN7Timer168start_msEjjjjh+0x52>
    1be4:	61 e1       	ldi	r22, 0x11	; 17
    1be6:	71 e1       	ldi	r23, 0x11	; 17
    1be8:	8f e0       	ldi	r24, 0x0F	; 15
    1bea:	86 9f       	mul	r24, r22
    1bec:	d0 01       	movw	r26, r0
    1bee:	87 9f       	mul	r24, r23
    1bf0:	b0 0d       	add	r27, r0
    1bf2:	11 24       	eor	r1, r1
    1bf4:	42 2f       	mov	r20, r18
    1bf6:	53 2f       	mov	r21, r19
    1bf8:	42 31       	cpi	r20, 0x12	; 18
    1bfa:	81 e1       	ldi	r24, 0x11	; 17
    1bfc:	58 07       	cpc	r21, r24
    1bfe:	10 f0       	brcs	.+4      	; 0x1c04 <_ZN7Timer168start_msEjjjjh+0x6e>
    1c00:	41 e1       	ldi	r20, 0x11	; 17
    1c02:	51 e1       	ldi	r21, 0x11	; 17
    1c04:	8f e0       	ldi	r24, 0x0F	; 15
    1c06:	84 9f       	mul	r24, r20
    1c08:	b0 01       	movw	r22, r0
    1c0a:	85 9f       	mul	r24, r21
    1c0c:	70 0d       	add	r23, r0
    1c0e:	11 24       	eor	r1, r1
    1c10:	20 2f       	mov	r18, r16
    1c12:	31 2f       	mov	r19, r17
    1c14:	22 31       	cpi	r18, 0x12	; 18
    1c16:	81 e1       	ldi	r24, 0x11	; 17
    1c18:	38 07       	cpc	r19, r24
    1c1a:	10 f0       	brcs	.+4      	; 0x1c20 <_ZN7Timer168start_msEjjjjh+0x8a>
    1c1c:	21 e1       	ldi	r18, 0x11	; 17
    1c1e:	31 e1       	ldi	r19, 0x11	; 17
    1c20:	8f e0       	ldi	r24, 0x0F	; 15
    1c22:	82 9f       	mul	r24, r18
    1c24:	a0 01       	movw	r20, r0
    1c26:	83 9f       	mul	r24, r19
    1c28:	50 0d       	add	r21, r0
    1c2a:	11 24       	eor	r1, r1
    1c2c:	51 8b       	std	Z+17, r21	; 0x11
    1c2e:	40 8b       	std	Z+16, r20	; 0x10
    1c30:	82 81       	ldd	r24, Z+2	; 0x02
    1c32:	93 81       	ldd	r25, Z+3	; 0x03
    1c34:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <tc_vect+0x2>
    1c38:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <tc_vect+0x3>
    1c3c:	82 17       	cp	r24, r18
    1c3e:	93 07       	cpc	r25, r19
    1c40:	89 f4       	brne	.+34     	; 0x1c64 <_ZN7Timer168start_msEjjjjh+0xce>
    1c42:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    1c46:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    1c4a:	b0 93 8b 00 	sts	0x008B, r27	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
    1c4e:	a0 93 8a 00 	sts	0x008A, r26	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
    1c52:	70 93 8d 00 	sts	0x008D, r23	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
    1c56:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
    1c5a:	50 93 85 00 	sts	0x0085, r21	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    1c5e:	40 93 84 00 	sts	0x0084, r20	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    1c62:	40 c0       	rjmp	.+128    	; 0x1ce4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1c64:	20 91 83 02 	lds	r18, 0x0283	; 0x800283 <tc_vect+0x6>
    1c68:	30 91 84 02 	lds	r19, 0x0284	; 0x800284 <tc_vect+0x7>
    1c6c:	82 17       	cp	r24, r18
    1c6e:	93 07       	cpc	r25, r19
    1c70:	89 f4       	brne	.+34     	; 0x1c94 <_ZN7Timer168start_msEjjjjh+0xfe>
    1c72:	d0 93 99 00 	sts	0x0099, r29	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
    1c76:	c0 93 98 00 	sts	0x0098, r28	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
    1c7a:	b0 93 9b 00 	sts	0x009B, r27	; 0x80009b <__TEXT_REGION_LENGTH__+0x7c009b>
    1c7e:	a0 93 9a 00 	sts	0x009A, r26	; 0x80009a <__TEXT_REGION_LENGTH__+0x7c009a>
    1c82:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x7c009d>
    1c86:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x7c009c>
    1c8a:	50 93 95 00 	sts	0x0095, r21	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    1c8e:	40 93 94 00 	sts	0x0094, r20	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    1c92:	28 c0       	rjmp	.+80     	; 0x1ce4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1c94:	20 91 85 02 	lds	r18, 0x0285	; 0x800285 <tc_vect+0x8>
    1c98:	30 91 86 02 	lds	r19, 0x0286	; 0x800286 <tc_vect+0x9>
    1c9c:	82 17       	cp	r24, r18
    1c9e:	93 07       	cpc	r25, r19
    1ca0:	89 f4       	brne	.+34     	; 0x1cc4 <_ZN7Timer168start_msEjjjjh+0x12e>
    1ca2:	d0 93 a9 00 	sts	0x00A9, r29	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    1ca6:	c0 93 a8 00 	sts	0x00A8, r28	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
    1caa:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7c00ab>
    1cae:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7c00aa>
    1cb2:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7c00ad>
    1cb6:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7c00ac>
    1cba:	50 93 a5 00 	sts	0x00A5, r21	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    1cbe:	40 93 a4 00 	sts	0x00A4, r20	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1cc2:	10 c0       	rjmp	.+32     	; 0x1ce4 <_ZN7Timer168start_msEjjjjh+0x14e>
    1cc4:	d0 93 29 01 	sts	0x0129, r29	; 0x800129 <__TEXT_REGION_LENGTH__+0x7c0129>
    1cc8:	c0 93 28 01 	sts	0x0128, r28	; 0x800128 <__TEXT_REGION_LENGTH__+0x7c0128>
    1ccc:	b0 93 2b 01 	sts	0x012B, r27	; 0x80012b <__TEXT_REGION_LENGTH__+0x7c012b>
    1cd0:	a0 93 2a 01 	sts	0x012A, r26	; 0x80012a <__TEXT_REGION_LENGTH__+0x7c012a>
    1cd4:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <__TEXT_REGION_LENGTH__+0x7c012d>
    1cd8:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <__TEXT_REGION_LENGTH__+0x7c012c>
    1cdc:	50 93 25 01 	sts	0x0125, r21	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    1ce0:	40 93 24 01 	sts	0x0124, r20	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    1ce4:	e6 82       	std	Z+6, r14	; 0x06
    1ce6:	81 e0       	ldi	r24, 0x01	; 1
    1ce8:	87 83       	std	Z+7, r24	; 0x07
    1cea:	ff be       	out	0x3f, r15	; 63
    1cec:	df 91       	pop	r29
    1cee:	cf 91       	pop	r28
    1cf0:	1f 91       	pop	r17
    1cf2:	0f 91       	pop	r16
    1cf4:	ff 90       	pop	r15
    1cf6:	ef 90       	pop	r14
    1cf8:	08 95       	ret

00001cfa <_ZN6Timer8C1EhPFvvES1_S1_>:
    1cfa:	bf 92       	push	r11
    1cfc:	cf 92       	push	r12
    1cfe:	df 92       	push	r13
    1d00:	ef 92       	push	r14
    1d02:	ff 92       	push	r15
    1d04:	0f 93       	push	r16
    1d06:	1f 93       	push	r17
    1d08:	cf 93       	push	r28
    1d0a:	df 93       	push	r29
    1d0c:	ec 01       	movw	r28, r24
    1d0e:	b6 2e       	mov	r11, r22
    1d10:	6a 01       	movw	r12, r20
    1d12:	79 01       	movw	r14, r18
    1d14:	89 e4       	ldi	r24, 0x49	; 73
    1d16:	92 e0       	ldi	r25, 0x02	; 2
    1d18:	99 83       	std	Y+1, r25	; 0x01
    1d1a:	88 83       	st	Y, r24
    1d1c:	86 2f       	mov	r24, r22
    1d1e:	73 d1       	rcall	.+742    	; 0x2006 <_Z20tc_handle_to_addressh>
    1d20:	9b 83       	std	Y+3, r25	; 0x03
    1d22:	8a 83       	std	Y+2, r24	; 0x02
    1d24:	eb 2d       	mov	r30, r11
    1d26:	f0 e0       	ldi	r31, 0x00	; 0
    1d28:	ee 0f       	add	r30, r30
    1d2a:	ff 1f       	adc	r31, r31
    1d2c:	e3 58       	subi	r30, 0x83	; 131
    1d2e:	fd 4f       	sbci	r31, 0xFD	; 253
    1d30:	80 81       	ld	r24, Z
    1d32:	91 81       	ldd	r25, Z+1	; 0x01
    1d34:	01 96       	adiw	r24, 0x01	; 1
    1d36:	9d 83       	std	Y+5, r25	; 0x05
    1d38:	8c 83       	std	Y+4, r24	; 0x04
    1d3a:	87 e5       	ldi	r24, 0x57	; 87
    1d3c:	92 e0       	ldi	r25, 0x02	; 2
    1d3e:	99 83       	std	Y+1, r25	; 0x01
    1d40:	88 83       	st	Y, r24
    1d42:	b1 10       	cpse	r11, r1
    1d44:	1d c0       	rjmp	.+58     	; 0x1d80 <_ZN6Timer8C1EhPFvvES1_S1_+0x86>
    1d46:	d0 93 67 1c 	sts	0x1C67, r29	; 0x801c67 <timer_obj+0x1>
    1d4a:	c0 93 66 1c 	sts	0x1C66, r28	; 0x801c66 <timer_obj>
    1d4e:	c1 14       	cp	r12, r1
    1d50:	d1 04       	cpc	r13, r1
    1d52:	29 f0       	breq	.+10     	; 0x1d5e <_ZN6Timer8C1EhPFvvES1_S1_+0x64>
    1d54:	ee e6       	ldi	r30, 0x6E	; 110
    1d56:	f0 e0       	ldi	r31, 0x00	; 0
    1d58:	80 81       	ld	r24, Z
    1d5a:	82 60       	ori	r24, 0x02	; 2
    1d5c:	80 83       	st	Z, r24
    1d5e:	e1 14       	cp	r14, r1
    1d60:	f1 04       	cpc	r15, r1
    1d62:	29 f0       	breq	.+10     	; 0x1d6e <_ZN6Timer8C1EhPFvvES1_S1_+0x74>
    1d64:	ee e6       	ldi	r30, 0x6E	; 110
    1d66:	f0 e0       	ldi	r31, 0x00	; 0
    1d68:	80 81       	ld	r24, Z
    1d6a:	84 60       	ori	r24, 0x04	; 4
    1d6c:	80 83       	st	Z, r24
    1d6e:	01 15       	cp	r16, r1
    1d70:	11 05       	cpc	r17, r1
    1d72:	29 f1       	breq	.+74     	; 0x1dbe <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1d74:	ee e6       	ldi	r30, 0x6E	; 110
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	80 81       	ld	r24, Z
    1d7a:	81 60       	ori	r24, 0x01	; 1
    1d7c:	80 83       	st	Z, r24
    1d7e:	1f c0       	rjmp	.+62     	; 0x1dbe <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1d80:	82 e0       	ldi	r24, 0x02	; 2
    1d82:	b8 12       	cpse	r11, r24
    1d84:	26 c0       	rjmp	.+76     	; 0x1dd2 <_ZN6Timer8C1EhPFvvES1_S1_+0xd8>
    1d86:	d0 93 6b 1c 	sts	0x1C6B, r29	; 0x801c6b <timer_obj+0x5>
    1d8a:	c0 93 6a 1c 	sts	0x1C6A, r28	; 0x801c6a <timer_obj+0x4>
    1d8e:	c1 14       	cp	r12, r1
    1d90:	d1 04       	cpc	r13, r1
    1d92:	29 f0       	breq	.+10     	; 0x1d9e <_ZN6Timer8C1EhPFvvES1_S1_+0xa4>
    1d94:	e0 e7       	ldi	r30, 0x70	; 112
    1d96:	f0 e0       	ldi	r31, 0x00	; 0
    1d98:	80 81       	ld	r24, Z
    1d9a:	82 60       	ori	r24, 0x02	; 2
    1d9c:	80 83       	st	Z, r24
    1d9e:	e1 14       	cp	r14, r1
    1da0:	f1 04       	cpc	r15, r1
    1da2:	29 f0       	breq	.+10     	; 0x1dae <_ZN6Timer8C1EhPFvvES1_S1_+0xb4>
    1da4:	e0 e7       	ldi	r30, 0x70	; 112
    1da6:	f0 e0       	ldi	r31, 0x00	; 0
    1da8:	80 81       	ld	r24, Z
    1daa:	84 60       	ori	r24, 0x04	; 4
    1dac:	80 83       	st	Z, r24
    1dae:	01 15       	cp	r16, r1
    1db0:	11 05       	cpc	r17, r1
    1db2:	29 f0       	breq	.+10     	; 0x1dbe <_ZN6Timer8C1EhPFvvES1_S1_+0xc4>
    1db4:	e0 e7       	ldi	r30, 0x70	; 112
    1db6:	f0 e0       	ldi	r31, 0x00	; 0
    1db8:	80 81       	ld	r24, Z
    1dba:	81 60       	ori	r24, 0x01	; 1
    1dbc:	80 83       	st	Z, r24
    1dbe:	d9 86       	std	Y+9, r13	; 0x09
    1dc0:	c8 86       	std	Y+8, r12	; 0x08
    1dc2:	fb 86       	std	Y+11, r15	; 0x0b
    1dc4:	ea 86       	std	Y+10, r14	; 0x0a
    1dc6:	1d 86       	std	Y+13, r1	; 0x0d
    1dc8:	1c 86       	std	Y+12, r1	; 0x0c
    1dca:	1f 87       	std	Y+15, r17	; 0x0f
    1dcc:	0e 87       	std	Y+14, r16	; 0x0e
    1dce:	1e 82       	std	Y+6, r1	; 0x06
    1dd0:	1f 82       	std	Y+7, r1	; 0x07
    1dd2:	df 91       	pop	r29
    1dd4:	cf 91       	pop	r28
    1dd6:	1f 91       	pop	r17
    1dd8:	0f 91       	pop	r16
    1dda:	ff 90       	pop	r15
    1ddc:	ef 90       	pop	r14
    1dde:	df 90       	pop	r13
    1de0:	cf 90       	pop	r12
    1de2:	bf 90       	pop	r11
    1de4:	08 95       	ret

00001de6 <_ZN7OSTimerC1Eh>:
    1de6:	ef 92       	push	r14
    1de8:	ff 92       	push	r15
    1dea:	0f 93       	push	r16
    1dec:	1f 93       	push	r17
    1dee:	cf 93       	push	r28
    1df0:	7c 01       	movw	r14, r24
    1df2:	c6 2f       	mov	r28, r22
    1df4:	00 e0       	ldi	r16, 0x00	; 0
    1df6:	10 e0       	ldi	r17, 0x00	; 0
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	40 e0       	ldi	r20, 0x00	; 0
    1dfe:	50 e0       	ldi	r21, 0x00	; 0
    1e00:	7c df       	rcall	.-264    	; 0x1cfa <_ZN6Timer8C1EhPFvvES1_S1_>
    1e02:	85 e6       	ldi	r24, 0x65	; 101
    1e04:	92 e0       	ldi	r25, 0x02	; 2
    1e06:	f7 01       	movw	r30, r14
    1e08:	91 83       	std	Z+1, r25	; 0x01
    1e0a:	80 83       	st	Z, r24
    1e0c:	c1 11       	cpse	r28, r1
    1e0e:	04 c0       	rjmp	.+8      	; 0x1e18 <_ZN7OSTimerC1Eh+0x32>
    1e10:	81 e0       	ldi	r24, 0x01	; 1
    1e12:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7c006e>
    1e16:	05 c0       	rjmp	.+10     	; 0x1e22 <_ZN7OSTimerC1Eh+0x3c>
    1e18:	c2 30       	cpi	r28, 0x02	; 2
    1e1a:	19 f4       	brne	.+6      	; 0x1e22 <_ZN7OSTimerC1Eh+0x3c>
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7c0070>
    1e22:	cf 91       	pop	r28
    1e24:	1f 91       	pop	r17
    1e26:	0f 91       	pop	r16
    1e28:	ff 90       	pop	r15
    1e2a:	ef 90       	pop	r14
    1e2c:	08 95       	ret

00001e2e <_ZN7OSTimer13force_timeoutEv>:
    1e2e:	dc 01       	movw	r26, r24
    1e30:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1e32:	f8 94       	cli
    1e34:	83 b7       	in	r24, 0x33	; 51
    1e36:	81 7f       	andi	r24, 0xF1	; 241
    1e38:	83 bf       	out	0x33, r24	; 51
    1e3a:	12 96       	adiw	r26, 0x02	; 2
    1e3c:	4d 91       	ld	r20, X+
    1e3e:	5c 91       	ld	r21, X
    1e40:	13 97       	sbiw	r26, 0x03	; 3
    1e42:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <tc_vect>
    1e46:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <tc_vect+0x1>
    1e4a:	48 17       	cp	r20, r24
    1e4c:	59 07       	cpc	r21, r25
    1e4e:	21 f4       	brne	.+8      	; 0x1e58 <_ZN7OSTimer13force_timeoutEv+0x2a>
    1e50:	86 b5       	in	r24, 0x26	; 38
    1e52:	9f ef       	ldi	r25, 0xFF	; 255
    1e54:	96 bd       	out	0x26, r25	; 38
    1e56:	05 c0       	rjmp	.+10     	; 0x1e62 <_ZN7OSTimer13force_timeoutEv+0x34>
    1e58:	e2 eb       	ldi	r30, 0xB2	; 178
    1e5a:	f0 e0       	ldi	r31, 0x00	; 0
    1e5c:	80 81       	ld	r24, Z
    1e5e:	9f ef       	ldi	r25, 0xFF	; 255
    1e60:	90 83       	st	Z, r25
    1e62:	14 96       	adiw	r26, 0x04	; 4
    1e64:	ed 91       	ld	r30, X+
    1e66:	fc 91       	ld	r31, X
    1e68:	15 97       	sbiw	r26, 0x05	; 5
    1e6a:	91 e0       	ldi	r25, 0x01	; 1
    1e6c:	90 83       	st	Z, r25
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1e6e:	2f bf       	out	0x3f, r18	; 63
    1e70:	93 b7       	in	r25, 0x33	; 51
    1e72:	91 60       	ori	r25, 0x01	; 1
    1e74:	93 bf       	out	0x33, r25	; 51
    1e76:	88 95       	sleep
    1e78:	93 b7       	in	r25, 0x33	; 51
    1e7a:	9e 7f       	andi	r25, 0xFE	; 254
    1e7c:	93 bf       	out	0x33, r25	; 51
    1e7e:	50 96       	adiw	r26, 0x10	; 16
    1e80:	9c 91       	ld	r25, X
    1e82:	89 1b       	sub	r24, r25
    1e84:	08 95       	ret

00001e86 <_ZN7OSTimer5startEj>:
    1e86:	fc 01       	movw	r30, r24
    1e88:	4f b7       	in	r20, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1e8a:	f8 94       	cli
    1e8c:	a4 81       	ldd	r26, Z+4	; 0x04
    1e8e:	b5 81       	ldd	r27, Z+5	; 0x05
    1e90:	8c 91       	ld	r24, X
    1e92:	88 7f       	andi	r24, 0xF8	; 248
    1e94:	8c 93       	st	X, r24
    1e96:	86 2f       	mov	r24, r22
    1e98:	97 2f       	mov	r25, r23
    1e9a:	82 31       	cpi	r24, 0x12	; 18
    1e9c:	91 05       	cpc	r25, r1
    1e9e:	10 f0       	brcs	.+4      	; 0x1ea4 <_ZN7OSTimer5startEj+0x1e>
    1ea0:	81 e1       	ldi	r24, 0x11	; 17
    1ea2:	90 e0       	ldi	r25, 0x00	; 0
    1ea4:	98 2f       	mov	r25, r24
    1ea6:	99 0f       	add	r25, r25
    1ea8:	89 0f       	add	r24, r25
    1eaa:	98 2f       	mov	r25, r24
    1eac:	99 0f       	add	r25, r25
    1eae:	99 0f       	add	r25, r25
    1eb0:	89 0f       	add	r24, r25
    1eb2:	80 95       	com	r24
    1eb4:	80 8b       	std	Z+16, r24	; 0x10
    1eb6:	22 81       	ldd	r18, Z+2	; 0x02
    1eb8:	33 81       	ldd	r19, Z+3	; 0x03
    1eba:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <tc_vect>
    1ebe:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <tc_vect+0x1>
    1ec2:	28 17       	cp	r18, r24
    1ec4:	39 07       	cpc	r19, r25
    1ec6:	41 f4       	brne	.+16     	; 0x1ed8 <_ZN7OSTimer5startEj+0x52>
    1ec8:	a4 81       	ldd	r26, Z+4	; 0x04
    1eca:	b5 81       	ldd	r27, Z+5	; 0x05
    1ecc:	8c 91       	ld	r24, X
    1ece:	85 60       	ori	r24, 0x05	; 5
    1ed0:	8c 93       	st	X, r24
    1ed2:	80 89       	ldd	r24, Z+16	; 0x10
    1ed4:	86 bd       	out	0x26, r24	; 38
    1ed6:	08 c0       	rjmp	.+16     	; 0x1ee8 <_ZN7OSTimer5startEj+0x62>
    1ed8:	a4 81       	ldd	r26, Z+4	; 0x04
    1eda:	b5 81       	ldd	r27, Z+5	; 0x05
    1edc:	8c 91       	ld	r24, X
    1ede:	87 60       	ori	r24, 0x07	; 7
    1ee0:	8c 93       	st	X, r24
    1ee2:	80 89       	ldd	r24, Z+16	; 0x10
    1ee4:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    1ee8:	8f ef       	ldi	r24, 0xFF	; 255
    1eea:	86 83       	std	Z+6, r24	; 0x06
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	87 83       	std	Z+7, r24	; 0x07
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1ef0:	4f bf       	out	0x3f, r20	; 63
    __asm__ volatile ("" ::: "memory");
    1ef2:	08 95       	ret

00001ef4 <_ZN5Timer4stopEv>:
    1ef4:	fc 01       	movw	r30, r24
    1ef6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1ef8:	f8 94       	cli
    1efa:	a4 81       	ldd	r26, Z+4	; 0x04
    1efc:	b5 81       	ldd	r27, Z+5	; 0x05
    1efe:	8c 91       	ld	r24, X
    1f00:	88 7f       	andi	r24, 0xF8	; 248
    1f02:	8c 93       	st	X, r24
    1f04:	16 82       	std	Z+6, r1	; 0x06
    1f06:	17 82       	std	Z+7, r1	; 0x07
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1f08:	9f bf       	out	0x3f, r25	; 63
    __asm__ volatile ("" ::: "memory");
    1f0a:	08 95       	ret

00001f0c <_ZN7Timer165resetEv>:
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	86 81       	ldd	r24, Z+6	; 0x06
    1f10:	82 30       	cpi	r24, 0x02	; 2
    1f12:	b8 f1       	brcs	.+110    	; 0x1f82 <_ZN7Timer165resetEv+0x76>
    1f14:	8f 3f       	cpi	r24, 0xFF	; 255
    1f16:	11 f0       	breq	.+4      	; 0x1f1c <_ZN7Timer165resetEv+0x10>
    1f18:	81 50       	subi	r24, 0x01	; 1
    1f1a:	86 83       	std	Z+6, r24	; 0x06
    1f1c:	82 81       	ldd	r24, Z+2	; 0x02
    1f1e:	93 81       	ldd	r25, Z+3	; 0x03
    1f20:	20 91 7f 02 	lds	r18, 0x027F	; 0x80027f <tc_vect+0x2>
    1f24:	30 91 80 02 	lds	r19, 0x0280	; 0x800280 <tc_vect+0x3>
    1f28:	82 17       	cp	r24, r18
    1f2a:	93 07       	cpc	r25, r19
    1f2c:	39 f4       	brne	.+14     	; 0x1f3c <_ZN7Timer165resetEv+0x30>
    1f2e:	80 89       	ldd	r24, Z+16	; 0x10
    1f30:	91 89       	ldd	r25, Z+17	; 0x11
    1f32:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    1f36:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    1f3a:	08 95       	ret
    1f3c:	20 91 83 02 	lds	r18, 0x0283	; 0x800283 <tc_vect+0x6>
    1f40:	30 91 84 02 	lds	r19, 0x0284	; 0x800284 <tc_vect+0x7>
    1f44:	82 17       	cp	r24, r18
    1f46:	93 07       	cpc	r25, r19
    1f48:	39 f4       	brne	.+14     	; 0x1f58 <_ZN7Timer165resetEv+0x4c>
    1f4a:	80 89       	ldd	r24, Z+16	; 0x10
    1f4c:	91 89       	ldd	r25, Z+17	; 0x11
    1f4e:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
    1f52:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>
    1f56:	08 95       	ret
    1f58:	20 91 85 02 	lds	r18, 0x0285	; 0x800285 <tc_vect+0x8>
    1f5c:	30 91 86 02 	lds	r19, 0x0286	; 0x800286 <tc_vect+0x9>
    1f60:	82 17       	cp	r24, r18
    1f62:	93 07       	cpc	r25, r19
    1f64:	39 f4       	brne	.+14     	; 0x1f74 <_ZN7Timer165resetEv+0x68>
    1f66:	80 89       	ldd	r24, Z+16	; 0x10
    1f68:	91 89       	ldd	r25, Z+17	; 0x11
    1f6a:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
    1f6e:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1f72:	08 95       	ret
    1f74:	80 89       	ldd	r24, Z+16	; 0x10
    1f76:	91 89       	ldd	r25, Z+17	; 0x11
    1f78:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
    1f7c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
    1f80:	08 95       	ret
    1f82:	cf 01       	movw	r24, r30
    1f84:	b7 cf       	rjmp	.-146    	; 0x1ef4 <_ZN5Timer4stopEv>
    1f86:	08 95       	ret

00001f88 <_ZN6Timer85resetEv>:
    1f88:	fc 01       	movw	r30, r24
    1f8a:	86 81       	ldd	r24, Z+6	; 0x06
    1f8c:	82 30       	cpi	r24, 0x02	; 2
    1f8e:	a0 f0       	brcs	.+40     	; 0x1fb8 <_ZN6Timer85resetEv+0x30>
    1f90:	8f 3f       	cpi	r24, 0xFF	; 255
    1f92:	11 f0       	breq	.+4      	; 0x1f98 <_ZN6Timer85resetEv+0x10>
    1f94:	81 50       	subi	r24, 0x01	; 1
    1f96:	86 83       	std	Z+6, r24	; 0x06
    1f98:	22 81       	ldd	r18, Z+2	; 0x02
    1f9a:	33 81       	ldd	r19, Z+3	; 0x03
    1f9c:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <tc_vect>
    1fa0:	90 91 7e 02 	lds	r25, 0x027E	; 0x80027e <tc_vect+0x1>
    1fa4:	28 17       	cp	r18, r24
    1fa6:	39 07       	cpc	r19, r25
    1fa8:	19 f4       	brne	.+6      	; 0x1fb0 <_ZN6Timer85resetEv+0x28>
    1faa:	80 89       	ldd	r24, Z+16	; 0x10
    1fac:	86 bd       	out	0x26, r24	; 38
    1fae:	08 95       	ret
    1fb0:	80 89       	ldd	r24, Z+16	; 0x10
    1fb2:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    1fb6:	08 95       	ret
    1fb8:	cf 01       	movw	r24, r30
    1fba:	9c cf       	rjmp	.-200    	; 0x1ef4 <_ZN5Timer4stopEv>
    1fbc:	08 95       	ret

00001fbe <_Z22port_handle_to_addressh>:
    1fbe:	28 2f       	mov	r18, r24
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	41 e0       	ldi	r20, 0x01	; 1
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	ba 01       	movw	r22, r20
    1fc8:	02 c0       	rjmp	.+4      	; 0x1fce <_Z22port_handle_to_addressh+0x10>
    1fca:	66 0f       	add	r22, r22
    1fcc:	77 1f       	adc	r23, r23
    1fce:	8a 95       	dec	r24
    1fd0:	e2 f7       	brpl	.-8      	; 0x1fca <_Z22port_handle_to_addressh+0xc>
    1fd2:	cb 01       	movw	r24, r22
    1fd4:	40 91 73 1c 	lds	r20, 0x1C73	; 0x801c73 <_ZL10port_usage>
    1fd8:	50 91 74 1c 	lds	r21, 0x1C74	; 0x801c74 <_ZL10port_usage+0x1>
    1fdc:	64 23       	and	r22, r20
    1fde:	75 23       	and	r23, r21
    1fe0:	67 2b       	or	r22, r23
    1fe2:	71 f4       	brne	.+28     	; 0x2000 <__DATA_REGION_LENGTH__>
    1fe4:	84 2b       	or	r24, r20
    1fe6:	95 2b       	or	r25, r21
    1fe8:	90 93 74 1c 	sts	0x1C74, r25	; 0x801c74 <_ZL10port_usage+0x1>
    1fec:	80 93 73 1c 	sts	0x1C73, r24	; 0x801c73 <_ZL10port_usage>
    1ff0:	22 0f       	add	r18, r18
    1ff2:	33 1f       	adc	r19, r19
    1ff4:	f9 01       	movw	r30, r18
    1ff6:	e7 57       	subi	r30, 0x77	; 119
    1ff8:	fd 4f       	sbci	r31, 0xFD	; 253
    1ffa:	80 81       	ld	r24, Z
    1ffc:	91 81       	ldd	r25, Z+1	; 0x01
    1ffe:	08 95       	ret
    2000:	80 e0       	ldi	r24, 0x00	; 0
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	08 95       	ret

00002006 <_Z20tc_handle_to_addressh>:
    2006:	60 91 72 1c 	lds	r22, 0x1C72	; 0x801c72 <_ZL8tc_usage>
    200a:	28 2f       	mov	r18, r24
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	46 2f       	mov	r20, r22
    2010:	50 e0       	ldi	r21, 0x00	; 0
    2012:	08 2e       	mov	r0, r24
    2014:	02 c0       	rjmp	.+4      	; 0x201a <_Z20tc_handle_to_addressh+0x14>
    2016:	55 95       	asr	r21
    2018:	47 95       	ror	r20
    201a:	0a 94       	dec	r0
    201c:	e2 f7       	brpl	.-8      	; 0x2016 <_Z20tc_handle_to_addressh+0x10>
    201e:	40 fd       	sbrc	r20, 0
    2020:	14 c0       	rjmp	.+40     	; 0x204a <_Z20tc_handle_to_addressh+0x44>
    2022:	41 e0       	ldi	r20, 0x01	; 1
    2024:	50 e0       	ldi	r21, 0x00	; 0
    2026:	fa 01       	movw	r30, r20
    2028:	02 c0       	rjmp	.+4      	; 0x202e <_Z20tc_handle_to_addressh+0x28>
    202a:	ee 0f       	add	r30, r30
    202c:	ff 1f       	adc	r31, r31
    202e:	8a 95       	dec	r24
    2030:	e2 f7       	brpl	.-8      	; 0x202a <_Z20tc_handle_to_addressh+0x24>
    2032:	cf 01       	movw	r24, r30
    2034:	86 2b       	or	r24, r22
    2036:	80 93 72 1c 	sts	0x1C72, r24	; 0x801c72 <_ZL8tc_usage>
    203a:	22 0f       	add	r18, r18
    203c:	33 1f       	adc	r19, r19
    203e:	f9 01       	movw	r30, r18
    2040:	e3 58       	subi	r30, 0x83	; 131
    2042:	fd 4f       	sbci	r31, 0xFD	; 253
    2044:	80 81       	ld	r24, Z
    2046:	91 81       	ldd	r25, Z+1	; 0x01
    2048:	08 95       	ret
    204a:	80 e0       	ldi	r24, 0x00	; 0
    204c:	90 e0       	ldi	r25, 0x00	; 0
    204e:	08 95       	ret

00002050 <__tablejump2__>:
    2050:	ee 0f       	add	r30, r30
    2052:	ff 1f       	adc	r31, r31
    2054:	88 1f       	adc	r24, r24
    2056:	8b bf       	out	0x3b, r24	; 59
    2058:	07 90       	elpm	r0, Z+
    205a:	f6 91       	elpm	r31, Z
    205c:	e0 2d       	mov	r30, r0
    205e:	19 94       	eijmp

00002060 <_exit>:
    2060:	f8 94       	cli

00002062 <__stop_program>:
    2062:	ff cf       	rjmp	.-2      	; 0x2062 <__stop_program>
